using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using PhoenixProject.Client;
using PhoenixProject.Network;
using PhoenixProject.Interfaces;
using PhoenixProject.ServerBase;
using PhoenixProject.Network.GamePackets;
using PhoenixProject.Game.ConquerStructures.Society;
using PhoenixProject.Game.ConquerStructures;
using PhoenixProject.Statement;
using PhoenixProject.Database;

namespace PhoenixProject
{
    public class Dialogs
    {
        public static IniFile AvatarLinker = null;
        public GameState Client;
        public List<NpcReply> Replies;
        public void Text(string text)
        {
            if (text.Length > 100)
            {
                if (text.Length > 1000)
                    text = text.Substring(0, 1000);
                int myLength = text.Length;
                while (myLength > 0)
                {
                    int lastIndex = 100;
                    if (myLength < 100)
                        lastIndex = myLength;
                    string txt = text.Substring(0, lastIndex);
                    text = text.Substring(lastIndex, myLength - lastIndex);
                    myLength -= lastIndex;
                    Replies.Add(new NpcReply(NpcReply.Dialog, txt));
                }
            }
            else
                Replies.Add(new NpcReply(NpcReply.Dialog, text));
        }
        public void Option(string text, byte id)
        {
            Replies.Add(new NpcReply(NpcReply.Option, text) { OptionID = id });
        }
        public void Avatar(uint npcMesh)
        {
            if (Replies.Count == 0)
                Replies.Add(new NpcReply(NpcReply.Avatar, "") { InputMaxLength = (byte)npcMesh });
            else
                Replies[0].InputMaxLength = (byte)npcMesh;
        }
        public static MonsterHunterStats MonsterHunterStats;
        public void Input(string text, byte id, byte maxLength)
        {
            Replies.Add(new NpcReply()
            {
                DontDisplay = true,
                InputMaxLength = maxLength,
                InteractType = NpcReply.Input,
                OptionID = id,
                Text = text
            });
        }
        public void Send()
        {
            foreach (NpcReply nr in Replies)
                Client.Send(nr);
            Client.Send(new NpcReply() { InteractType = 100, DontDisplay = false });
            Replies.Clear();
            Sent = true;
        }
        private bool Sent = false;
        public static ISkill LearnableSpell(ushort spellid)
        {
            ISkill spell = new Spell(true);
            spell.ID = spellid;
            return spell;
        }
        public static bool InvalidNameChangerCharacters(string Name)
        {


            if (Name.Length > 16)
                Name = Name.Substring(0, 16);
            if (Name == "")
                return false;
            foreach (char c in Name)
                if (PhoenixProject.ServerBase.Kernel.InvalidCharacters.Contains(c) || (byte)c < 48)
                    return true;
            return true;


        }
        public static ISkill LearnableSpell(ushort spellid, byte level)
        {
            ISkill spell = new Spell(true);
            spell.ID = spellid;
            spell.Level = level;
            return spell;
        }
        public static bool CheckNumberPassword(string password)
        {
            if (password == "")
                return false;
            foreach (char c in password)
                if (!((byte)c >= 48 && (byte)c <= 57))
                    return false;
            return true;
        }
        public static bool InvalidCharacters(string Name)
        {


            if (Name.Length > 16)
                Name = Name.Substring(0, 16);
            if (Name == "")
                return false;
            foreach (char c in Name)
                if (PhoenixProject.ServerBase.Kernel.InvalidCharacters.Contains(c) || (byte)c < 48)
                    return true;
            return true;


        }

        public static bool InvalidCharacters2(string Name)
        {
            var rdr = new PhoenixProject.Database.MySqlReader(new MySqlCommand(MySqlCommandType.SELECT).Select("entities").Where("name", Name));
            if (rdr.Read())
            {
                rdr.Close();
                rdr.Dispose();
                // PhoenixProject.ServerBase.Kernel.InvalidCharacters.Contains(Name);
                return false;

            }
            rdr.Close();
            rdr.Dispose();
            return true;


        }
        public static bool InvalidCharacters3(string Name)
        {
            var rdr = new PhoenixProject.Database.MySqlReader(new MySqlCommand(MySqlCommandType.SELECT).Select("entities").Where("namechange", Name));
            if (rdr.Read())
            {
                rdr.Close();
                //r.Close();
                rdr.Dispose();

                return false;

            }
            rdr.Close();
            rdr.Dispose();
            return true;


        }
        public static bool CheckNumberPassword2(string password)
        {
            if (password == "")
                return false;
            foreach (char c in password)
                if (!((byte)c >= 90 && (byte)c <= 150))
                    return true;
            return true;
        }
        public static void GetDialog(NpcRequest npcRequest, GameState client)
        {
            if (AvatarLinker == null)
                AvatarLinker = new IniFile("\\database\\npc.ini");
            //Console.WriteLine("[" + client.Entity.Name + "][NPC] " + npcRequest.NpcID + " : " + npcRequest.OptionID);
            if (!client.Map.Npcs.ContainsKey(client.ActiveNpc) || npcRequest == null || client == null || client.Entity == null || (npcRequest.NpcID == 0 && npcRequest.OptionID == 255))
                return;
            if (client.Trade != null)
                if (client.Trade.InTrade)
                    return;
            Dialogs dialog = new Dialogs();
            dialog.Client = client;
            dialog.Replies = new List<NpcReply>();
            INpc npcs = null;
            if (client.Map.Npcs.TryGetValue(client.ActiveNpc, out npcs))
            {
                ushort avatar = (ushort)AvatarLinker.ReadInt16("NpcType" + (npcs.Mesh / 10), "SimpleObjID", 1);

                dialog.Avatar(avatar);
            }

            switch (client.Entity.MapID)
            {

                #region Mr.HassaN New Mount
                case 24109369:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Hello" + client.Entity.Name + " I Sell Now Mount and Germant for 100k cps?");
                                    dialog.Option("ErrantryRobe.", 1);
                                    dialog.Option("DancingSnake", 2);
                                    dialog.Option("MakersProblems", 3);
                                    dialog.Option("NO Thx.", 255);
                                    dialog.Avatar(116);
                                    dialog.Send();

                                    break;
                                }
                            case 1:
                                {
                                    if (client.Entity.ConquerPoints >= 100000)
                                    {
                                        client.Entity.ConquerPoints -= 100000;
                                        client.Inventory.Add(188155, 0, 1);
                                    }
                                    else
                                    {

                                        dialog.Text("you don't have enought cps");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(116);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 2:
                                {
                                    if (client.Entity.ConquerPoints >= 100000)
                                    {
                                        client.Entity.ConquerPoints -= 100000;
                                        client.Inventory.Add(200458, 0, 1);
                                    }
                                    else
                                    {

                                        dialog.Text("you don't have enought cps");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(116);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 3:
                                {
                                    if (client.Entity.ConquerPoints >= 100000)
                                    {
                                        client.Entity.ConquerPoints -= 100000;
                                        client.Inventory.Add(200453, 0, 1);
                                    }
                                    else
                                    {

                                        dialog.Text("you don't have enought cps");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(116);
                                        dialog.Send();


                                    }
                                    break;
                                }
                        }
                        break;
                    }
                #endregion Mr.HassaN New Mount
                #region Twin City
                case 1002:
                    {
                        switch (client.ActiveNpc)
                        {
                            #region Lune(Enter Moon Platform)
                            case 12116:
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                dialog.Text("Would you like to enter the Moon Platform ?");
                                                dialog.Option("Yes.", 1);
                                                dialog.Option("No.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 1:
                                            {
                                                client.Entity.Teleport(1100, 184, 164);
                                                dialog.Text("Welcome in Moon Platform!");
                                                dialog.Option("Thanks.", 1);
                                                dialog.Send();
                                                break;
                                            }
                                    }
                                    break;
                                }
                            #endregion
                            #region Enter Guild Arena
                            case 380:
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                dialog.Text("Would you like to enter the guild war arena?");
                                                dialog.Option("Yes.", 1);
                                                dialog.Option("No.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 1:
                                            {
                                                client.Entity.Teleport(1038, 348, 339);
                                                break;
                                            }
                                    } break;
                                }
                            #endregion

                            #region Twin City
                            case 10080:
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                if (client.Entity.PKPoints < 29)
                                                {
                                                    dialog.Text("Hey there " + client.Entity.Name + "! I'm the craziest conductress!\nI also know how to send you to all the main cities.\nAnyways... Where are you headed? I may be able to teleport you there for 5,000 gold.");
                                                    dialog.Option("Phoenix Castle.", 1);
                                                    dialog.Option("Ape City.", 2);
                                                    dialog.Option("Desert City.", 3);
                                                    dialog.Option("Bird Island.", 4);
                                                    dialog.Option("Mine Cave.", 5);
                                                    dialog.Option("Market.", 6);
                                                    dialog.Option("I don't care.", 255);
                                                    dialog.Send();
                                                    break;
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not help MURDERS!");
                                                    dialog.Option("Ouch..", 255);
                                                    dialog.Option("Then you are of no use to me!\nI'll kill you too!", 100);
                                                    dialog.Send();
                                                    break;
                                                }
                                            }
                                        case 1:
                                        case 2:
                                        case 3:
                                        case 4:
                                        case 5:
                                        case 6:
                                            {
                                                ushort Map = 1002, X, Y;
                                                if (npcRequest.OptionID == 1)
                                                {
                                                    X = 958;
                                                    Y = 555;
                                                }
                                                else if (npcRequest.OptionID == 2)
                                                {
                                                    X = 555;
                                                    Y = 957;
                                                }
                                                else if (npcRequest.OptionID == 3)
                                                {
                                                    X = 69;
                                                    Y = 473;
                                                }
                                                else if (npcRequest.OptionID == 4)
                                                {
                                                    X = 232;
                                                    Y = 190;
                                                }
                                                else if (npcRequest.OptionID == 5)
                                                {
                                                    X = 53;
                                                    Y = 399;
                                                }
                                                else
                                                {
                                                    X = 211;
                                                    Y = 196;
                                                    Map = 1036;
                                                }
                                                if (client.Entity.Money >= 100)
                                                {
                                                    client.Entity.Money -= 100;
                                                    client.Entity.Teleport(Map, X, Y);
                                                }
                                                else
                                                {
                                                    dialog.Text("Hey! You don't have 100 gold do you?\nDon't you dare try to cheat me or I'll call the guards!");
                                                    dialog.Option("Crazy!", 255);
                                                    dialog.Send();
                                                }
                                                break;

                                            }
                                        case 100:
                                            {
                                                client.Entity.AddFlag(Update.Flags.FlashingName);
                                                client.Entity.FlashingNameStamp = Time32.Now;
                                                client.Entity.FlashingNameTime = 30;
                                                client.Send(PhoenixProject.ServerBase.Constants.Warrent);
                                                dialog.Text("Guards! HELP! " + client.Entity.Name + " is trying to kill me!!");
                                                dialog.Option("I'll get you!", 255);
                                                dialog.Send();
                                                break;
                                            }
                                    }
                                    break;
                                }
                            #endregion

                            #region Celestine
                            case 20005:
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                dialog.Text("Did you see those plants while comming over here? Do you see that pond right over there? You see I need clean water badly. If the clean water is united with 7 of 9 unique gems(except tortoise, thunder, glory) it can heal plants and clean ponds. In exchange of those 8 items, I will give you back a celestial stone, which is needed for first reborn.");
                                                dialog.Option("How do I get gems?", 1);
                                                dialog.Option("How do I get clean water?", 2);
                                                dialog.Option("I got the items.", 3);
                                                dialog.Option("Boring...", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 1:
                                            {
                                                dialog.Text("You can get gems simply by minning or killing monsters, as they drop gems sometime.");
                                                dialog.Option("How do I get clean water?", 2);
                                                dialog.Option("I got the items.", 3);
                                                dialog.Option("Boring...", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 2:
                                            {
                                                dialog.Text("In the first Island Map in Adventure Zone(GC1), you might find the WaterLord(517,732). You may kill it and it may give a CleanWater, with a 50% percent of success. Once killed you may wait 15 minutes, before it will respawn again.");
                                                dialog.Option("How do I get gems?", 1);
                                                dialog.Option("I got the items.", 3);
                                                dialog.Option("Boring...", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 3:
                                            {
                                                bool hasfornow = true;
                                                uint baseid = 700001;
                                                for (int c = 0; c < 70; c += 10)
                                                    if (!client.Inventory.Contains((uint)(baseid + c), 1))
                                                    {
                                                        hasfornow = false;
                                                        break;
                                                    }
                                                if (!hasfornow)
                                                {
                                                    dialog.Text("You don't meet the requierments!");
                                                    dialog.Send();
                                                    break;
                                                }
                                                if (client.Inventory.Contains(721258, 1))
                                                {
                                                    for (int c = 0; c < 70; c += 10)
                                                        client.Inventory.Remove((uint)(baseid + c), 1);
                                                    client.Inventory.Remove(721258, 1);
                                                    client.Inventory.Add(721259, 0, 1);
                                                }
                                                else
                                                {
                                                    dialog.Text("You don't meet the requierments!");
                                                    dialog.Send();
                                                    break;
                                                }
                                                break;
                                            }
                                    }
                                    break;
                                }
                            #endregion

                            #region GuildDirector
                            case 10003:
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                dialog.Text("Hello there. Do you want to create a new guild? You need level 90 and 500000 silver and you have to not belong to any guild. If you are a guild leader, then you can name 5 deputy leaders.");
                                                dialog.Option("Create guild.", 1);
                                                dialog.Option("Name deputy leader.", 3);
                                                dialog.Option("Move leadership.", 6);
                                                dialog.Option("Disband guild.", 9);
                                                // dialog.Option("Remove ins From my items.", 15);
                                                dialog.Option("I don't have that.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 15:
                                            {
                                                if (client.Guild != null)
                                                {
                                                    dialog.Text("Sorry you Already in guild i cant help you, need to Quit so i can help You.");
                                                    dialog.Option("Ahh.", 255);
                                                    dialog.Send();
                                                }
                                                else
                                                {
                                                    //PhoenixProject.Database.ConquerItemTable.deleteallguildins(client);
                                                    dialog.Text("Congratulations, all your items is back to normal status again, Now you need to Relog!");
                                                    dialog.Option("Thanks, i'll relog.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 9:
                                            {
                                                if (client.Guild != null && client.AsMember.Rank == PhoenixProject.Game.Enums.GuildMemberRank.GuildLeader)
                                                {
                                                    dialog.Text("Are you sure you want to disband your guild?");
                                                    dialog.Option("Yes.", 10);
                                                    dialog.Option("Ah, nevermind.", 255);
                                                    dialog.Send();
                                                }
                                                else
                                                {
                                                    dialog.Text("You don't meet the requierments.");
                                                    dialog.Option("Ahh.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 10:
                                            {
                                                if (client.Guild != null && client.AsMember.Rank == PhoenixProject.Game.Enums.GuildMemberRank.GuildLeader)
                                                {
                                                    client.Guild.Disband();
                                                }
                                                break;
                                            }
                                        case 6:
                                            {
                                                if (client.Guild != null && client.AsMember.Rank == PhoenixProject.Game.Enums.GuildMemberRank.GuildLeader)
                                                {
                                                    dialog.Text("Input here the member name you want to promote as guild leader.");
                                                    dialog.Input("Here:", 7, 16);
                                                    dialog.Option("Ah, nevermind.", 255);
                                                    dialog.Send();
                                                }
                                                else
                                                {
                                                    dialog.Text("You don't meet the requierments.");
                                                    dialog.Option("Ahh.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 7:
                                            {
                                                if (client.Guild != null && client.AsMember.Rank == PhoenixProject.Game.Enums.GuildMemberRank.GuildLeader)
                                                {
                                                    if (npcRequest.Input != "")
                                                    {
                                                        var member = client.Guild.GetMemberByName(npcRequest.Input);
                                                        if (member == null)
                                                        {
                                                            dialog.Text("There is no such member in your guild.");
                                                            dialog.Option("Ah, nevermind.", 255);
                                                            dialog.Send();
                                                            return;
                                                        }
                                                        else
                                                        {
                                                            if (member.Rank == PhoenixProject.Game.Enums.GuildMemberRank.GuildLeader)
                                                            {
                                                                dialog.Text("You cannot promote this member anymore.");
                                                                dialog.Option("Ah, nevermind.", 255);
                                                                dialog.Send();
                                                                return;
                                                            }
                                                            else
                                                            {
                                                                if (member.Rank == PhoenixProject.Game.Enums.GuildMemberRank.DeputyLeader)
                                                                    client.Guild.DeputyLeaderCount--;
                                                                member.Rank = PhoenixProject.Game.Enums.GuildMemberRank.GuildLeader;
                                                                if (member.IsOnline)
                                                                {
                                                                    client.Guild.SendGuild(member.Client);
                                                                    member.Client.Entity.GuildRank = (ushort)member.Rank;
                                                                    member.Client.Screen.FullWipe();
                                                                    member.Client.Screen.Reload(null);
                                                                }
                                                                client.AsMember.Rank = PhoenixProject.Game.Enums.GuildMemberRank.DeputyLeader;
                                                                if (client.AsMember.IsOnline)
                                                                {
                                                                    client.Guild.SendGuild(client);
                                                                    client.Entity.GuildRank = (ushort)member.Rank;
                                                                    client.Screen.FullWipe();
                                                                    client.Screen.Reload(null);
                                                                }
                                                                client.Guild.DeputyLeaderCount++;
                                                            }
                                                        }
                                                    }
                                                }
                                                break;
                                            }
                                        case 3:
                                            {
                                                if (client.Guild != null && client.AsMember.Rank == PhoenixProject.Game.Enums.GuildMemberRank.GuildLeader)
                                                {
                                                    dialog.Text("You have now " + client.Guild.DeputyLeaderCount + " named deupty leaders.");
                                                    if (client.Guild.DeputyLeaderCount == 5)
                                                    {
                                                        dialog.Text("You cannot name any other deupty leader.");
                                                        dialog.Option("Ah, nevermind.", 255);
                                                        dialog.Send();
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("Input here the member name you want to promote as deputy leader.");
                                                        dialog.Input("Here:", 4, 16);
                                                        dialog.Option("Ah, nevermind.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You don't meet the requierments.");
                                                    dialog.Option("Ahh.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 4:
                                            {
                                                if (client.Guild != null && client.AsMember.Rank == PhoenixProject.Game.Enums.GuildMemberRank.GuildLeader)
                                                {
                                                    if (npcRequest.Input != "")
                                                    {
                                                        var member = client.Guild.GetMemberByName(npcRequest.Input);
                                                        if (member == null)
                                                        {
                                                            dialog.Text("There is no such member in your guild.");
                                                            dialog.Option("Ah, nevermind.", 255);
                                                            dialog.Send();
                                                            return;
                                                        }
                                                        else
                                                        {
                                                            if (member.Rank != PhoenixProject.Game.Enums.GuildMemberRank.Member)
                                                            {
                                                                dialog.Text("You cannot promote this member anymore.");
                                                                dialog.Option("Ah, nevermind.", 255);
                                                                dialog.Send();
                                                                return;
                                                            }
                                                            else
                                                            {
                                                                member.Rank = PhoenixProject.Game.Enums.GuildMemberRank.DeputyLeader;
                                                                if (member.IsOnline)
                                                                {
                                                                    client.Guild.SendGuild(member.Client);
                                                                    member.Client.Entity.GuildRank = (ushort)member.Rank;
                                                                    member.Client.Screen.FullWipe();
                                                                    member.Client.Screen.Reload(null);
                                                                }
                                                                client.Guild.DeputyLeaderCount++;
                                                            }
                                                        }
                                                    }
                                                }
                                                break;
                                            }
                                        case 1:
                                            {
                                                if (client.Guild == null && client.Entity.Level >= 90 && client.Entity.Money >= 500000)
                                                {
                                                    dialog.Text("Name your guild. The name must have less than 16 characters of any type.");
                                                    dialog.Input("Here:", 2, 16);
                                                    dialog.Option("Ah, nevermind.", 255);
                                                    dialog.Send();
                                                }
                                                else
                                                {
                                                    dialog.Text("You don't meet the requierments.");
                                                    dialog.Option("Ahh.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 2:
                                            {
                                                if (client.Guild == null && client.Entity.Level >= 90 && client.Entity.Money >= 500000)
                                                {
                                                    if (npcRequest.Input != "")
                                                    {
                                                        if (!Guild.CheckNameExist(npcRequest.Input))
                                                        {
                                                            client.Entity.Money -= 500000;
                                                            Guild guild = new Guild(client.Entity.Name);

                                                            guild.ID = Program.nextGuildID;
                                                            Program.nextGuildID++;
                                                            //guild.ID = Guild.GuildCounter.Next;
                                                            guild.SilverFund = 500000;
                                                            client.AsMember = new PhoenixProject.Game.ConquerStructures.Society.Guild.Member(guild.ID)
                                                            {
                                                                SilverDonation = 500000,
                                                                ID = client.Entity.UID,
                                                                Level = client.Entity.Level,
                                                                Name = client.Entity.Name,
                                                                Rank = PhoenixProject.Game.Enums.GuildMemberRank.GuildLeader,
                                                            };
                                                            if (client.NobilityInformation != null)
                                                            {
                                                                client.AsMember.Gender = client.NobilityInformation.Gender;
                                                                client.AsMember.NobilityRank = client.NobilityInformation.Rank;
                                                            }

                                                            client.Entity.GuildID = (ushort)guild.ID;
                                                            client.Entity.GuildRank = (ushort)PhoenixProject.Game.Enums.GuildMemberRank.GuildLeader;
                                                            guild.Leader = client.AsMember;
                                                            client.Guild = guild;
                                                            Database.ArsenalTable.LoadArsenal(guild);
                                                            //client.Guild.Arsenal = new Game.Features.Arsenal((ushort)client.Guild.ID);

                                                            guild.Create(npcRequest.Input);
                                                            guild.Name = npcRequest.Input;
                                                            guild.MemberCount++;
                                                            guild.SendGuild(client);
                                                            guild.SendName(client);
                                                            client.Screen.FullWipe();
                                                            client.Screen.Reload(null);
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("There is a Guild Already with this Name i'm sorry.");
                                                            dialog.Option("Choose another Name", 1);
                                                            dialog.Option("Ok Sorry.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                }
                                                break;
                                            }
                                    }
                                    break;
                                }
                            #endregion

                            #region ClanManager
                            case 5522416:
                                {
                                    switch (npcRequest.OptionID)
                                    {

                                        case 0:
                                            {
                                                if (client.Entity.Myclan == null)
                                                {
                                                    dialog.Text("Hello! Would you like to make a clan, but you need 500.000 Silvers");
                                                    dialog.Option("Create Clan,", 1);
                                                    dialog.Option("Just Passing By!", 255);
                                                    dialog.Avatar(40);
                                                    dialog.Send();
                                                }
                                                else
                                                {
                                                    if (client.Entity.Myclan.ClanLider == client.Entity.Name)
                                                    {
                                                        dialog.Text("Hello! i can help you to upgrade your clan level, what you want?");
                                                        dialog.Option("Upgrade Clan lvl", 2);
                                                        //dialog.Option("Disband my Clan", 10);
                                                        dialog.Option("Just Passing By!", 255);
                                                        dialog.Avatar(40);
                                                        dialog.Send();
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("you already in clan cant help you to create any clan now");
                                                        dialog.Option("Thanks", 255);
                                                        dialog.Avatar(40);
                                                        dialog.Send();
                                                    }
                                                }
                                                break;
                                            }
                                        case 12:
                                            {
                                                foreach (Game.Clans clans in ServerBase.Kernel.ServerClans.Values)
                                                {
                                                    if (clans.Allies.ContainsKey(client.Entity.Myclan.ClanId))
                                                    {
                                                        clans.Allies.Remove(client.Entity.Myclan.ClanId);
                                                        clans.DeleteRelation(client.Entity.Myclan.ClanId, ClanRelations.RelationTypes.Allies);
                                                        clans.SendMessage(new ClanRelations(clans, ClanRelations.RelationTypes.Allies));

                                                    }
                                                }
                                                foreach (Game.Clans clanss in ServerBase.Kernel.ServerClans.Values)
                                                {
                                                    if (clanss.Enemies.ContainsKey(client.Entity.Myclan.ClanId))
                                                    {
                                                        clanss.Enemies.Remove(client.Entity.Myclan.ClanId);
                                                        clanss.DeleteRelation(client.Entity.Myclan.ClanId, ClanRelations.RelationTypes.Enemies);
                                                        clanss.SendMessage(new ClanRelations(clanss, ClanRelations.RelationTypes.Enemies));

                                                    }
                                                }

                                                PhoenixProject.ServerBase.Kernel.SendWorldMessage(new Network.GamePackets.Message("clan: " + client.Entity.Myclan.ClanName + " Disbanded!", System.Drawing.Color.White, Network.GamePackets.Message.Clan), PhoenixProject.ServerBase.Kernel.GamePool.Values);

                                                if (PhoenixProject.ServerBase.Kernel.ServerClans.ContainsKey(client.Entity.Myclan.ClanId))
                                                    PhoenixProject.ServerBase.Kernel.ServerClans.Remove(client.Entity.Myclan.ClanId);
                                                Database.Clans.DeleteClan(client.Entity.Myclan.ClanId);

                                                var varr = ServerBase.Kernel.GamePool.Values.GetEnumerator();
                                                varr.MoveNext();
                                                int COunt = ServerBase.Kernel.GamePool.Count;
                                                for (uint c = 0;
                                                    c < COunt;
                                                    c++)
                                                {
                                                    if (c >= COunt) break;

                                                    Client.GameState clien = (varr.Current as Client.GameState);

                                                    if (clien.Entity.Myclan != null)
                                                    {
                                                        if (client.Entity.UID != clien.Entity.UID)
                                                        {
                                                            if (clien.Entity.Myclan.ClanId == client.Entity.Myclan.ClanId)
                                                            {
                                                                Network.GamePackets.Clan cl = new PhoenixProject.Network.GamePackets.Clan(clien, 22);
                                                                clien.Send(cl.ToArray());
                                                                clien.Entity.ClanId = 0;
                                                                clien.Entity.ClanRank = 0;
                                                                clien.Entity.Myclan = null;
                                                                clien.Entity.ClanName = null;
                                                                Database.Clans.KickClan(clien.Entity.Name);
                                                                ServerBase.Kernel.GamePool[client.Entity.UID].Screen.FullWipe();
                                                                ServerBase.Kernel.GamePool[client.Entity.UID].Screen.Reload(null);
                                                            }
                                                        }
                                                    }
                                                    varr.MoveNext();

                                                }
                                                Network.GamePackets.Clan acl = new PhoenixProject.Network.GamePackets.Clan(client, 22);
                                                client.Send(acl.ToArray());
                                                client.Entity.Myclan = null;
                                                client.Entity.ClanRank = 0;
                                                client.Entity.ClanId = 0;
                                                client.Entity.ClanName = null;
                                                Database.Clans.KickClan(client.Entity.Name);
                                                client.Entity.Myclan = null;
                                                ServerBase.Kernel.GamePool[client.Entity.UID].Screen.FullWipe();
                                                ServerBase.Kernel.GamePool[client.Entity.UID].Screen.Reload(null);
                                                break;
                                            }
                                        case 10:
                                            {
                                                dialog.Text("You sure you wanT to Disband your clan?");
                                                dialog.Option("Yes ", 12);
                                                dialog.Option("Just Passing By!", 255);
                                                dialog.Avatar(40);
                                                dialog.Send();
                                                break;
                                            }
                                        case 2:
                                            {
                                                if (client.Entity.Myclan.ClanLevel < 4)
                                                {
                                                    dialog.Text("You need " + Game.Clans.MoneyClanLevel[client.Entity.Myclan.ClanLevel] + " Silvers to upgrade ClandLevel! You are sure?");
                                                    dialog.Option("Yes upgrade.", 4);
                                                    dialog.Option("Just Passing By!", 255);
                                                    dialog.Avatar(88);
                                                    dialog.Send();
                                                }
                                                else
                                                {
                                                    dialog.Text("Sorry, your clan level now is [5] cant help you tp upgrade it any more");
                                                    dialog.Option("Thanks!", 255);
                                                    dialog.Avatar(88);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 4:
                                            {
                                                if (client.Entity.Money >= Game.Clans.MoneyClanLevel[client.Entity.Myclan.ClanLevel])
                                                {
                                                    try
                                                    {
                                                        client.Entity.Money -= Game.Clans.MoneyClanLevel[client.Entity.Myclan.ClanLevel];
                                                        var varr = ServerBase.Kernel.GamePool.Values.GetEnumerator();
                                                        varr.MoveNext();
                                                        int COunt = ServerBase.Kernel.GamePool.Count;
                                                        for (uint c = 0;
                                                            c < COunt;
                                                            c++)
                                                        {
                                                            if (c >= COunt) break;

                                                            Client.GameState clien = (varr.Current as Client.GameState);
                                                            if (clien.Entity.Myclan != null)
                                                            {
                                                                if (clien.Entity.UID != client.Entity.UID)
                                                                {
                                                                    if (clien.Entity.Myclan.ClanId == client.Entity.Myclan.ClanId)
                                                                    {
                                                                        clien.Entity.Myclan.ClanId += 1;
                                                                    }
                                                                }
                                                            }
                                                            varr.MoveNext();
                                                        }
                                                        dialog.Text("Congratulations, you Upgraded your clan Level");
                                                        dialog.Option("Thanks!", 255);
                                                        dialog.Send();

                                                        client.Entity.Myclan.ClanLevel += 1;
                                                        Database.Clans.SaveClan(client.Entity.Myclan);
                                                        Network.GamePackets.Clan cl = new PhoenixProject.Network.GamePackets.Clan(client, 1);
                                                        client.Send(cl.ToArray());
                                                    }
                                                    catch (Exception e)
                                                    {
                                                        Program.SaveException(e);
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("Sorry, you need " + Game.Clans.MoneyClanLevel[client.Entity.Myclan.ClanLevel] + " Silvers");
                                                    dialog.Option("Ah, Ok", 255);
                                                    dialog.Avatar(40);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 1:
                                            {
                                                dialog.Text("Choose the name of your clan that your want to create?");
                                                dialog.Input("Clan Name", 3, 14);
                                                dialog.Option("Just Passing By!", 255);
                                                dialog.Avatar(88);
                                                dialog.Send();
                                                break;
                                            }
                                        case 3:
                                            {
                                                string name = npcRequest.Input;
                                                foreach (KeyValuePair<uint, Game.Clans> cl in PhoenixProject.ServerBase.Kernel.ServerClans)
                                                {
                                                    if (cl.Value.ClanName == name)
                                                    {
                                                        dialog.Text("Sorry, but this clan exist! try another clan name");
                                                        dialog.Input("Clan Name", 3, 14);
                                                        dialog.Option("Just Passing By!", 255);
                                                        dialog.Avatar(88);
                                                        dialog.Send();
                                                        return;
                                                    }
                                                }
                                                if (client.Entity.Money >= 500000)
                                                {
                                                    client.Entity.Money -= 500000;
                                                    Game.Clans clan = new PhoenixProject.Game.Clans();
                                                    clan.ClanName = name;
                                                    clan.ClanDonation = 500000;
                                                    clan.ClanLider = client.Entity.Name;

                                                    Game.ClanMembers member = new PhoenixProject.Game.ClanMembers();
                                                    member.Name = client.Entity.Name;
                                                    member.UID = client.Entity.UID;
                                                    member.Donation = 500000;
                                                    member.Class = client.Entity.Class;
                                                    member.Rank = 100;
                                                    member.Level = client.Entity.Level;

                                                    if (!clan.Members.ContainsKey(member.UID))
                                                        clan.Members.Add(member.UID, member);
                                                    client.Entity.Myclan = clan;
                                                    Database.Clans.CreateClan(client);
                                                    Network.GamePackets.Clan cl = new PhoenixProject.Network.GamePackets.Clan(client, 1);
                                                    client.Send(cl.ToArray());
                                                    ServerBase.Kernel.GamePool[client.Entity.UID].Screen.FullWipe();
                                                    ServerBase.Kernel.GamePool[client.Entity.UID].Screen.Reload(null);
                                                    PhoenixProject.ServerBase.Kernel.SendWorldMessage(new Network.GamePackets.Message("Congratulations, " + client.Entity.Name + " has created clan " + name + " Succesfully!", System.Drawing.Color.White, Network.GamePackets.Message.Clan), PhoenixProject.ServerBase.Kernel.GamePool.Values);
                                                    dialog.Text("Congratulations, you created your clan " + clan.ClanName + " Successfully!");
                                                    dialog.Option("Ah, Ok", 255);
                                                    dialog.Send();
                                                }
                                                else
                                                {
                                                    dialog.Text("Sorry, you dont have  500.000 Silver come again later ;)");
                                                    dialog.Option("Ah, Ok", 255);
                                                    dialog.Avatar(88);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                    }
                                    break;
                                }
                            #endregion

                            #region Barber
                            case 10002:
                                {
                                    dialog.Avatar(241);
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                dialog.Text("What kind of hair style would you like?");
                                                dialog.Option("Awsome Styles", 4);
                                                dialog.Option("New Styles", 1);
                                                dialog.Option("Nostalgic Styles", 2);
                                                dialog.Option("Special Styles", 3);
                                                dialog.Option("Nevermind", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        #region New Hair Styles
                                        #region Options
                                        case 1:
                                            {

                                                dialog.Text("Which new style do you want?");
                                                dialog.Option("New Hairstyle 1", 10);
                                                dialog.Option("New Hairstyle 2", 11);
                                                dialog.Option("New Hairstyle 3", 12);
                                                dialog.Option("New Hairstyle 4", 13);
                                                dialog.Option("New Hairstyle 5", 14);
                                                dialog.Option("New Hairstyle 6", 15);
                                                dialog.Option("New Hairstyle 7", 16);
                                                dialog.Option("More styles.", 102);
                                                dialog.Send();
                                                break;

                                            }
                                        case 102:
                                            {

                                                dialog.Text("Which new style do you want?");
                                                dialog.Option("New Hairstyle 8", 17);
                                                dialog.Option("New Hairstyle 9", 18);
                                                dialog.Option("New Hairstyle 10", 19);
                                                dialog.Option("New Hairstyle 11", 20);
                                                dialog.Option("New Hairstyle 12", 21);
                                                dialog.Option("Back.", 1);
                                                dialog.Option("Nevermind", 255);
                                                dialog.Send();
                                                break;

                                            }
                                        #endregion
                                        #region ...
                                        case 10:
                                        case 11:
                                        case 12:
                                        case 13:
                                        case 14:
                                        case 15:
                                        case 16:
                                        case 17:
                                        case 18:
                                        case 19:
                                        case 20:
                                        case 21:
                                            {
                                                client.Entity.HairStyle = ushort.Parse(Convert.ToString(client.Entity.HairStyle)[0] + (20 + npcRequest.OptionID).ToString());
                                                dialog.Text("Done!");
                                                //Console.WriteLine("HairStyle " + client.Entity.HairStyle + "");
                                                dialog.Option("Thanks.", 255);

                                                dialog.Send();
                                                break;
                                            }
                                        #endregion
                                        #endregion
                                        #region Nostalgic Hair Styles
                                        #region Options
                                        case 2:
                                            {

                                                dialog.Text("Which new style do you want?");
                                                dialog.Option("Nostalgic Hairstyle 1", 30);
                                                dialog.Option("Nostalgic Hairstyle 2", 31);
                                                dialog.Option("Nostalgic Hairstyle 3", 32);
                                                dialog.Option("Nostalgic Hairstyle 4", 33);
                                                dialog.Option("Nostalgic Hairstyle 5", 34);
                                                dialog.Option("Nostalgic Hairstyle 6", 35);
                                                dialog.Option("Nostalgic Hairstyle 7", 36);
                                                dialog.Option("Nevermind.", 255);
                                                dialog.Send();
                                                break;

                                            }
                                        #endregion
                                        #region ...
                                        case 30:
                                        case 31:
                                        case 32:
                                        case 33:
                                        case 34:
                                        case 35:
                                        case 36:
                                            {
                                                client.Entity.HairStyle = ushort.Parse(Convert.ToString(client.Entity.HairStyle)[0] + (npcRequest.OptionID - 20).ToString());
                                                dialog.Text("Done!");
                                                dialog.Option("Thanks.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        #endregion
                                        #endregion
                                        #region Special Hair Styles
                                        #region Options
                                        case 3:
                                            {

                                                dialog.Text("Which new style do you want?");
                                                dialog.Option("New Hairstyle 1", 40);
                                                dialog.Option("New Hairstyle 2", 41);
                                                dialog.Option("New Hairstyle 3", 42);
                                                dialog.Option("New Hairstyle 4", 43);
                                                dialog.Option("New Hairstyle 5", 44);
                                                dialog.Option("Nevermind.", 255);
                                                dialog.Send();
                                                break;

                                            }
                                        #endregion
                                        #region ...
                                        case 40:
                                        case 41:
                                        case 42:
                                        case 43:
                                        case 44:
                                            {
                                                client.Entity.HairStyle = ushort.Parse(Convert.ToString(client.Entity.HairStyle)[0] + (npcRequest.OptionID - 19).ToString());
                                                dialog.Text("Done!");
                                                dialog.Option("Thanks.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        #endregion
                                        #endregion
                                        #region AwsomeStyles
                                        #region Options
                                        case 4:
                                            {

                                                dialog.Text("Which new style do you want?");
                                                dialog.Option("New Hairstyle 1", 70);
                                                dialog.Option("New Hairstyle 2", 71);
                                                dialog.Option("New Hairstyle 3", 72);
                                                dialog.Option("New Hairstyle 4", 73);
                                                dialog.Option("New Hairstyle 5", 74);
                                                dialog.Option("Nevermind.", 255);
                                                dialog.Send();
                                                break;

                                            }
                                        #endregion
                                        #region ...
                                        case 70:
                                        case 71:
                                        case 72:
                                        case 73:
                                        case 74:
                                            {
                                                if (npcRequest.OptionID == 70)
                                                {
                                                    client.Entity.HairStyle = 770;
                                                    dialog.Text("Done!");
                                                    dialog.Option("Thanks.", 255);
                                                    dialog.Send();
                                                    //break;
                                                }
                                                if (npcRequest.OptionID == 71)
                                                {
                                                    client.Entity.HairStyle = 771;
                                                    dialog.Text("Done!");
                                                    dialog.Option("Thanks.", 255);
                                                    dialog.Send();
                                                    //break;
                                                }
                                                if (npcRequest.OptionID == 72)
                                                {
                                                    client.Entity.HairStyle = 772;
                                                    dialog.Text("Done!");
                                                    dialog.Option("Thanks.", 255);
                                                    dialog.Send();
                                                    //break;
                                                }
                                                if (npcRequest.OptionID == 73)
                                                {
                                                    client.Entity.HairStyle = 773;
                                                    dialog.Text("Done!");
                                                    dialog.Option("Thanks.", 255);
                                                    dialog.Send();
                                                    //break;
                                                }
                                                if (npcRequest.OptionID == 74)
                                                {
                                                    client.Entity.HairStyle = 774;
                                                    dialog.Text("Done!");
                                                    dialog.Option("Thanks.", 255);
                                                    dialog.Send();
                                                    //break;
                                                }
                                                break;
                                            }
                                        #endregion
                                        #endregion

                                    }
                                    break;
                                }
                            #endregion

                            #region Assistant
                            case 4293:
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                dialog.Text("Do you want to visit the mine?");
                                                dialog.Option("Yes.", 1);
                                                dialog.Option("No.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 1:
                                            {
                                                client.Entity.Teleport(1028, 155, 95);
                                                break;
                                            }
                                    }
                                    break;
                                }
                            #endregion


                            #region Furniture Store NPC
                            case 30161:
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                dialog.Text("Welcome to Twin City Furniture Store. Currently, you have a limited selection, but more furniture will come in soon.");
                                                dialog.Option("I wanna have a look.", 1);
                                                dialog.Option("I am not interested.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 1:
                                            {
                                                client.Entity.Teleport(1511, 52, 70);
                                                dialog.Send();
                                                break;
                                            }
                                    }
                                    break;
                                }
                            #endregion


                            #region General Peace
                            case 10054:
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                dialog.Text("Stop!\nThe path ahead of you is dangerous.\nI don't recommend you continue on this path.\n");
                                                if (client.Entity.Level <= 70)
                                                {
                                                    dialog.Text("If you are looking from stronger monsters you should look in the Canyon first.\n");
                                                    dialog.Text("You can find your way there in the south-west part of the wind plain.\n");
                                                }
                                                dialog.Option("Leave me alone General.", 1);
                                                dialog.Option("Okay, thanks for the warning.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 1:
                                            {
                                                client.Entity.Teleport(1000, 973, 668);
                                                break;
                                            }
                                    }
                                    break;
                                }

                            #endregion

                            #region WarehouseGuardian
                            case 1061: //WarehouseGuardian
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                dialog.Text("Hello. I'm the one that was choosen to set/change/remove the password of the warehouse. I must say without a password you could lose a lot yet, which you probably already knew. My advice for you is that you should have a password, because it could save you of many problems. If you have a password yet, you can remove or change it.");
                                                if (client.WarehousePW == "")
                                                {
                                                    dialog.Option("Okay, let me set the password.", 1);
                                                }
                                                else
                                                {
                                                    dialog.Option("I want to change the password.", 2);
                                                    dialog.Option("I want to remove the password.", 3);
                                                }
                                                dialog.Option("Forget it.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        #region Set password
                                        case 1:
                                            {
                                                if (client.WarehousePW == "")
                                                {
                                                    dialog.Text("Please insert a password that's built only with numbers and whose length is less or equal to 8. An example can be 74352.");
                                                    dialog.Input("Here:", 4, 8);
                                                    dialog.Option("Forget it.", 255);
                                                }
                                                else
                                                {
                                                    dialog.Text("You have a password already set.");
                                                    dialog.Option("Alright.", 255);
                                                }
                                                dialog.Send();
                                                break;
                                            }
                                        case 4:
                                            {
                                                if (client.WarehousePW == "")
                                                {
                                                    if (CheckNumberPassword(npcRequest.Input) && npcRequest.Input.Length <= 8)
                                                    {
                                                        client.TempPassword = npcRequest.Input;
                                                        dialog.Text("Please insert the password again.");
                                                        dialog.Input("Here:", 5, 8);
                                                        dialog.Option("Forget it.", 255);
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("Invalid password, please try again.");
                                                        dialog.Input("Here:", 4, 8);
                                                        dialog.Option("Alright.", 255);
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You have a password already set.");
                                                    dialog.Option("Alright.", 255);
                                                }
                                                dialog.Send();
                                                break;
                                            }
                                        case 5:
                                            {
                                                if (client.WarehousePW == "")
                                                {
                                                    if (CheckNumberPassword(npcRequest.Input) && npcRequest.Input.Length <= 8)
                                                    {
                                                        if (client.TempPassword == npcRequest.Input)
                                                        {
                                                            client.TempPassword = "";
                                                            client.WarehousePW = npcRequest.Input;
                                                            dialog.Text("Password set!");
                                                            dialog.Option("Thank you.", 255);
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("The password doesn't match. Insert again?");
                                                            dialog.Input("Here:", 5, 8);
                                                            dialog.Option("Forget it.", 255);
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("Invalid password, please try again.");
                                                        dialog.Input("Here:", 5, 8);
                                                        dialog.Option("Alright.", 255);
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You have a password already set.");
                                                    dialog.Option("Alright.", 255);
                                                }
                                                dialog.Send();
                                                break;
                                            }
                                        #endregion
                                        #region Change password
                                        case 2:
                                            {
                                                if (client.WarehousePW != "")
                                                {
                                                    dialog.Text("Please insert the password you have now.");
                                                    dialog.Input("Here:", 6, 8);
                                                    dialog.Option("Forget it.", 255);
                                                }
                                                else
                                                {
                                                    dialog.Text("You don't have a password set.");
                                                    dialog.Option("Alright.", 255);
                                                }
                                                dialog.Send();
                                                break;
                                            }
                                        case 6:
                                            {
                                                if (client.WarehousePW != "")
                                                {
                                                    if (CheckNumberPassword(npcRequest.Input) && npcRequest.Input.Length <= 8)
                                                    {
                                                        if (client.WarehousePW == npcRequest.Input)
                                                        {
                                                            dialog.Text("Please insert the password again.");
                                                            dialog.Input("Here:", 7, 8);
                                                            dialog.Option("Forget it.", 255);
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("Wrong password. Try again?");
                                                            dialog.Input("Here:", 6, 8);
                                                            dialog.Option("Alright.", 255);
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("Invalid password, please try again.");
                                                        dialog.Input("Here:", 6, 8);
                                                        dialog.Option("Alright.", 255);
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You don't have a password set.");
                                                    dialog.Option("Alright.", 255);
                                                }
                                                dialog.Send();
                                                break;
                                            }
                                        case 7:
                                            {
                                                if (client.WarehousePW != "")
                                                {
                                                    if (CheckNumberPassword(npcRequest.Input) && npcRequest.Input.Length <= 8)
                                                    {
                                                        client.TempPassword = npcRequest.Input;
                                                        dialog.Text("Please insert the password again.");
                                                        dialog.Input("Here:", 8, 8);
                                                        dialog.Option("Forget it.", 255);
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("Invalid password, please try again.");
                                                        dialog.Input("Here:", 7, 8);
                                                        dialog.Option("Alright.", 255);
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You don't have a password set.");
                                                    dialog.Option("Alright.", 255);
                                                }
                                                dialog.Send();
                                                break;
                                            }
                                        case 8:
                                            {
                                                if (client.WarehousePW != "")
                                                {
                                                    if (CheckNumberPassword(npcRequest.Input) && npcRequest.Input.Length <= 8)
                                                    {
                                                        if (client.TempPassword == npcRequest.Input)
                                                        {
                                                            client.TempPassword = "";
                                                            client.WarehousePW = npcRequest.Input;
                                                            dialog.Text("Password changed!");
                                                            dialog.Option("Thank you.", 255);
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("Wrong password.");
                                                            dialog.Input("Here:", 8, 8);
                                                            dialog.Option("Alright.", 255);
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("Invalid password, please try again.");
                                                        dialog.Input("Here:", 8, 8);
                                                        dialog.Option("Alright.", 255);
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You don't have a password set.");
                                                    dialog.Option("Alright.", 255);
                                                }
                                                dialog.Send();
                                                break;
                                            }
                                        #endregion
                                        #region Remove password
                                        case 3:
                                            {
                                                if (client.WarehousePW != "")
                                                {
                                                    dialog.Text("Please insert the password you have now.");
                                                    dialog.Input("Here:", 9, 8);
                                                    dialog.Option("Forget it.", 255);
                                                }
                                                else
                                                {
                                                    dialog.Text("You don't have a password set.");
                                                    dialog.Option("Alright.", 255);
                                                }
                                                dialog.Send();
                                                break;
                                            }
                                        case 9:
                                            {
                                                if (client.WarehousePW != "")
                                                {
                                                    if (CheckNumberPassword(npcRequest.Input) && npcRequest.Input.Length <= 8)
                                                    {
                                                        if (client.WarehousePW == npcRequest.Input)
                                                        {
                                                            dialog.Text("Please insert the password again.");
                                                            dialog.Input("Here:", 10, 8);
                                                            dialog.Option("Forget it.", 255);
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("Wrong password. Try again?");
                                                            dialog.Input("Here:", 9, 8);
                                                            dialog.Option("Alright.", 255);
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("Invalid password, please try again.");
                                                        dialog.Input("Here:", 9, 8);
                                                        dialog.Option("Alright.", 255);
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You don't have a password set.");
                                                    dialog.Option("Alright.", 255);
                                                }
                                                dialog.Send();
                                                break;
                                            }
                                        case 10:
                                            {
                                                if (client.WarehousePW != "")
                                                {
                                                    if (CheckNumberPassword(npcRequest.Input) && npcRequest.Input.Length <= 8)
                                                    {
                                                        if (client.WarehousePW == npcRequest.Input)
                                                        {
                                                            client.WarehousePW = "";
                                                            client.WarehouseOpen = true;
                                                            dialog.Text("Password removed.");
                                                            dialog.Option("Thank you.", 255);
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("Invalid password, please try again.");
                                                        dialog.Input("Here:", 10, 8);
                                                        dialog.Option("Alright.", 255);
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You don't have a password set.");
                                                    dialog.Option("Alright.", 255);
                                                }
                                                dialog.Send();
                                                break;
                                            }
                                        #endregion
                                    }
                                    break;
                                }
                            #endregion

                            #region Jail npc
                            case 10081: //Jail npc
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                dialog.Text("Hello there. I can teleport you in jail for the amount of 1000 silvers. Do you want to proceed?");
                                                dialog.Option("Sure.", 1);
                                                dialog.Option("I'm standing by.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 1:
                                            {
                                                if (client.Entity.Money >= 1000)
                                                {
                                                    client.Entity.Money -= 1000;
                                                    client.Entity.Teleport(6000, 32, 72);
                                                }
                                                else
                                                {
                                                    dialog.Text("You need 1000 silvers to be able to enter the jail.");
                                                    dialog.Option("Alright.", 255);
                                                }
                                                break;
                                            }
                                    }
                                    break;
                                }
                            #endregion

                            #region Arena npc
                            case 10021: //Arena npc
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                dialog.Text("Hello there. I can teleport you in jail for the amount of 50 silvers. Do you want to proceed?");
                                                dialog.Option("Sure.", 1);
                                                dialog.Option("I'm standing by.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 1:
                                            {
                                                if (client.Entity.Money >= 50)
                                                {
                                                    client.Entity.Money -= 50;
                                                    client.Entity.Teleport(1005, 51, 71);
                                                }
                                                else
                                                {
                                                    dialog.Text("You need 50 silvers to be able to enter the jail.");
                                                    dialog.Option("Alright.", 255);
                                                }
                                                break;
                                            }
                                    }
                                    break;
                                }
                            #endregion

                            #region ShopBoy
                            case 10063: //ShopBoy
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                dialog.Text("Hello there. I can teleport you in our shop, but I can also dye your armor black for the price of one DragonBall. What do you say?");
                                                dialog.Option("Teleport me in the shop.", 1);
                                                dialog.Option("Dye my armor black.", 2);
                                                dialog.Option("I'm standing by.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 1:
                                            {
                                                client.Entity.Teleport(1008, 22, 26);
                                                break;
                                            }
                                        case 2:
                                            {
                                                if (client.Inventory.Contains(1088000, 1))
                                                {
                                                    IConquerItem armor = client.Equipment.TryGetItem(3);
                                                    if (armor != null && armor.ID != 0)
                                                    {
                                                        client.Inventory.Remove(1088000, 1);
                                                        armor.Color = PhoenixProject.Game.Enums.Color.Black;
                                                        PhoenixProject.Database.ConquerItemTable.UpdateColor(armor);
                                                        armor.Mode = PhoenixProject.Game.Enums.ItemMode.Update;
                                                        armor.Send(client);
                                                        if (!client.AlternateEquipment)
                                                        {
                                                            client.Equipment.UpdateEntityPacket();
                                                        }
                                                        else
                                                        {
                                                            client.Equipment.UpdateEntityPacket2();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You don't wear an armor right now so I can't do anything.");
                                                        dialog.Option("Ah alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("Hmm...You don't have one DragonBall so I can't dye your armor.");
                                                    dialog.Option("Ah alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                    }
                                    break;
                                }
                            #endregion

                            #region Kungfu Boy
                            case 100229:
                                {
                                    // If inv contains jade glyph
                                    // npcRequest.OptionID = 5
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                //#warning (Kungfu Boy) Check for begenniers quest, check for the note. Echo this text.
                                                dialog.Text("I started learning Kungfu when I was very young.\nNow I have learn to master my Chi very well! Wanna have a try?");
                                                dialog.Option("Yeah!", 1);
                                                dialog.Option("I don't care...", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 1:
                                            {
                                                dialog.Text("Oh, a message from the Village Gateman? I see.\nHe wants me to teach you how to master your Chi.");
                                                dialog.Option("I'm listening.", 2);
                                                dialog.Send();
                                                break;
                                            }
                                        case 2:
                                            {
                                                dialog.Text("Press the Ctrl button, move the mouse arrow to the place you want to jump to and left click.");
                                                dialog.Text("You should know, you can't jump to a place you can't just normally walk to sometimes.");
                                                dialog.Option("Gotcha.", 3);
                                                dialog.Send();
                                                break;
                                            }
                                        case 3:
                                            {
                                                dialog.Text("Good! It seems that you have mastered this skill. One more thing!\n");
                                                dialog.Text("My sister, Kungfu Girl, has stolen my Jade Glyph and taken it up onto the roof behind me. Can you go get it for me?");
                                                dialog.Option("No problem.", 4);
                                                dialog.Send();
                                                break;
                                            }
                                        case 4:
                                            {
                                                //#warning (Kungfu boy) Add quest progress
                                                client.Send(new Message("Jump to the roof behind Kungfu Boy and catch his mischievous sister!", System.Drawing.Color.Green, Message.PopUP));
                                                break;
                                            }
                                        case 5:
                                            {
                                                dialog.Text("Hey you got it! Thank you. I see you've mastered your Chi.");
                                                dialog.Option("I have.", 6);
                                                dialog.Send();
                                                break;
                                            }
                                        case 6:
                                            {
                                                dialog.Text("Well, thats good. I storngly recommend you go visit the Armorer in Twin City.");
                                                dialog.Text(" You need to pick out some armor. It will save your life!");
                                                dialog.Option("I'll think about it.", 255);
                                                dialog.Send();
                                                break;
                                            }

                                    }
                                    break;
                                }

                            #endregion

                            #region Kungfu Girl
                            case 127271:
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                dialog.Text("Haha! I wanted to play a trick on my brother! Don't tell him.");
                                                dialog.Option("He knows already.", 2);
                                                dialog.Option("You are very naughty.", 1);
                                                dialog.Send();
                                                break;
                                            }
                                        case 1:
                                            {
                                                dialog.Text("Teehee!");
                                                dialog.Option("He knows about this, you know.", 2);
                                                dialog.Send();
                                                break;
                                            }
                                        case 2:
                                            {
                                                dialog.Text("Oh, well you got me.... Alright. Here's his Jade Glyph. Take it.");
                                                dialog.Option("Good!", 3);
                                                dialog.Send();
                                                break;
                                            }
                                        case 3:
                                            {
                                                //#warning (Kungfu boy) Add quest progress
                                                client.Send(new Message("You got Kungfu Boy's Jade Glyph back from Kungfu Girl! Take it back to Kungfu Boy.", System.Drawing.Color.Green, Message.PopUP));
                                                break;
                                            }
                                    }
                                    break;
                                }
                            #endregion

                            #region Simon
                            case 1152:
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                dialog.Text("Hmm, a few years ago, me and some friends of mine, started exploring the mountains. It was an usual day, cloudy with a very happy sun. We all went on the mountain to explore and level up a bit. Somehow we was all tricked into seeing a fantasy land and we went that way. We found a big rock that looked like a door, we broke it and went in. Since then, my friends are in the place we found and which we called the labirinth as it was full of powerful creatures that were leading each of the four levels of the labirith. Each friend of mine chose a floor and they await great conquerors at the end of each floor. ");
                                                dialog.Option("Tell me more about it.", 1);
                                                dialog.Option("Blah, boring.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 1:
                                            {
                                                dialog.Text("In each floor there are three kinds of monsters, floor one has Slingers, GoldGhosts and the powerful Gibbon. The second floor has the AgileRats, Bladelings and the snake Naga. The third floor has BlueBirds, FiendBats and the mighty Talon. The last floor, the fourth, has MinotaurL120 and the Syren. Each of them drops some items, and you'll need some to get to the next floor, or some others to claim a reward from me.");
                                                dialog.Option("What rewards?", 2);
                                                dialog.Option("Blah, boring.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 2:
                                            {
                                                dialog.Text("In exchange of 17 SunDiamonds(dropped by Slingers) I will give you two meteors, for 17 MoonDiamonds(dropped by Bladelings), I will give you 4 meteors, for 17 StarDiamonds(dropped by BlueBirds), I will give you 4 meteor tears, and lastly for 17 CloudDiamonds, I will give you one DragonBall. More over, to get to the second floor from first one you need a SkyToken(dropped by GoldGhost), from second to third a EarthToken(dropped by AgileRat) and from third to fourth a SoulToken(dropped by FiendBat).");
                                                dialog.Option("Enough talking.", 3);
                                                dialog.Option("Claim my reward.", 4);
                                                dialog.Option("Blah, boring.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 3:
                                            {
                                                dialog.Text("Right. In exchange of 2000 VirtuePoints, I will be more than glad to teleport you in the first floor of the Labirith.");
                                                dialog.Option("Here, take them.", 5);
                                                dialog.Option("Blah, boring.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 4:
                                            {
                                                dialog.Text("What do you want to claim?");
                                                dialog.Option("Two Meteors.", 6);
                                                dialog.Option("Four Meteors.", 7);
                                                dialog.Option("Four Meteor tears.", 8);
                                                dialog.Option("One DragonBall.", 9);
                                                dialog.Option("Blah, boring.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 5:
                                            {
                                                if (client.VirtuePoints >= 2000)
                                                {
                                                    client.VirtuePoints -= 2000;
                                                    client.Entity.Teleport(1351, 018, 127);
                                                }
                                                else
                                                {
                                                    dialog.Text("You don't meet the requierments.");
                                                    dialog.Option("Ahh, sorry.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 6:
                                            {
                                                if (client.Inventory.Contains(721533, 17))
                                                {
                                                    client.Inventory.Remove(721533, 17);
                                                    client.Inventory.Add(1088001, 0, 2);
                                                }
                                                else
                                                {
                                                    dialog.Text("You don't meet the requierments.");
                                                    dialog.Option("Ahh, sorry.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 7:
                                            {
                                                if (client.Inventory.Contains(721534, 17))
                                                {
                                                    client.Inventory.Remove(721534, 17);
                                                    client.Inventory.Add(1088001, 0, 4);
                                                }
                                                else
                                                {
                                                    dialog.Text("You don't meet the requierments.");
                                                    dialog.Option("Ahh, sorry.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 8:
                                            {
                                                if (client.Inventory.Contains(721535, 17))
                                                {
                                                    client.Inventory.Remove(721535, 17);
                                                    client.Inventory.Add(1088002, 0, 4);
                                                }
                                                else
                                                {
                                                    dialog.Text("You don't meet the requierments.");
                                                    dialog.Option("Ahh, sorry.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 9:
                                            {
                                                if (client.Inventory.Contains(721536, 17))
                                                {
                                                    client.Inventory.Remove(721536, 17);
                                                    client.Inventory.Add(1088000, 0, 1);
                                                }
                                                else
                                                {
                                                    dialog.Text("You don't meet the requierments.");
                                                    dialog.Option("Ahh, sorry.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                    }
                                    break;
                                }
                            #endregion

                            #region MoonBoxQuest
                            #region FortuneTeller
                            case 600050:
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                dialog.Text("Hello " + client.Entity.Name + ", Have you heard of the palace method?");
                                                dialog.Option("Palace method?..", 1);
                                                dialog.Option("Don't care!", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 1:
                                            {
                                                dialog.Text("I discovered a mystical tactic, but I was not able to solve it.\nI almost died! It's very dangerous.");
                                                dialog.Option("Sounds like my kind of fun.", 2);
                                                dialog.Option("Too dangerous", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 2:
                                            {

                                                dialog.Text("I'm serious! You don't understand it's very dangerous...");
                                                dialog.Option("Yea yea. Just take my there.", 3);
                                                dialog.Option("Nevermind... o.o", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 3:
                                            {
                                                client.Entity.Teleport(1042, 028, 033);
                                                dialog.Text("I warned you....");
                                                dialog.Option("I think you're full of it.\nThere's nothing here.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                    }
                                    break;
                                }
                            #endregion
                            #endregion

                            #region FrozenGrottoGeneral
                            case 27837:
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                dialog.Text("There is a dangeous frozen cavern south of nowhere! It's too dangerous for you to enter! Even Leroy Jenkins died there!");
                                                dialog.Option("I want to enter the grotto.", 4);
                                                dialog.Option("Blah, boring.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 4:
                                            {
                                                dialog.Text("Ok, well.. Which floor of the Grotto do you want to enter?\n");
                                                dialog.Option("Floor 1 [Lv127]", 1);
                                                dialog.Option("Floor 2 [Lv132]", 2);
                                                dialog.Send();
                                                break;
                                            }
                                        case 1:
                                            {
                                                client.Entity.Teleport(1762, 61, 257);
                                                break;
                                            }
                                        case 2:
                                            {
                                                client.Entity.Teleport(7007, 61, 257);
                                                break;
                                            }
                                    }
                                    break;
                                }
                            #endregion

                        }
                        break;
                    }
                #endregion
                #region Poker1
                case 8880:
                    {
                        switch (client.ActiveNpc)
                        {
                            #region Poker1
                            case 269857: //Poker1 npc
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                dialog.Text("Hello there. I can teleport you to the twin city for 100 Gold Just gimme 100 gold to travel away from here.");
                                                dialog.Option("Teleport me.", 1);
                                                dialog.Option("I'm standing by.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 1:
                                            {
                                                if (client.Entity.Money >= 100)
                                                {
                                                    client.Entity.Money -= 100;
                                                    client.Entity.Teleport(1002, 430, 380);
                                                }
                                                else
                                                {
                                                    dialog.Text("You need 100 silvers to be able to Teleport To twin city.");
                                                    dialog.Option("Alright.", 255);
                                                }
                                                break;
                                            }
                                    }
                                    break;
                                }
                            #endregion
                        }
                        break;
                    }
                #endregion
                #region Poker2
                case 8881:
                    {
                        switch (client.ActiveNpc)
                        {
                            #region Poker2
                            case 369857: //Poker2 npc
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                dialog.Text("Hello there. I can teleport you Back to market");
                                                dialog.Option("Teleport me.", 1);
                                                dialog.Option("I'm standing by.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 1:
                                            {


                                                client.Entity.Teleport(1036, 192, 184);

                                                break;
                                            }
                                    }
                                    break;
                                }
                            #endregion
                        }
                        break;
                    }
                #endregion
                #region ThrilingSpook
                case 8892:
                    {
                        switch (client.ActiveNpc)
                        {
                            #region Mobs1
                            case 269861: //Mobs1 npc
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                dialog.Text("Hello there. I can teleport you back to TwinCity you should give me 100 Silver .");
                                                dialog.Option("Teleport me.", 1);
                                                dialog.Option("I'm standing by.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 1:
                                            {
                                                if (client.Entity.Money >= 100)
                                                {
                                                    client.Entity.Money -= 100;
                                                    client.Entity.Teleport(1002, 450, 350);
                                                }
                                                else
                                                {
                                                    dialog.Text("You need 100 Silver to be able to Teleport To TwinCity.");
                                                    dialog.Option("Alright.", 255);
                                                }
                                                break;
                                            }
                                    }
                                    break;
                                }
                            #endregion
                        }
                        break;
                    }
                #endregion
                #region MoonboxQuest
                case 1040:
                case 1041:
                case 1042:
                case 1043:
                case 1044:
                case 1045:
                case 1046:
                case 1047:
                case 1048:
                case 1049:
                case 1050:
                case 1051:
                    {
                        switch (client.ActiveNpc)
                        {
                            #region MoonBoxQuest
                            #region Maggie
                            case 600003:
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                dialog.Text("What are you here for!?\nPlease do not go ahead, or you will enter the very dangerous tactics.");
                                                dialog.Option("....You too?", 1);
                                                dialog.Option("Send me to the tatics.", 4);
                                                dialog.Option("I had better leave here!", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 1:
                                            {
                                                dialog.Text("The tactic is so changeful, I once thought highly of my self\nand died from the damned tactics.");
                                                dialog.Option("How can I solve the tatics?", 2);
                                                dialog.Option("I do not believe in this!", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 2:
                                            {
                                                dialog.Text("I have studied it for so may years, but fail to work it out.\nPerhaps you can... Would you like to give it a try?");
                                                dialog.Option("Yes. I like a good challenge.", 3);
                                                dialog.Option("I changed my mind..", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 3:
                                            {
                                                dialog.Text("You will be entrapped in the tatic if you enter.\nYou won't be able to leave until you've found a special token.");
                                                dialog.Option("I'm ready to do this.", 5);
                                                dialog.Option("No. This is too risky.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 4:
                                            {
                                                dialog.Text("Alright, I'll take you there.\nYou must be sure to pick up the token!");
                                                dialog.Option("Okay.", 5);
                                                dialog.Send();
                                                break;
                                            }
                                        case 5:
                                            {
                                                ushort map = 1042;
                                                map += (ushort)PhoenixProject.ServerBase.Kernel.Random.Next(1, 8);
                                                client.Entity.Teleport(map, 210, 164);
                                                break;
                                            }
                                    }
                                    break;
                                }
                            #endregion
                            #region GuardianGod
                            case 600004:
                            case 600006:
                            case 600008:
                            case 600010:
                            case 600012:
                            case 600014:
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                string[] Tactics = { "Peace", "Chaos", "Deserted", "Disturbed", "Prosperous", "Calmed" };
                                                uint almostid = client.ActiveNpc / 2;
                                                uint baseId = 721010;
                                                uint tactic = almostid - 300002;
                                                baseId += tactic;
                                                if (client.Inventory.Contains(baseId, 1))
                                                {
                                                    dialog.Text("Congratulations, you have a token for this tactic. This tactic is " + Tactics[tactic] + ".");
                                                    dialog.Option("Ok, thanks!", 255);
                                                    dialog.Send();
                                                    break;
                                                }
                                                else
                                                {
                                                    dialog.Text("You don't have a token for this tactic, I'm afraid I cannot tell you which tactic is it.");
                                                    dialog.Option("Ahh, thanks anyway!", 255);
                                                    dialog.Send();
                                                    break;
                                                }
                                            }
                                    }
                                    break;
                                }
                            case 600016:
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                dialog.Text("You are in DeathTactic, you either die or proceed if you have 6 tokens that are not the same.");
                                                dialog.Option("Ok, thanks!", 255);
                                                dialog.Send();
                                                break;
                                            }
                                    }
                                    break;
                                }
                            #endregion
                            #region Ghost
                            case 600005:
                            case 600007:
                            case 600009:
                            case 600011:
                            case 600013:
                            case 600015:
                                {
                                    uint almostId = (client.ActiveNpc - 1) / 2;
                                    uint baseId = 721010;
                                    uint tactic = almostId - 300002;
                                    baseId += tactic;
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {

                                                if (client.Inventory.Contains(baseId, 1))
                                                {
                                                    dialog.Text("Nice you have the token!\nAre you ready to leave?");
                                                    dialog.Option("Yes.", 1);
                                                    dialog.Option("No.", 255);
                                                    dialog.Send();
                                                }
                                                else
                                                {
                                                    dialog.Text("How dare you bother me without the token!\nYou will not leave this place until the token has been found!");
                                                    dialog.Option("Sorry I'll go find it!", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 1:
                                            {
                                                if (client.Inventory.Contains(baseId, 1))
                                                {
                                                    client.Entity.Teleport(1042, 028, 033);
                                                }
                                                break;
                                            }
                                    }
                                    break;
                                }
                            case 600017:
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                dialog.Text("I've been trapped here forever.\nI didn't have all the token before coming here.");
                                                dialog.Option("What about me?", 1);
                                                dialog.Send();
                                                break;
                                            }
                                        case 1:
                                            {
                                                dialog.Text("If you have all the tokens you may leave this place with a moonbox.\nIf you don't.... You must die.");
                                                dialog.Option("I have them! Please don't kill me!", 2);
                                                dialog.Option("Oh no...", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 2:
                                            {
                                                if (client.Inventory.Contains(721010, 1) &&
                                                         client.Inventory.Contains(721011, 1) &&
                                                         client.Inventory.Contains(721012, 1) &&
                                                         client.Inventory.Contains(721013, 1) &&
                                                         client.Inventory.Contains(721014, 1) &&
                                                         client.Inventory.Contains(721015, 1))
                                                {
                                                    client.Inventory.Remove(721010, 1);
                                                    client.Inventory.Remove(721011, 1);
                                                    client.Inventory.Remove(721012, 1);
                                                    client.Inventory.Remove(721013, 1);
                                                    client.Inventory.Remove(721014, 1);
                                                    client.Inventory.Remove(721015, 1);

                                                    client.Inventory.Add(721072, 0, 1);
                                                    client.Entity.Teleport(1050, 210, 164);
                                                }
                                                else
                                                {
                                                    dialog.Text("You're wrong. Enjoy your death.");
                                                    dialog.Option("No!", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                    }
                                    break;
                                }
                            #endregion
                            #region VagrantGhost
                            case 600018:
                            case 600019:
                            case 600020:
                            case 600021:
                            case 600022:
                            case 600023:
                            case 600024:
                            case 600025:
                            case 600026:
                            case 600027:
                            case 600028:
                            case 600029:
                            case 600030:
                            case 600031:
                            case 600032:
                            case 600033:
                            case 600034:
                            case 600035:
                            case 600036:
                            case 600037:
                            case 600038:
                            case 600039:
                            case 600040:
                            case 600041:
                            case 600042:
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                dialog.Text("Help me... Please");
                                                dialog.Option("Who are you?", 1);
                                                dialog.Send();
                                                break;
                                            }
                                        case 1:
                                            {
                                                dialog.Text("I am a warrior trapped in these tactics please help me to revive!");
                                                dialog.Option("I have the SoulJade.", 2);
                                                dialog.Option("No.", 3);
                                                dialog.Send();
                                                break;
                                            }
                                        case 2:
                                            {
                                                if (client.Inventory.Contains(721072, 1))
                                                {
                                                    dialog.Text("Thank you! Will you recive my gift of a Moonbox?");
                                                    dialog.Option("Yes.", 3);
                                                    dialog.Option("Not needed.", 4);
                                                    dialog.Send();
                                                }
                                                else
                                                {
                                                    dialog.Text("You do not...even so, I shall help you leave this cursed map.");
                                                    dialog.Option("Please get me out of here.", 5);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 3:
                                            {
                                                if (client.Inventory.Contains(721072, 1))
                                                {
                                                    client.Inventory.Remove(721072, 1);
                                                    client.Inventory.Add(721080, 0, 1);
                                                    client.Entity.Teleport(1042, 028, 033);
                                                }
                                                break;
                                            }
                                        case 4:
                                            {
                                                client.Inventory.Remove(721072, 1);
                                                client.Entity.Teleport(1042, 028, 033);
                                                break;
                                            }
                                        case 5:
                                            {
                                                client.Entity.Teleport(1042, 028, 033);
                                                break;
                                            }
                                    }
                                    break;
                                }
                            #endregion
                            #endregion
                        }
                        break;
                    }
                #endregion
                #region Ape Canyon
                case 1020:
                    {
                        switch (client.ActiveNpc)
                        {
                            #region Ape City
                            case 10053:
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                dialog.Text("Hello " + client.Entity.Name + ", I can send you on your way for just 100 silvers.");
                                                dialog.Text("\nWhere would you like to go?");
                                                dialog.Option("Twin City", 1);
                                                dialog.Option("Market", 2);
                                                dialog.Option("Nevermind", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 1:
                                            {
                                                if (client.Entity.Money >= 100)
                                                {
                                                    client.Entity.Money -= 100;
                                                    client.Entity.Teleport(1020, 378, 13);
                                                }
                                                else
                                                {
                                                    dialog.Text("You do not have 100 silvers.");
                                                    dialog.Option("Aww!", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 2:
                                            {
                                                if (client.Entity.Money >= 100)
                                                {
                                                    client.Entity.Money -= 100;
                                                    client.Entity.Teleport(1036, 211, 196);
                                                }
                                                else
                                                {
                                                    dialog.Text("You do not have 100 silvers.");
                                                    dialog.Option("Aww!", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                    }
                                    break;
                                }
                            #endregion
                            #region Ape Canyon

                            #region Alex
                            case 3600:
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                dialog.Text("You don't worry, it's not gonna hurt you a bit when getting the third life. You just need an exemption token and it's all going to be fine.");
                                                dialog.Option("Here is the ExemptionToken.", 1);
                                                dialog.Option("I'll just leave", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 1:
                                            {
                                                if (client.Entity.Reborn == 1)
                                                {
                                                    if (client.Entity.Class % 10 == 5 && client.Entity.Level >= (client.Entity.Class == 135 ? 110 : 120))
                                                    {
                                                        dialog.Text("Select the class you want to reborn in.");
                                                        dialog.Option("Trojan.", 11);
                                                        dialog.Option("Warrior.", 21);
                                                        dialog.Option("Archer.", 41);
                                                        dialog.Option("WaterTaoist.", 132);
                                                        dialog.Option("FireTaoist.", 142);
                                                        dialog.Option("Ninja.", 51);
                                                        dialog.Option("Monk.", 61);
                                                        dialog.Option("Pirate.", 71);
                                                        //dialog.Option("Nothing thank you.", 255);
                                                        dialog.Send();
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("If you are a water saint you need level 110+, else you need 120+.");
                                                        dialog.Option("I'll just leave", 255);
                                                        dialog.Send();
                                                        break;
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You need to be in the second life to be able to get the third life.");
                                                    dialog.Option("I'll just leave", 255);
                                                    dialog.Send();
                                                    break;
                                                }
                                                break;
                                            }
                                        default:
                                            {
                                                if (npcRequest.OptionID == 255)
                                                    return;
                                                if (client.Entity.Reborn == 1)
                                                {
                                                    if (client.Entity.Class % 10 == 5 && client.Entity.Level >= (client.Entity.Class == 135 ? 110 : 120))
                                                    {
                                                        if (client.Inventory.Contains(723701, 1))
                                                        {
                                                            if (client.Reborn(npcRequest.OptionID))
                                                            {
                                                                client.Inventory.Remove(723701, 1);
                                                            }
                                                            else
                                                            {
                                                                dialog.Text("You need two free slots in your inventory.");
                                                                dialog.Option("I'll just leave", 255);
                                                                dialog.Send();
                                                                break;
                                                            }
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("If you are a water saint you need level 110+, else you need 120+.");
                                                        dialog.Option("I'll just leave", 255);
                                                        dialog.Send();
                                                        break;
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You need to be in the second life to be able to get the third life.");
                                                    dialog.Option("I'll just leave", 255);
                                                    dialog.Send();
                                                    break;
                                                }
                                                break;
                                            }
                                    }
                                    break;
                                }
                            #endregion

                            #region Assistant
                            case 126:
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                dialog.Text("Do you want to visit the mine?");
                                                dialog.Option("Yes.", 1);
                                                dialog.Option("No.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 1:
                                            {
                                                client.Entity.Teleport(1026, 142, 105);
                                                break;
                                            }
                                    }
                                    break;
                                }
                            #endregion

                            #endregion
                        }
                        break;
                    }
                #endregion
                #region PhoenixCastle
                case 1011:
                    {
                        switch (client.ActiveNpc)
                        {
                            #region Phoenix Castle
                            case 10052:
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                dialog.Text("Hello " + client.Entity.Name + ", I can send you on your way for just 100 silvers.");
                                                dialog.Text("\nWhere would you like to go?");
                                                dialog.Option("Market", 1);
                                                dialog.Option("Twin City", 2);
                                                dialog.Option("Nevermind", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 1:
                                            {
                                                if (client.Entity.Money >= 100)
                                                {
                                                    client.Entity.Money -= 100;
                                                    client.Entity.Teleport(1036, 211, 196);
                                                }
                                                else
                                                {
                                                    dialog.Text("You do not have 100 silvers.");
                                                    dialog.Option("Aww!", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 2:
                                            {
                                                if (client.Entity.Money >= 100)
                                                {
                                                    client.Entity.Money -= 100;
                                                    client.Entity.Teleport(10, 377);
                                                }
                                                else
                                                {
                                                    dialog.Text("You do not have 100 silvers.");
                                                    dialog.Option("Aww!", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                    }
                                    break;
                                }
                            #endregion
                            #region PhoenixCity

                            #region Assistant
                            case 125:
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                dialog.Text("Do you want to visit the mine?");
                                                dialog.Option("Yes.", 1);
                                                dialog.Option("No.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 1:
                                            {
                                                client.Entity.Teleport(1025, 30, 71);
                                                break;
                                            }
                                    }
                                    break;
                                }
                            #endregion

                            #endregion
                        }
                        break;
                    }
                #endregion
                #region DesertCity
                case 1000:
                    {
                        switch (client.ActiveNpc)
                        {
                            #region Desert city
                            case 10051:
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                dialog.Text("Hello " + client.Entity.Name + ", I can set you on your way for just 100 silver.\n");
                                                dialog.Text("Where would you like to go?");
                                                dialog.Option("Twin City", 1);
                                                dialog.Option("Mystic Castle", 2);
                                                dialog.Option("Market", 3);
                                                dialog.Option("Nevermind.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 1:
                                            {
                                                if (client.Entity.Money >= 100)
                                                {
                                                    client.Entity.Teleport(1000, 973, 668);
                                                    client.Entity.Money -= 100;
                                                }
                                                else
                                                {
                                                    dialog.Text("You do not have 100 silvers.");
                                                    dialog.Option("Aww!", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 2:
                                            {
                                                if (client.Entity.Money >= 100)
                                                {
                                                    client.Entity.Teleport(1000, 80, 320);
                                                    client.Entity.Money -= 100;
                                                }
                                                else
                                                {
                                                    dialog.Text("You do not have 100 silvers.");
                                                    dialog.Option("Aww!", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 3:
                                            {
                                                if (client.Entity.Money >= 100)
                                                {
                                                    client.Entity.Teleport(1036, 211, 196);
                                                    client.Entity.Money -= 100;
                                                }
                                                else
                                                {
                                                    dialog.Text("You do not have 100 silvers.");
                                                    dialog.Option("Aww!", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                    }
                                    break;
                                }
                            #endregion
                            #region DesertCity
                            #region Assistant
                            case 127:
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                dialog.Text("Do you want to visit the mine?");
                                                dialog.Option("Yes.", 1);
                                                dialog.Option("No.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 1:
                                            {
                                                client.Entity.Teleport(1027, 142, 105);
                                                break;
                                            }
                                    }
                                    break;
                                }
                            #endregion
                            #region FrozenGrottoGuardian
                            case 27837:
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                dialog.Text("There is a dangeous frozen cavern south of nowhere! It's too dangerous for you to enter! Even Leroy Jenkins died there!");
                                                dialog.Option("I want to enter the grotto.", 4);
                                                dialog.Option("Blah, boring.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 4:
                                            {
                                                dialog.Text("Ok, well.. Which floor of the Grotto do you want to enter?\n");
                                                dialog.Option("Floor 1 [Lv127]", 1);
                                                dialog.Option("Floor 2 [Lv132]", 2);
                                                dialog.Send();
                                                break;
                                            }
                                        case 1:
                                            {
                                                client.Entity.Teleport(7007, 61, 257);
                                                break;
                                            }
                                        case 2:
                                            {
                                                client.Entity.Teleport(2056, 30, 335);
                                                break;
                                            }
                                    }
                                    break;
                                }
                            #endregion
                            #endregion
                        }
                        break;
                    }
                #endregion
                #region Bird Village
                case 1015:
                    {
                        switch (client.ActiveNpc)
                        {
                            #region Bird Island
                            case 10056:
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                dialog.Text("Hello " + client.Entity.Name + ", I can send you on your way for just 100 silvers.");
                                                dialog.Text("\nWhere would you like to go?");
                                                dialog.Option("Twin City", 1);
                                                dialog.Option("Market", 2);
                                                dialog.Option("Nevermind", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 1:
                                            {
                                                if (client.Entity.Money >= 100)
                                                {
                                                    client.Entity.Money -= 100;
                                                    client.Entity.Teleport(1015, 1015, 710);
                                                }
                                                else
                                                {
                                                    dialog.Text("You do not have 100 silvers.");
                                                    dialog.Option("Aww!", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 2:
                                            {
                                                if (client.Entity.Money >= 100)
                                                {
                                                    client.Entity.Money -= 100;
                                                    client.Entity.Teleport(1036, 211, 196);
                                                }
                                                else
                                                {
                                                    dialog.Text("You do not have 100 silvers.");
                                                    dialog.Option("Aww!", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                    }
                                    break;
                                }
                            #endregion
                            #region Bird Village

                            #region ArtisanOu
                            case 41:
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                dialog.Text("Hello there my friend. I am here to make your socket your weapon. With a socketed weapon you can add gems inside of the sockets and the gems will give you some extra stats. For the first socket I demand 1 DragonBall and for the second one I demand 5 dragonballs.");
                                                dialog.Option("Alright let's go on.", 1);
                                                dialog.Send();
                                                break;
                                            }
                                        case 1:
                                            {
                                                if (!client.Equipment.Free(4))
                                                {
                                                    PhoenixProject.Interfaces.IConquerItem Item = null;
                                                    Item = client.Equipment.TryGetItem(4);
                                                    if (Item.SocketOne == PhoenixProject.Game.Enums.Gem.NoSocket)
                                                    {
                                                        dialog.Text("My friend I need one DragonBall to socket your weapon. Are you sure you want to do this?");
                                                        dialog.Option("Yea sure.", 2);
                                                        dialog.Send();
                                                    }
                                                    else if (Item.SocketTwo == PhoenixProject.Game.Enums.Gem.NoSocket)
                                                    {
                                                        dialog.Text("My friend I need five dragonballs to socket your weapon. Are you sure you want to do this?");
                                                        dialog.Option("Yea sure.", 2);
                                                        dialog.Send();
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("I can't socket this weapon once more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You need to wear the weapon first.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 2:
                                            {
                                                if (!client.Equipment.Free(4))
                                                {
                                                    PhoenixProject.Interfaces.IConquerItem Item = null;
                                                    Item = client.Equipment.TryGetItem(4);
                                                    if (Item.SocketOne == PhoenixProject.Game.Enums.Gem.NoSocket)
                                                    {
                                                        if (client.Inventory.Contains(1088000, 1))
                                                        {
                                                            client.Inventory.Remove(1088000, 1);
                                                            Item.SocketOne = PhoenixProject.Game.Enums.Gem.EmptySocket;
                                                            Item.Mode = PhoenixProject.Game.Enums.ItemMode.Update;
                                                            Item.Send(client);
                                                            PhoenixProject.Database.ConquerItemTable.UpdateSockets(Item);
                                                            dialog.Text("Done!");
                                                            dialog.Option("Thank you.", 255);
                                                            dialog.Send();
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You don't have one DragonBall!");
                                                            dialog.Option("Ah...", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else if (Item.SocketTwo == PhoenixProject.Game.Enums.Gem.NoSocket)
                                                    {
                                                        if (client.Inventory.Contains(1088000, 5))
                                                        {
                                                            client.Inventory.Remove(1088000, 5);
                                                            Item.SocketTwo = PhoenixProject.Game.Enums.Gem.EmptySocket;
                                                            Item.Mode = PhoenixProject.Game.Enums.ItemMode.Update;
                                                            Item.Send(client);
                                                            PhoenixProject.Database.ConquerItemTable.UpdateSockets(Item);
                                                            dialog.Text("Done!");
                                                            dialog.Option("Thank you.", 255);
                                                            dialog.Send();
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You don't have one DragonBall!");
                                                            dialog.Option("Ah...", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You need to wear the weapon first.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                    }
                                    break;
                                }
                            #endregion

                            #endregion
                        }
                        break;
                    }
                #endregion
                #region Market
                case 1036:
                    {
                        switch (client.ActiveNpc)
                        {
                            #region Market

                            #region Shelby
                            case 300000:
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                dialog.Text("I have here the list with the virtue of all the people in this world. You have so far " + client.VirtuePoints + " virtue points.");
                                                dialog.Option("Thank you.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                    }
                                    break;
                                }
                            #endregion

                            #region LadyLuck
                            case 923:
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {

                                                dialog.Text("Welcome to the Lottery Center! There are many Lucky Boxes here, each");
                                                dialog.Text(" containing incredible treasures! Pay me 3 Small Lottery Tickets to draw from");
                                                dialog.Text(" the Lucky Box in the Lottery Center. You are allowed to enter the Lottery");
                                                dialog.Text(" Center and try your luck upto 10 times a day. You will have extra lottery");
                                                dialog.Text(" chances if you are a vip player.");
                                                dialog.Option("Lets try my luck!", 1);
                                                dialog.Option("Exchange Small Lottery Ticket.", 2);
                                                dialog.Option("Nice to see you.", 255);
                                                dialog.Send();

                                                break;
                                            }
                                        case 1:
                                            {
                                                if (client.Entity.Level >= 70)
                                                {

                                                    client.Entity.Teleport(700, 42, 50);

                                                }
                                                else
                                                {
                                                    dialog.Text("You may not join the lottery , you need level 70 first.");
                                                    dialog.Option("Ahh sorry.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 2:
                                            {
                                                if (client.InLottery)
                                                {
                                                    client.Entity.Teleport(700, 42, 50);
                                                }
                                                break;
                                            }
                                    }
                                    break;
                                }
                            #endregion

                            #region Realloter
                            case 350050:
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                dialog.Text("Hello there brave conqueror, if you have reborn, and you misplaced your atribute points or you want to set them another way, I'll reset your atribute points for one DragonBall. Do you accept?");
                                                dialog.Option("Here is the DragonBall.", 1);
                                                dialog.Option("I'll just leave", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 1:
                                            {
                                                if (client.Entity.Reborn > 0)
                                                {
                                                    if (client.Inventory.Contains(1088000, 1))
                                                    {
                                                        client.Inventory.Remove(1088000, 1);
                                                        if (client.Entity.Reborn != 0)
                                                        {
                                                            client.Entity.Agility = 0;
                                                            client.Entity.Strength = 0;
                                                            client.Entity.Vitality = 1;
                                                            client.Entity.Spirit = 0;
                                                            if (client.Entity.Reborn == 1)
                                                            {
                                                                client.Entity.Atributes = (ushort)(client.ExtraAtributePoints(client.Entity.FirstRebornLevel, client.Entity.FirstRebornLevel)
                                                                    + 52 + 3 * (client.Entity.Level - 15));
                                                            }
                                                            else
                                                            {
                                                                client.Entity.Atributes = (ushort)(client.ExtraAtributePoints(client.Entity.FirstRebornLevel, client.Entity.FirstRebornClass) +
                                                                    client.ExtraAtributePoints(client.Entity.SecondRebornLevel, client.Entity.SecondRebornClass) + 52 + 3 * (client.Entity.Level - 15));
                                                            }
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need a DragonBall.");
                                                        dialog.Option("I'll just leave", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You have to have atleast one rebirth atleast.");
                                                    dialog.Option("I'll just leave", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                    }
                                    break;
                                }
                            #endregion

                            #region Magic Artisan
                            case 10062:
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                dialog.Text("Have you ever seen my brother Artisan Wind? If so, you might know that he upgrades and downgrades the item level and item quality.");
                                                dialog.Text("Well, he doesn't always succeed, but that's why I am here. I can upgrade/downgrade being sucessfully with a fixed amount of meteors (tears)/dragonballs. ");
                                                dialog.Text("What would you like me to do?");
                                                dialog.Option("Upgrade level.", 1);
                                                dialog.Option("Downgrade level.", 2);
                                                dialog.Option("Upgrade quality.", 3);
                                                dialog.Option("I'll just leave", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 1:

                                        case 3:
                                            {
                                                int aut = npcRequest.OptionID * 10;
                                                dialog.Text("Select which item's details you want to change?");
                                                dialog.Option("Headgear.", (byte)(aut + 1));
                                                dialog.Option("Necklace.", (byte)(aut + 2));
                                                dialog.Option("Armor.", (byte)(aut + 3));
                                                dialog.Option("Main Weapon.", (byte)(aut + 4));
                                                dialog.Option("Left Weapon/Shield.", (byte)(aut + 5));
                                                dialog.Option("Ring.", (byte)(aut + 6));
                                                dialog.Option("Boots.", (byte)(aut + 8));
                                                dialog.Option("I'll just leave", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 2:
                                            {
                                                client.Send(new Data(true) { UID = client.Entity.UID, ID = Data.OpenWindow, dwParam = 506, wParam1 = client.Entity.X, wParam2 = client.Entity.Y });
                                                break;
                                            }
                                        case 100:
                                            {
                                                if (client.SelectedItem == 0)
                                                    return;
                                                var item = client.Equipment.TryGetItem(client.SelectedItem);
                                                var itemdetail = PhoenixProject.Database.ConquerItemInformation.BaseInformations[item.ID];
                                                PhoenixProject.Database.ConquerItemInformation infos = new PhoenixProject.Database.ConquerItemInformation(item.ID, item.Plus);
                                                switch (client.UpdateType)
                                                {
                                                    case 1:
                                                    case 2:
                                                        {
                                                            //Cost: 36
                                                            //Metscrolls: 4
                                                            byte cost = (byte)(itemdetail.Level / 5);
                                                            byte scrolls = 0;
                                                            bool useScrolls = false;
                                                            byte extraScroll = 0;
                                                            int addMets = 0;
                                                            cost += (byte)((item.ID % 10) / 3);
                                                            cost += (byte)(itemdetail.Level / 10);
                                                            uint id = 1088001;
                                                            if (client.UpdateType == 2)
                                                                id++;
                                                            foreach (IConquerItem scroll in client.Inventory.Objects)
                                                                if (scroll.ID == 720027)
                                                                    scrolls++;
                                                            if (cost % 10 != 0)
                                                            {
                                                                addMets = 10 - (cost % 10);
                                                                extraScroll = 1;
                                                            }
                                                            if (scrolls >= (cost / 10) + extraScroll)
                                                                useScrolls = true;

                                                            if (client.Inventory.Contains(id, cost) || useScrolls)
                                                            {

                                                                //client.UnloadItemStats(item, false);
                                                                if (client.UpdateType == 1)
                                                                {
                                                                    PhoenixProject.Database.ConquerItemInformation infos2 = new PhoenixProject.Database.ConquerItemInformation(infos.CalculateUplevel(), item.Plus);
                                                                    if (infos2.BaseInformation.ID == infos.BaseInformation.ID)
                                                                        return;
                                                                    if (client.Entity.Level < infos2.BaseInformation.Level)
                                                                    {
                                                                        dialog.Text("You need level " + infos2.BaseInformation.Level + " first.");
                                                                        dialog.Option("Ahh sorry.", 255);
                                                                        dialog.Send();
                                                                        client.SelectedItem = 0;
                                                                        client.UpdateType = 0;
                                                                        return;
                                                                    }
                                                                    uint kimo = item.ID + 10;
                                                                    byte itemType = (byte)(kimo / 10000);
                                                                    byte itemType2 = (byte)(item.ID / 10000);
                                                                    if (Database.ConquerItemInformation.BaseInformations.ContainsKey(kimo))
                                                                    {
                                                                        if (useScrolls)
                                                                        {
                                                                            client.Inventory.Remove(720027, Convert.ToByte((cost / 10) + extraScroll));
                                                                            client.Inventory.Add(1088001, 0, (byte)addMets);
                                                                        }
                                                                        else
                                                                        {
                                                                            client.Inventory.Remove(id, cost);
                                                                        }
                                                                        item.ID = (item.ID + 10);
                                                                    }
                                                                    else
                                                                    {
                                                                        dialog.Text("[Error],This " + Database.ConquerItemInformation.BaseInformations[item.ID].Name + " level cannot be upgraded anymore.");
                                                                        dialog.Option("Ahh sorry.", 255);
                                                                        dialog.Send();
                                                                        return;
                                                                    }
                                                                }

                                                                PhoenixProject.Database.ConquerItemTable.UpdateItemID(item, client);
                                                                item.Mode = PhoenixProject.Game.Enums.ItemMode.Update;
                                                                item.Send(client);
                                                                if (!client.AlternateEquipment)
                                                                {
                                                                    client.LoadItemStats(client.Entity);
                                                                }
                                                                else
                                                                {
                                                                    client.LoadItemStats2(client.Entity);
                                                                }
                                                                if (!client.AlternateEquipment)
                                                                {
                                                                    client.Equipment.UpdateEntityPacket();
                                                                }
                                                                else
                                                                {
                                                                    client.Equipment.UpdateEntityPacket2();
                                                                }
                                                            }
                                                            break;
                                                        }
                                                    case 3:
                                                        {
                                                            byte cost = (byte)(itemdetail.Level / 30);
                                                            cost += (byte)((item.ID % 10) / 2);
                                                            uint id = 1088000;

                                                            if (client.Inventory.Remove(id, cost))
                                                            {
                                                                client.Inventory.Remove(id, cost);
                                                                //client.UnloadItemStats(item, false);
                                                                if (item.ID % 10 < 5)
                                                                    item.ID += 5 - item.ID % 10;
                                                                item.ID++;
                                                                PhoenixProject.Database.ConquerItemTable.UpdateItemID(item, client);
                                                                item.Mode = PhoenixProject.Game.Enums.ItemMode.Update;
                                                                item.Send(client);
                                                                if (!client.AlternateEquipment)
                                                                {
                                                                    client.LoadItemStats(client.Entity);
                                                                }
                                                                else
                                                                {
                                                                    client.LoadItemStats2(client.Entity);
                                                                }
                                                                if (!client.AlternateEquipment)
                                                                {
                                                                    client.Equipment.UpdateEntityPacket();
                                                                }
                                                                else
                                                                {
                                                                    client.Equipment.UpdateEntityPacket2();
                                                                }

                                                            }
                                                            break;
                                                        }
                                                }
                                                break;
                                            }
                                        default:
                                            {
                                                if (npcRequest.OptionID == 255)
                                                    break;
                                                client.SelectedItem = (byte)(npcRequest.OptionID % 10);
                                                client.UpdateType = (byte)(npcRequest.OptionID / 10);
                                                if (client.Equipment.Free(client.SelectedItem))
                                                {
                                                    dialog.Text("You have to be wearing the selected item.");
                                                    dialog.Option("I'll just leave", 255);
                                                    dialog.Send();
                                                    return;
                                                }
                                                var item = client.Equipment.TryGetItem(client.SelectedItem);
                                                var itemdetail = PhoenixProject.Database.ConquerItemInformation.BaseInformations[item.ID];
                                                if (itemdetail == null)
                                                {
                                                    dialog.Text("An error occured. Please relogin and try again.");
                                                    dialog.Option("Ok.", 255);
                                                    dialog.Send();
                                                    return;
                                                }
                                                switch (client.UpdateType)
                                                {
                                                    case 1:
                                                    case 2:
                                                        {
                                                            if (itemdetail.Level == PhoenixProject.Network.PacketHandler.ItemMaxLevel(client.SelectedItem) && client.UpdateType == 1)
                                                            {
                                                                dialog.Text("This item's level cannot be upgraded anymore.");
                                                                dialog.Option("Ahh sorry.", 255);
                                                                dialog.Send();
                                                                client.SelectedItem = 0;
                                                                client.UpdateType = 0;
                                                                return;
                                                            }
                                                            if (itemdetail.Level == PhoenixProject.Network.PacketHandler.ItemMinLevel(client.SelectedItem) && client.UpdateType == 2)
                                                            {
                                                                dialog.Text("This item's level cannot be downgraded anymore.");
                                                                dialog.Option("Ahh sorry.", 255);
                                                                dialog.Send();
                                                                client.SelectedItem = 0;
                                                                client.UpdateType = 0;
                                                                return;
                                                            }
                                                            byte cost = (byte)(itemdetail.Level / 5);
                                                            cost += (byte)((item.ID % 10) / 3);
                                                            cost += (byte)(itemdetail.Level / 10);
                                                            dialog.Text("It will cost you " + cost + " meteor" + (client.UpdateType == 2 ? " tears" : "s") + ". Do you accept?");
                                                            dialog.Option("Yes.", 100);
                                                            dialog.Option("No thank you.", 255);
                                                            dialog.Send();
                                                            break;
                                                        }
                                                    case 3:
                                                        {
                                                            if (item.ID % 10 == 9)
                                                            {
                                                                dialog.Text("[Error],This " + Database.ConquerItemInformation.BaseInformations[item.ID].Name + " Quality cannot be upgraded anymore.");
                                                                dialog.Option("Ahh sorry.", 255);
                                                                dialog.Send();
                                                                client.SelectedItem = 0;
                                                                client.UpdateType = 0;
                                                                return;
                                                            }
                                                            byte cost = (byte)(itemdetail.Level / 30);
                                                            cost += (byte)((item.ID % 10) / 2);
                                                            dialog.Text("It will cost you " + cost + " dragonballs. Do you accept?");
                                                            dialog.Option("Yes.", 100);
                                                            dialog.Option("No thank you.", 255);
                                                            dialog.Send();
                                                            break;
                                                        }
                                                }

                                                break;
                                            }
                                    }
                                    break;
                                }
                            #endregion

                            #region Weapon Master
                            case 7050:
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                dialog.Text("My brothers, Magic Artisan and Artisan Wind, both need meteors to upgrade, but I need only dragonballs.");
                                                dialog.Text("I upgrade item's level only and I want  only one dragonball for my service.");
                                                dialog.Option("Upgrade Equipment Level.", 1);
                                                dialog.Option("Improve Equipment Quailty.", 3);
                                                dialog.Option("Upgrade Equipment with Mets.", 4);
                                                dialog.Option("RepairEquipment.", 5);
                                                dialog.Option("Lower Equipment Level.", 2);
                                                dialog.Option("I will come later.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 5:
                                            {
                                                // int aut = npcRequest.OptionID * 10;
                                                dialog.Text("You cant Repair your Equipments at this time?");
                                                dialog.Option("I'll just leave", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 3:
                                            {
                                                int aut = npcRequest.OptionID * 10;
                                                dialog.Text("Select which item's details you want to change?");
                                                dialog.Option("Headgear.", (byte)(aut + 1));
                                                dialog.Option("Necklace.", (byte)(aut + 2));
                                                dialog.Option("Armor.", (byte)(aut + 3));
                                                dialog.Option("Main Weapon.", (byte)(aut + 4));
                                                dialog.Option("Left Weapon/Shield.", (byte)(aut + 5));
                                                dialog.Option("Ring.", (byte)(aut + 6));
                                                dialog.Option("Boots.", (byte)(aut + 8));
                                                dialog.Option("I'll just leave", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 4:
                                            {
                                                int aut = npcRequest.OptionID * 10;
                                                dialog.Text("Select which item's details you want to change?");
                                                dialog.Option("Headgear.", (byte)(aut + 1));
                                                dialog.Option("Necklace.", (byte)(aut + 2));
                                                dialog.Option("Armor.", (byte)(aut + 3));
                                                dialog.Option("Main Weapon.", (byte)(aut + 4));
                                                dialog.Option("Left Weapon/Shield.", (byte)(aut + 5));
                                                dialog.Option("Ring.", (byte)(aut + 6));
                                                dialog.Option("Boots.", (byte)(aut + 8));
                                                dialog.Option("I'll just leave", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 200:
                                            {
                                                if (client.SelectedItem == 0)
                                                    return;
                                                var item = client.Equipment.TryGetItem(client.SelectedItem);
                                                var itemdetail = PhoenixProject.Database.ConquerItemInformation.BaseInformations[item.ID];
                                                PhoenixProject.Database.ConquerItemInformation infos = new PhoenixProject.Database.ConquerItemInformation(item.ID, item.Plus);
                                                switch (client.UpdateType)
                                                {
                                                    case 1:
                                                    case 2:
                                                        {
                                                            //Cost: 36
                                                            //Metscrolls: 4
                                                            byte cost = (byte)(itemdetail.Level / 5);
                                                            byte scrolls = 0;
                                                            bool useScrolls = false;
                                                            byte extraScroll = 0;
                                                            int addMets = 0;
                                                            cost += (byte)((item.ID % 10) / 3);
                                                            cost += (byte)(itemdetail.Level / 10);
                                                            uint id = 1088001;
                                                            if (client.UpdateType == 2)
                                                                id++;
                                                            foreach (IConquerItem scroll in client.Inventory.Objects)
                                                                if (scroll.ID == 720027)
                                                                    scrolls++;
                                                            if (cost % 10 != 0)
                                                            {
                                                                addMets = 10 - (cost % 10);
                                                                extraScroll = 1;
                                                            }
                                                            if (scrolls >= (cost / 10) + extraScroll)
                                                                useScrolls = true;

                                                            if (client.Inventory.Contains(id, cost) || useScrolls)
                                                            {

                                                                //client.UnloadItemStats(item, false);
                                                                if (client.UpdateType == 1)
                                                                {
                                                                    PhoenixProject.Database.ConquerItemInformation infos2 = new PhoenixProject.Database.ConquerItemInformation(infos.CalculateUplevel(), item.Plus);
                                                                    if (infos2.BaseInformation.ID == infos.BaseInformation.ID)
                                                                        return;
                                                                    if (client.Entity.Level < infos2.BaseInformation.Level)
                                                                    {
                                                                        dialog.Text("You need level " + infos2.BaseInformation.Level + " first.");
                                                                        dialog.Option("Ahh sorry.", 255);
                                                                        dialog.Send();
                                                                        client.SelectedItem = 0;
                                                                        client.UpdateType = 0;
                                                                        return;
                                                                    }
                                                                    uint kimo = item.ID + 10;
                                                                    byte itemType = (byte)(kimo / 10000);
                                                                    byte itemType2 = (byte)(item.ID / 10000);
                                                                    if (Database.ConquerItemInformation.BaseInformations.ContainsKey(kimo))
                                                                    {
                                                                        if (useScrolls)
                                                                        {
                                                                            client.Inventory.Remove(720027, Convert.ToByte((cost / 10) + extraScroll));
                                                                            client.Inventory.Add(1088001, 0, (byte)addMets);
                                                                        }
                                                                        else
                                                                        {
                                                                            client.Inventory.Remove(id, cost);
                                                                        }
                                                                        item.ID = (item.ID + 10);
                                                                    }
                                                                    else
                                                                    {
                                                                        dialog.Text("[Error],This " + Database.ConquerItemInformation.BaseInformations[item.ID].Name + " level cannot be upgraded anymore.");
                                                                        dialog.Option("Ahh sorry.", 255);
                                                                        dialog.Send();
                                                                        return;
                                                                    }
                                                                }

                                                                PhoenixProject.Database.ConquerItemTable.UpdateItemID(item, client);
                                                                item.Mode = PhoenixProject.Game.Enums.ItemMode.Update;
                                                                item.Send(client);
                                                                if (!client.AlternateEquipment)
                                                                {
                                                                    client.LoadItemStats(client.Entity);
                                                                }
                                                                else
                                                                {
                                                                    client.LoadItemStats2(client.Entity);
                                                                }
                                                                if (!client.AlternateEquipment)
                                                                {
                                                                    client.Equipment.UpdateEntityPacket();
                                                                }
                                                                else
                                                                {
                                                                    client.Equipment.UpdateEntityPacket2();
                                                                }
                                                            }
                                                            break;
                                                        }
                                                    case 3:
                                                        {
                                                            byte cost = (byte)(itemdetail.Level / 30);
                                                            cost += (byte)((item.ID % 10) / 2);
                                                            uint id = 1088000;

                                                            if (client.Inventory.Remove(id, cost))
                                                            {
                                                                client.Inventory.Remove(id, cost);
                                                                //client.UnloadItemStats(item, false);
                                                                if (item.ID % 10 < 5)
                                                                    item.ID += 5 - item.ID % 10;
                                                                item.ID++;
                                                                PhoenixProject.Database.ConquerItemTable.UpdateItemID(item, client);
                                                                item.Mode = PhoenixProject.Game.Enums.ItemMode.Update;
                                                                item.Send(client);
                                                                if (!client.AlternateEquipment)
                                                                {
                                                                    client.LoadItemStats(client.Entity);
                                                                }
                                                                else
                                                                {
                                                                    client.LoadItemStats2(client.Entity);
                                                                }
                                                                if (!client.AlternateEquipment)
                                                                {
                                                                    client.Equipment.UpdateEntityPacket();
                                                                }
                                                                else
                                                                {
                                                                    client.Equipment.UpdateEntityPacket2();
                                                                }

                                                            }
                                                            break;
                                                        }
                                                }
                                                break;
                                            }

                                        case 30:
                                        case 31:
                                        case 32:
                                        case 33:
                                        case 34:
                                        case 35:
                                        case 36:
                                        case 37:
                                        case 38:
                                        case 40:
                                        case 41:
                                        case 42:
                                        case 43:
                                        case 44:
                                        case 45:
                                        case 46:
                                        case 47:
                                        case 48:
                                            {
                                                if (npcRequest.OptionID == 255)
                                                    break;
                                                client.SelectedItem = (byte)(npcRequest.OptionID % 10);
                                                client.UpdateType = (byte)(npcRequest.OptionID / 10);
                                                if (client.Equipment.Free(client.SelectedItem))
                                                {
                                                    dialog.Text("You have to be wearing the selected item.");
                                                    dialog.Option("I'll just leave", 255);
                                                    dialog.Send();
                                                    return;
                                                }
                                                var item = client.Equipment.TryGetItem(client.SelectedItem);
                                                var itemdetail = PhoenixProject.Database.ConquerItemInformation.BaseInformations[item.ID];
                                                if (itemdetail == null)
                                                {
                                                    dialog.Text("An error occured. Please relogin and try again.");
                                                    dialog.Option("Ok.", 255);
                                                    dialog.Send();
                                                    return;
                                                }
                                                switch (client.UpdateType)
                                                {
                                                    case 4:
                                                    case 2:
                                                        {
                                                            if (itemdetail.Level == PhoenixProject.Network.PacketHandler.ItemMaxLevel(client.SelectedItem) && client.UpdateType == 1)
                                                            {
                                                                dialog.Text("This item's level cannot be upgraded anymore.");
                                                                dialog.Option("Ahh sorry.", 255);
                                                                dialog.Send();
                                                                client.SelectedItem = 0;
                                                                client.UpdateType = 0;
                                                                return;
                                                            }
                                                            if (itemdetail.Level == PhoenixProject.Network.PacketHandler.ItemMinLevel(client.SelectedItem) && client.UpdateType == 2)
                                                            {
                                                                dialog.Text("This item's level cannot be downgraded anymore.");
                                                                dialog.Option("Ahh sorry.", 255);
                                                                dialog.Send();
                                                                client.SelectedItem = 0;
                                                                client.UpdateType = 0;
                                                                return;
                                                            }
                                                            byte cost = (byte)(itemdetail.Level / 5);
                                                            cost += (byte)((item.ID % 10) / 3);
                                                            cost += (byte)(itemdetail.Level / 10);
                                                            dialog.Text("It will cost you " + cost + " meteor" + (client.UpdateType == 2 ? " tears" : "s") + ". Do you accept?");
                                                            dialog.Option("Yes.", 200);
                                                            dialog.Option("No thank you.", 255);
                                                            dialog.Send();
                                                            break;
                                                        }
                                                    case 3:
                                                        {
                                                            if (item.ID % 10 == 9)
                                                            {
                                                                dialog.Text("[Error],This " + Database.ConquerItemInformation.BaseInformations[item.ID].Name + " Quality cannot be upgraded anymore.");
                                                                dialog.Option("Ahh sorry.", 255);
                                                                dialog.Send();
                                                                client.SelectedItem = 0;
                                                                client.UpdateType = 0;
                                                                return;
                                                            }
                                                            byte cost = (byte)(itemdetail.Level / 30);
                                                            cost += (byte)((item.ID % 10) / 2);
                                                            dialog.Text("It will cost you " + cost + " dragonballs. Do you accept?");
                                                            dialog.Option("Yes.", 200);
                                                            dialog.Option("No thank you.", 255);
                                                            dialog.Send();
                                                            break;
                                                        }
                                                }

                                                break;
                                            }
                                        case 2:
                                            {
                                                client.Send(new Data(true) { UID = client.Entity.UID, ID = Data.OpenWindow, dwParam = 506, wParam1 = client.Entity.X, wParam2 = client.Entity.Y });
                                                break;
                                            }
                                        case 1:
                                            {
                                                int aut = npcRequest.OptionID * 10;
                                                dialog.Text("Select which item's details you want to change?");
                                                dialog.Option("Headgear.", (byte)(aut + 1));
                                                dialog.Option("Necklace.", (byte)(aut + 2));
                                                dialog.Option("Armor.", (byte)(aut + 3));
                                                dialog.Option("Main Weapon.", (byte)(aut + 4));
                                                dialog.Option("Left Weapon/Shield.", (byte)(aut + 5));
                                                dialog.Option("Ring.", (byte)(aut + 6));
                                                dialog.Option("Boots.", (byte)(aut + 8));
                                                dialog.Option("I'll just leave", 255);
                                                dialog.Send();
                                                break;
                                            }

                                        case 10:
                                        case 11:
                                        case 12:
                                        case 13:
                                        case 14:
                                        case 15:
                                        case 16:
                                        case 17:
                                        case 18:
                                        case 20:
                                        case 21:
                                        case 22:
                                        case 23:
                                        case 24:
                                        case 25:
                                        case 26:
                                        case 27:
                                        case 28:
                                            {
                                                if (npcRequest.OptionID == 255)
                                                    break;
                                                byte SelectedItem = (byte)(npcRequest.OptionID % 10);
                                                byte NowType = (byte)(npcRequest.OptionID / 10);
                                                if (client.Equipment.Free(SelectedItem))
                                                {
                                                    dialog.Text("You have to be wearing the selected item.");
                                                    dialog.Option("I'll just leave", 255);
                                                    dialog.Send();
                                                    return;
                                                }
                                                var item = client.Equipment.TryGetItem(SelectedItem);
                                                var itemdetail = PhoenixProject.Database.ConquerItemInformation.BaseInformations[item.ID];

                                                if (NowType == 1)
                                                {
                                                    dialog.Text("It will cost you one dragonball. Do you accept the Amount?");
                                                    dialog.Option("Yes.", (byte)(20 + SelectedItem));
                                                    dialog.Option("No thank you.", 255);
                                                    dialog.Send();
                                                }
                                                else
                                                {
                                                    PhoenixProject.Database.ConquerItemInformation infos = new PhoenixProject.Database.ConquerItemInformation(item.ID, item.Plus);
                                                    PhoenixProject.Database.ConquerItemInformation infos2 = new PhoenixProject.Database.ConquerItemInformation(infos.CalculateUplevel(), item.Plus);

                                                    if (client.Entity.Level < infos2.BaseInformation.Level)
                                                    {
                                                        dialog.Text("You need level " + infos2.BaseInformation.Level + " first.");
                                                        dialog.Option("Ahh sorry.", 255);
                                                        dialog.Send();
                                                        client.SelectedItem = 0;
                                                        client.UpdateType = 0;
                                                        return;
                                                    }
                                                    if (client.Inventory.Contains(1088000, 1))
                                                    {

                                                        //client.UnloadItemStats(item, false);

                                                        uint kimo = item.ID + 10;
                                                        uint kimo2 = item.ID + 20;
                                                        uint kimo3 = item.ID + 30;
                                                        byte itemType = (byte)(kimo / 10000);
                                                        byte itemType2 = (byte)(item.ID / 10000);
                                                        if (Database.ConquerItemInformation.BaseInformations.ContainsKey(kimo))
                                                        {
                                                            item.ID = (item.ID + 10);
                                                        }
                                                        else
                                                        {
                                                            if (Database.ConquerItemInformation.BaseInformations.ContainsKey(kimo2))
                                                            {
                                                                item.ID = (item.ID + 20);
                                                            }
                                                            else
                                                            {
                                                                if (Database.ConquerItemInformation.BaseInformations.ContainsKey(kimo3))
                                                                {
                                                                    item.ID = (item.ID + 30);
                                                                }
                                                                else
                                                                {
                                                                    dialog.Text("[Error],This " + Database.ConquerItemInformation.BaseInformations[item.ID].Name + " level cannot be upgraded anymore.");
                                                                    dialog.Option("Ahh sorry.", 255);
                                                                    dialog.Send();
                                                                    return;
                                                                }
                                                            }
                                                        }
                                                        //item.ID = infos.CalculateUplevel();

                                                        client.Inventory.Remove(1088000, 1);
                                                        //item.ID = infos.CalculateUplevel();
                                                        PhoenixProject.Database.ConquerItemTable.UpdateItemID(item, client);
                                                        item.Mode = PhoenixProject.Game.Enums.ItemMode.Update;
                                                        item.Send(client);
                                                        if (!client.AlternateEquipment)
                                                        {
                                                            client.LoadItemStats(client.Entity);
                                                        }
                                                        else
                                                        {
                                                            client.LoadItemStats2(client.Entity);
                                                        }
                                                        if (!client.AlternateEquipment)
                                                        {
                                                            client.Equipment.UpdateEntityPacket();
                                                        }
                                                        else
                                                        {
                                                            client.Equipment.UpdateEntityPacket2();
                                                        }
                                                    }
                                                }
                                            }
                                            break;
                                    }
                                    break;
                                }
                            #endregion

                            #region Proficiency God
                            case 941:
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                dialog.Text("Hello my friend. If you believe that, leveling your proficiency is too hard and takes too much time, I can help you. In exchange of a fixed amount of exp balls, I will agree to level up your proficiency.");
                                                dialog.Text("Now, tell me what proficiency you want to level up.");
                                                dialog.Option("One handed.", 1);
                                                dialog.Option("Two handed.", 3);
                                                dialog.Option("Other.", 5);
                                                dialog.Option("I'll just leave", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 1:
                                            {
                                                dialog.Text("Which one handed proficiency?");
                                                dialog.Option("Blade.", 41);
                                                dialog.Option("Sword.", 42);
                                                dialog.Option("Hook.", 43);
                                                dialog.Option("Whip.", 44);
                                                dialog.Option("Axe.", 45);
                                                dialog.Option("Next page.", 2);
                                                dialog.Option("Nothing, sorry.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 2:
                                            {
                                                dialog.Text("Which one handed proficiency?");
                                                dialog.Option("PrayerBead.", 61);
                                                dialog.Option("Hammer.", 46);
                                                dialog.Option("Club.", 48);
                                                dialog.Option("Scepter.", 184);
                                                dialog.Option("Katana.", 60);
                                                dialog.Option("Axe.", 45);
                                                dialog.Option("Back.", 1);
                                                dialog.Option("Nothing, sorry.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 3:
                                            {
                                                dialog.Text("Which two handed proficiency?");
                                                dialog.Option("Backsword.", 124);
                                                dialog.Option("Glaive.", 51);
                                                dialog.Option("Poleaxe.", 53);
                                                dialog.Option("LongHammer.", 54);
                                                dialog.Option("Spear.", 56);
                                                dialog.Option("Next page.", 4);
                                                dialog.Option("Nothing, sorry.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 4:
                                            {
                                                dialog.Text("Which one handed proficiency?");
                                                dialog.Option("Pickaxe.", 142);
                                                dialog.Option("Halberd.", 58);
                                                dialog.Option("Wand.", 165);
                                                dialog.Option("Bow.", 50);
                                                dialog.Option("Back.", 3);
                                                dialog.Option("Nothing, sorry.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 5:
                                            {
                                                dialog.Text("Which one handed proficiency?");
                                                dialog.Option("Boxing.", 254);
                                                dialog.Option("Shield.", 90);
                                                dialog.Option("Nothing, sorry.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 100:
                                            {
                                                if (client.Proficiencies.ContainsKey(client.UplevelProficiency))
                                                {
                                                    var prof = client.Proficiencies[client.UplevelProficiency];
                                                    if (prof.Level >= 12)
                                                    {
                                                        dialog.Text("This proficiency cannot be leveled up anymore.");
                                                        dialog.Option("Oh.", 255);
                                                        dialog.Send();
                                                        break;
                                                    }
                                                    client.UplevelProficiency = 0;
                                                    if (client.Inventory.Contains(723700, prof.Level))
                                                    {
                                                        client.Inventory.Remove(723700, prof.Level);
                                                        prof.Level++;
                                                        prof.Experience = 0;
                                                        prof.Send(client);
                                                        break;
                                                    }
                                                    dialog.Text("You don't have the requiered exp balls, I'm sorry I cannot help you.");
                                                    dialog.Option("It's alright.", 255);
                                                    dialog.Send();
                                                    break;
                                                }
                                                else
                                                {
                                                    dialog.Text("You don't know this proficiency.");
                                                    dialog.Option("Ahh, sorry.", 255);
                                                    dialog.Send();
                                                    break;
                                                }
                                            }
                                        default:
                                            {
                                                if (npcRequest.OptionID == 255)
                                                    return;
                                                ushort proficiency = 0;
                                                if (npcRequest.OptionID < 100)
                                                    proficiency = (ushort)(npcRequest.OptionID * 10);
                                                else
                                                {
                                                    if (npcRequest.OptionID != 254)
                                                    {
                                                        string off = npcRequest.OptionID.ToString();
                                                        string reverse = off[2].ToString() + off[1].ToString() + off[0].ToString();
                                                        proficiency = ushort.Parse(reverse);
                                                    }
                                                }
                                                if (proficiency == 600) proficiency++;
                                                if (client.Proficiencies.ContainsKey(proficiency))
                                                {
                                                    var prof = client.Proficiencies[proficiency];
                                                    if (prof.Level >= 12)
                                                    {
                                                        dialog.Text("This proficiency cannot be leveled up anymore.");
                                                        dialog.Option("Oh.", 255);
                                                        dialog.Send();
                                                        break;
                                                    }
                                                    client.UplevelProficiency = proficiency;
                                                    dialog.Text("I need " + prof.Level + " exp balls to be able to level up this proficiency.");
                                                    dialog.Option("Let's do it then.", 100);
                                                    dialog.Option("No, sorry.", 255);
                                                    dialog.Send();
                                                    break;
                                                }
                                                else
                                                {
                                                    dialog.Text("You don't know this proficiency.");
                                                    dialog.Option("Ahh, sorry.", 255);
                                                    dialog.Send();
                                                    break;
                                                }
                                            }
                                    }
                                    break;
                                }
                            #endregion

                            #region CPAdmin
                            case 111816:
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                dialog.Text("Greetings, here you can exchange either a Dragonball or a DragonScroll for cps. ");
                                                dialog.Text("One Dragonball will get you 215 cps and a DragonScroll will get you 2150. ");
                                                dialog.Text("What would you like to trade? Or would you rather not?");
                                                dialog.Option("Dragonball", 1);
                                                dialog.Option("DragonballScroll", 2);
                                                dialog.Option("I'll just leave", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 1:
                                            {
                                                if (client.Inventory.Contains(1088000, 1))
                                                {
                                                    client.Inventory.Remove(1088000, 1);
                                                    client.Entity.ConquerPoints += 215;
                                                }
                                                else
                                                {
                                                    dialog.Text("You do not have a Dragonball");
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 2:
                                            {
                                                if (client.Inventory.Contains(720028, 1))
                                                {
                                                    client.Inventory.Remove(720028, 1);
                                                    client.Entity.ConquerPoints += 2150;
                                                }
                                                else
                                                {
                                                    dialog.Text("You do not have a DragonballScroll");
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                    }
                                    break;
                                }
                            #endregion

                            #region SurgeonMiracle
                            case 3381:
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                dialog.Text("Do you want to have your size changed so that you can become much more");
                                                dialog.Text(" adorable? Now here is a precious chance for you.");
                                                dialog.Option("I want to change my size.", 1);
                                                //dialog.Option("I want to change my gender.", 2);
                                                dialog.Option("I don't want to change.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 1:
                                            {
                                                dialog.Text("If you pay me one DragonBall, I can have your size changed. You will become");
                                                dialog.Text("more attractive and start a fresh life. By the way, to avoid some unexpected");
                                                dialog.Text("things, make sure you are not in any disguise form.");
                                                dialog.Option("Here is a DragonBall.", 3);
                                                dialog.Option("I have no DragonBall.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 2:
                                            {
                                                dialog.Text("If you pay me one DragonBall, I can have your gender changed. You will become");
                                                dialog.Text("more attractive and start a fresh life. By the way, to avoid some unexpected");
                                                dialog.Text("things, make sure you are not in any disguise form.");
                                                dialog.Option("Here is a DragonBall.", 4);
                                                dialog.Option("I have no DragonBall.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 3:
                                            {
                                                if (client.Inventory.Contains(1088000, 1))
                                                {
                                                    int Model = (int)client.Entity.Body % 10;
                                                    switch (Model)
                                                    {
                                                        case 2:
                                                        case 4:
                                                            client.Entity.Body--;
                                                            break;
                                                        case 1:
                                                        case 3:
                                                            client.Entity.Body++;
                                                            break;
                                                    }

                                                    client.Inventory.Remove(1088000, 1);
                                                    break;
                                                }
                                                else
                                                {
                                                    dialog.Text("Sorry, there is no DragonBall in your inventory. I can't have your size changed.");
                                                    dialog.Option("Ok, Sorry.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 4:
                                            {
                                                if (client.Inventory.Contains(1088000, 1))
                                                {
                                                    int Model = (int)client.Entity.Body % 10;
                                                    switch (Model)
                                                    {
                                                        case 3:
                                                        case 4:
                                                            client.Entity.Body -= 2;
                                                            break;
                                                        case 1:
                                                        case 2:
                                                            client.Entity.Body += 2;
                                                            break;
                                                    }
                                                    client.Send(new Message("Your gender has been changed.", System.Drawing.Color.BurlyWood, Message.TopLeft));
                                                    client.Inventory.Remove(1088000, 1);
                                                    break;
                                                }
                                                else
                                                {
                                                    dialog.Text("Sorry, there is no DragonBall in your inventory. I can't have your size changed.");
                                                    dialog.Option("Ok, Sorry.", 255);
                                                    dialog.Send();
                                                }
                                            }
                                            break;
                                    }
                                    break;
                                }
                            #endregion

                            #region Mark. Controler
                            case 45: //Mark. Controler
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                dialog.Text("If you want to leave just tell me when you are ready. It's free.\nYou will be teleported to the city you were in before coming here.");
                                                dialog.Option("I'm ready.", 1);
                                                dialog.Option("Wait a minute.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 1:
                                            {
                                                ulong PrevMap = client.Entity.PreviousMapID;
                                                switch (PrevMap)
                                                {
                                                    default:
                                                        {
                                                            client.Entity.Teleport(1002, 429, 378);
                                                            break;
                                                        }
                                                    case 1000:
                                                        {
                                                            client.Entity.Teleport(1000, 500, 650);
                                                            break;
                                                        }
                                                    case 1020:
                                                        {
                                                            client.Entity.Teleport(1020, 565, 562);
                                                            break;
                                                        }
                                                    case 1011:
                                                        {
                                                            client.Entity.Teleport(1011, 188, 264);
                                                            break;
                                                        }
                                                    case 1015:
                                                        {
                                                            client.Entity.Teleport(1015, 717, 571);
                                                            break;
                                                        }
                                                }
                                                break;
                                            }
                                    }
                                    break;
                                }
                            #endregion

                            #region Enchanter and composer
                            case 35016:
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                dialog.Text("I can improve the enchant of an item and I can also improve the plus of an item. Please let me know how can I help you.");
                                                dialog.Option("Compose.", 1);
                                                dialog.Option("Enchant.", 2);
                                                dialog.Option("Nothing.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 1:
                                            {
                                                Data data = new Data(true);
                                                data.ID = Data.OpenWindow;
                                                data.UID = client.Entity.UID;
                                                data.TimeStamp = Time32.Now;
                                                data.dwParam = Data.WindowCommands.Compose;
                                                data.wParam1 = client.Entity.X;
                                                data.wParam2 = client.Entity.Y;
                                                client.Send(data);
                                                break;
                                            }
                                        case 2:
                                            {
                                                Data data = new Data(true);
                                                data.ID = Data.OpenCustom;
                                                data.UID = client.Entity.UID;
                                                data.TimeStamp = Time32.Now;
                                                data.dwParam = Data.CustomCommands.Enchant;
                                                data.wParam1 = client.Entity.X;
                                                data.wParam2 = client.Entity.Y;
                                                client.Send(data);
                                                break;
                                            }
                                    }
                                    break;
                                }
                            #endregion

                            #region Bless
                            case 35015:
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            client.Send(new Data(true) { UID = client.Entity.UID, ID = Data.OpenWindow, dwParam = Data.WindowCommands.Blessing, wParam1 = client.Entity.X, wParam2 = client.Entity.Y });
                                            break;
                                    }
                                    break;
                                }
                            #endregion

                            #region BlacksmithLee
                            case 1550:
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            client.Send(new Data(true) { UID = client.Entity.UID, ID = Data.OpenWindow, dwParam = Data.WindowCommands.OpenSockets, wParam1 = client.Entity.X, wParam2 = client.Entity.Y });
                                            break;
                                    }
                                    break;
                                }
                            #endregion


                            #region UnknownMan
                            case 3825:
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                dialog.Text("Hello stranger. My mother tough me not to talk with strangers but I feel like I can talk with you. There is something special to you. Since I feel like I can trust you I can make you a service. If your level is below 110, I will give you a lot of exp in exchange of one DragonBall, but if your level is above or equal to 110 I will demand two DragonBalls. If your level is higher than 135, well then, I can't help you. If you are interested in my proposition and if you have DragonBalls, please let me know.");
                                                dialog.Option("Yes I do.", 1);
                                                dialog.Option("No, not really.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 1:
                                            {
                                                if (client.Entity.Level >= 135)
                                                {
                                                    dialog.Text("I am sorry, your level is too high. I simply can't help you.");
                                                    dialog.Option("Sorry.", 255);
                                                    dialog.Send();
                                                    break;
                                                }
                                                if (DateTime.Now.DayOfYear != client.LastDragonBallUse.DayOfYear)
                                                {
                                                    byte needTimes = 1;
                                                    ulong exp_reward = 13901336;//default for level 50 or lower
                                                    #region exp reward switch
                                                    byte level = client.Entity.Level;
                                                    if (level > 50 && level < 63)
                                                        exp_reward = 27152909;
                                                    if (level >= 63 && level < 69)
                                                        exp_reward = 28860143;
                                                    if (level >= 69 && level < 74)
                                                        exp_reward = 36822370;
                                                    if (level >= 74 && level < 79)
                                                        exp_reward = 57533091;
                                                    if (level >= 79 && level < 87)
                                                        exp_reward = 70404048;
                                                    if (level >= 87 && level < 90)
                                                        exp_reward = 84097242;
                                                    if (level >= 90 && level < 93)
                                                        exp_reward = 102959118;
                                                    if (level >= 93 && level < 96)
                                                        exp_reward = 134266326;
                                                    if (level >= 96 && level < 98)
                                                        exp_reward = 100801220;
                                                    if (level >= 98 && level <= 100)
                                                        exp_reward = 214351925;

                                                    if (level > 100)
                                                    {
                                                        switch (level)
                                                        {
                                                            case 101: exp_reward = 242910783; break;
                                                            case 102: exp_reward = 286050512; break;
                                                            case 103: exp_reward = 259627544; break;
                                                            case 104: exp_reward = 232767237; break;
                                                            case 105: exp_reward = 241888762; break;
                                                            case 106: exp_reward = 249478280; break;
                                                            case 107: exp_reward = 265126887; break;
                                                            case 108: exp_reward = 187446887; break;
                                                            case 109: exp_reward = 193715970; break;
                                                            case 110: exp_reward = 204416075; break;
                                                            case 111: exp_reward = 227337342; break;
                                                            case 112: exp_reward = 230562942; break;
                                                            case 113: exp_reward = 234594942; break;
                                                            case 114: exp_reward = 238626942; break;
                                                            case 115: exp_reward = 240239742; break;
                                                            case 116: exp_reward = 242658942; break;
                                                            case 117: exp_reward = 246690942; break;
                                                            case 118: exp_reward = 290290023; break;
                                                            case 119: exp_reward = 358712493; break;
                                                            case 120: exp_reward = 282274058; break;
                                                            case 121: exp_reward = 338728870; break;
                                                            case 122: exp_reward = 243884786; break;
                                                            case 123: exp_reward = 292661743; break;
                                                            case 124: exp_reward = 322122547; break;
                                                            case 125: exp_reward = 292661744; break;
                                                            case 126: exp_reward = 351194092; break;
                                                            case 127: exp_reward = 337146328; break;
                                                            case 128: exp_reward = 303431696; break;
                                                            case 129: exp_reward = 322122547; break;
                                                        }
                                                    }
                                                    #endregion
                                                    if (client.Entity.Level >= 110) { needTimes = 2; }
                                                    if (client.Entity.Level >= 130) { needTimes += 8; }
                                                    if (client.Entity.Level >= 135)
                                                    {
                                                        dialog.Text("I can't help you anymore, you're too high leveled!");
                                                        dialog.Option("I see, Thanks!", 255);
                                                        break;
                                                    }
                                                    if (client.Inventory.Contains(1088000, needTimes))
                                                    {
                                                        client.Inventory.Remove(1088000, needTimes);
                                                        client.IncreaseExperience(exp_reward, false);
                                                        client.LastDragonBallUse = DateTime.Now;
                                                        dialog.Text("Congratulations! You've received a lot of experience from me today, enjoy!");
                                                        dialog.Text("I'll see you only tomorrow now.");
                                                        dialog.Option("I see, Thanks!", 255);
                                                        break;
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("I am sorry, but obviously you want to scam me out because you don't have the amount of required DragonBalls.");
                                                        dialog.Option("Sorry.", 255);
                                                        dialog.Send();
                                                        break;
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("I am sorry, but I remeber that I gave you this opportunity already today. I can't do it more than once per day so I'm afraid I have to tell you good bye until tomorrow.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                    break;
                                                }
                                            }
                                    }
                                    break;
                                }
                            #endregion

                            #region LoveStone
                            case 390:
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                dialog.Text("Hello mate, how do you do? Listen, There are not many people that can make a marriage last, but I can sense that you are one of them, if you want to marry someone just let me know. Also, if you are heavenly blessed I can give you one hour of double exp each day.");
                                                dialog.Option("Yes, I want to marry someone.", 1);
                                                dialog.Option("I need double exp.", 2);
                                                dialog.Option("Nothing thank you.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 1:
                                            {
                                                if (client.Entity.Spouse == "None")
                                                {
                                                    dialog.Text("Here, click on the player you want to be your spouse.");
                                                    dialog.Option("Thank you.", 255);
                                                    dialog.Send();
                                                    Data data = new Data(true);
                                                    data.UID = client.Entity.UID;
                                                    data.ID = Data.OpenCustom;
                                                    data.dwParam = Data.CustomCommands.FlowerPointer;
                                                    client.Send(data);
                                                }
                                                else
                                                {
                                                    dialog.Text("You are already married. If you want to broke the marriage, you have to go to StarLit. He'll handle your request.");
                                                    dialog.Option("Alright that's what I'll do.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 2:
                                            {
                                                if (client.Entity.HeavenBlessing > 0)
                                                {
                                                    if (!client.DoubleExpToday)
                                                    {
                                                        dialog.Text("Here. Come back tomorrow for more.");
                                                        dialog.Option("Alright that's what I'll do.", 255);
                                                        dialog.Send();

                                                        client.Entity.DoubleExperienceTime = 3600;
                                                        client.DoubleExpToday = true;
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You already took your double exp today. Come back tomorrow.");
                                                        dialog.Option("Alright that's what I'll do.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You cannot take double exp because you are not heavenly blessed.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                    }
                                    break;
                                }
                            #endregion

                            #region Eternity
                            case 300500:
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                dialog.Text("Hello conqueror. You know, there are ancient stories about a second life and many people chose not to believe it. Even so, there are some people that believe in it, and that inspired me to learn about it. In my study, I found out how to reborn someone. But, in this quest, a CelestialStone may be needed. To get one, talk with Celestine(TwinCity 365, 92).");
                                                dialog.Option("Tell me more about it.", 1);
                                                dialog.Option("Reborm me.", 2);
                                                dialog.Option("Nothing thank you.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 1:
                                            {
                                                dialog.Text("So you want to know more? When you reborn, you can chose what class you want to be the second life. Once you reborn you will start again the journey to conquer this world from level 15. Beware that you may gain some special skills depending on the class you chose to reborn, and you'll be able to get an own pet, that will follow and help you level or fight. The cost is a CelestialStone.");
                                                dialog.Option("Reborm me.", 2);
                                                dialog.Option("Nothing thank you.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 2:
                                            {
                                                if (client.Entity.Reborn == 0)
                                                {
                                                    if (client.Entity.Class % 10 == 5 && client.Entity.Level >= (client.Entity.Class == 135 ? 110 : 120))
                                                    {
                                                        dialog.Text("There are two kinds of reborns. One is the normal one and the second one is blessed. The normal reborn will give you the chance to get a Super Gem and the blessed reborn will set a -1 into one of your equipment that you wear during the reborn. What do you chose?");
                                                        dialog.Option("Normal reborn.", 5);
                                                        dialog.Option("Blessed reborn.", 3);
                                                        dialog.Option("Nothing thank you.", 255);
                                                        dialog.Send();
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You cannot reborn if your level is not 110+ for water saints and 120+ for other masters.");
                                                        dialog.Option("Ahh.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You cannot reborn again here. Alex, an elder who lives in Ape Canyon, will tell you about the third life.");
                                                    dialog.Option("Thank you.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 5:
                                            {
                                                if (client.Entity.Reborn == 0)
                                                {
                                                    if (client.Entity.Class % 10 == 5 && client.Entity.Level >= (client.Entity.Class == 135 ? 110 : 120))
                                                    {
                                                        dialog.Text("Select the super gem you desire.");
                                                        dialog.Option("SuperPhoenixGem.", 203);
                                                        dialog.Option("SuperDragonGem.", 213);
                                                        dialog.Option("SuperFuryGem.", 223);
                                                        dialog.Option("SuperRainbowGem.", 233);
                                                        dialog.Option("SuperVioletGem.", 253);
                                                        dialog.Option("SuperMoonGem.", 254);
                                                        dialog.Option("SuperKylinGem.", 243);
                                                        dialog.Option("Nothing thank you.", 255);
                                                        dialog.Send();
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You cannot reborn if your level is not 110+ for water saints and 120+ for other masters.");
                                                        dialog.Option("Ahh.", 255);
                                                        dialog.Send();
                                                    }
                                                    break;
                                                }
                                                else
                                                {
                                                    dialog.Text("You cannot reborn again here. Alex, an elder who lives in Ape Canyon, will tell you about the third life.");
                                                    dialog.Option("Thank you.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 3:
                                            {
                                                if (client.Entity.Reborn == 0)
                                                {
                                                    if (client.Entity.Class % 10 == 5 && client.Entity.Level >= (client.Entity.Class == 135 ? 110 : 120))
                                                    {
                                                        dialog.Text("Select the class you want to reborn in.");
                                                        dialog.Option("Trojan.", (byte)(10 + npcRequest.OptionID));
                                                        dialog.Option("Warrior.", (byte)(20 + npcRequest.OptionID));
                                                        dialog.Option("Archer.", (byte)(40 + npcRequest.OptionID));
                                                        dialog.Option("WaterTaoist.", (byte)(132 + npcRequest.OptionID));
                                                        dialog.Option("FireTaoist.", (byte)(142 + npcRequest.OptionID));
                                                        dialog.Option("Ninja.", (byte)(50 + npcRequest.OptionID));
                                                        dialog.Option("Monk.", (byte)(60 + npcRequest.OptionID));
                                                        dialog.Option("Pirate.", (byte)(70 + npcRequest.OptionID));
                                                        //dialog.Option("Nothing thank you.", 255);
                                                        dialog.Send();
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You cannot reborn if your level is not 110+ for water saints and 120+ for other masters.");
                                                        dialog.Option("Ahh.", 255);
                                                        dialog.Send();
                                                    }
                                                    break;
                                                }
                                                else
                                                {
                                                    dialog.Text("You cannot reborn again here. Alex, an elder who lives in Ape Canyon, will tell you about the third life.");
                                                    dialog.Option("Thank you.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        default:
                                            {
                                                if (client.Entity.Reborn == 0)
                                                {
                                                    if (client.Entity.Class % 10 == 5 && client.Entity.Level >= (client.Entity.Class == 135 ? 110 : 120))
                                                    {
                                                        if (npcRequest.OptionID == 255)
                                                            return;
                                                        if (npcRequest.OptionID >= 200 && npcRequest.OptionID <= 254)
                                                        {
                                                            client.SelectedGem = (byte)(npcRequest.OptionID % 100);
                                                            if (client.SelectedGem == 54)
                                                                client.SelectedGem = 63;
                                                            if (client.Entity.Reborn == 0)
                                                            {
                                                                byte id = 4;
                                                                dialog.Text("Select the class you want to reborn in.");
                                                                dialog.Option("Trojan.", (byte)(10 + id));
                                                                dialog.Option("Warrior.", (byte)(20 + id));
                                                                dialog.Option("Archer.", (byte)(40 + id));
                                                                dialog.Option("WaterTaoist.", (byte)(132 + id));
                                                                dialog.Option("FireTaoist.", (byte)(142 + id));
                                                                dialog.Option("Ninja.", (byte)(50 + id));
                                                                dialog.Option("Monk.", (byte)(60 + id));
                                                                dialog.Option("Pirate.", (byte)(70 + id));
                                                                //dialog.Option("Nothing thank you.", 255);
                                                                dialog.Send();
                                                                break;
                                                            }
                                                            else
                                                            {
                                                                dialog.Text("You cannot reborn again here. Alex, an elder who lives in Ape Canyon, will tell you about the third life.");
                                                                dialog.Option("Thank you.", 255);
                                                                dialog.Send();
                                                            }
                                                        }
                                                        else
                                                        {
                                                            if (client.Inventory.Contains(721259, 1))
                                                            {
                                                                byte _class = (byte)(npcRequest.OptionID - npcRequest.OptionID % 10);
                                                                if (_class > 100)
                                                                    _class += 2;
                                                                byte type = (byte)(npcRequest.OptionID - _class);
                                                                if (_class < 100)
                                                                    _class++;
                                                                if (client.Reborn(_class))
                                                                {
                                                                    client.Inventory.Remove(721259, 1);
                                                                    if (type == 4)
                                                                    {
                                                                        if (client.SelectedGem != 0)
                                                                        {
                                                                            uint gemid = (uint)(client.SelectedGem + 700000);
                                                                            client.Inventory.Add(gemid, 0, 1);
                                                                        }
                                                                    }
                                                                    else
                                                                    {
                                                                        int availableshots = 0;
                                                                        for (byte count = 0; count < 12; count++)
                                                                            if (!client.Equipment.Free(count))
                                                                                if (client.Equipment.TryGetItem(count).Bless == 0)
                                                                                    availableshots++;
                                                                        if (availableshots != 0)
                                                                        {
                                                                            byte ex = (byte)PhoenixProject.ServerBase.Kernel.Random.Next(12);
                                                                            if (!client.Equipment.Free(ex))
                                                                                if (client.Equipment.TryGetItem(ex).Bless == 0)
                                                                                {
                                                                                    var item = client.Equipment.TryGetItem(ex);
                                                                                    item.Bless = 1;
                                                                                    item.Mode = PhoenixProject.Game.Enums.ItemMode.Update;
                                                                                    item.Send(client);
                                                                                    PhoenixProject.Database.ConquerItemTable.UpdateBless(item);
                                                                                }
                                                                        }
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    dialog.Text("Sorry, but you need atleast 2 free spaces in your inventory.");
                                                                    dialog.Option("Ohh.", 255);
                                                                    dialog.Send();
                                                                }
                                                            }
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You cannot reborn if your level is not 110+ for water saints and 120+ for other masters.");
                                                        dialog.Option("Ahh.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You cannot reborn again here. Alex, an elder who lives in Ape Canyon, will tell you about the third life.");
                                                    dialog.Option("Thank you.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                    }
                                    break;
                                }
                            #endregion

                            #region MillionaireLee
                            case 5004:
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {

                                                dialog.Text("Hey you! Yeah, it's you I am talking about. I've got a great deal that you cannot leave without taking it. I will give you one meteorscroll for ten meteors and one dragonballscroll for ten dragonballs. With those scrolls you can have more than fourty meteors or dragonballs in your inventory at once!");
                                                dialog.Option("Pack +1 Stones.", 3);
                                                dialog.Option("Pack +2 Stones.", 4);
                                                dialog.Option("Pack +3 Stones.", 5);
                                                dialog.Option("Pack Normal Gems.", 6);
                                                dialog.Option("Pack EXP Balls for me!", 7);
                                                dialog.Option("pack meteors.", 1);
                                                dialog.Option("pack dragonballs", 2);
                                                dialog.Option("I am poor and do not have the problem.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 7:
                                            {
                                                //720757 EXPBallPack
                                                //723712 +1StonePack
                                                //730001 +1Stone
                                                //729022 +2StonePack
                                                //729023 +3StonePack
                                                if (client.Inventory.Contains(723700, 10))
                                                {
                                                    client.Inventory.Remove(723700, 10);
                                                    client.Inventory.Add(720757, 0, 1);
                                                }
                                                else
                                                {
                                                    dialog.Text("You poor man! I can't help you, you dont have 10 ExpBalls.");
                                                    dialog.Option("Sorry!", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 5:
                                            {
                                                //723712 +1StonePack
                                                //730001 +1Stone
                                                //729022 +2StonePack
                                                //729023 +3StonePack
                                                if (client.Inventory.Contains(730003, 10))
                                                {
                                                    client.Inventory.Remove(730003, 10);
                                                    client.Inventory.Add(729023, 0, 1);
                                                }
                                                else
                                                {
                                                    dialog.Text("You poor man! I can't help you, you dont have 10 +3 Stones.");
                                                    dialog.Option("Sorry!", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 4:
                                            {
                                                //723712 +1StonePack
                                                //730001 +1Stone
                                                //729022 +2StonePack
                                                if (client.Inventory.Contains(730002, 10))
                                                {
                                                    client.Inventory.Remove(730002, 10);
                                                    client.Inventory.Add(729022, 0, 1);
                                                }
                                                else
                                                {
                                                    dialog.Text("You poor man! I can't help you, you dont have 10 +2 Stones.");
                                                    dialog.Option("Sorry!", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 3:
                                            {
                                                //723712 +1StonePack
                                                //730001 +1Stone
                                                if (client.Inventory.Contains(730001, 5))
                                                {
                                                    client.Inventory.Remove(730001, 5);
                                                    client.Inventory.Add(723712, 0, 1);
                                                }
                                                else
                                                {
                                                    dialog.Text("You poor man! I can't help you, you dont have 5 +1 Stone.");
                                                    dialog.Option("Sorry!", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 1:
                                            {
                                                if (client.Inventory.Contains(1088001, 10))
                                                {
                                                    client.Inventory.Remove(1088001, 10);
                                                    client.Inventory.Add(720027, 0, 1);
                                                }
                                                else
                                                {
                                                    dialog.Text("You poor man! I can't help you.");
                                                    dialog.Option("Why!?", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 2:
                                            {
                                                if (client.Inventory.Contains(1088000, 10))
                                                {
                                                    client.Inventory.Remove(1088000, 10);
                                                    client.Inventory.Add(720028, 0, 1);
                                                }
                                                else
                                                {
                                                    dialog.Text("You poor man! I can't help you.");
                                                    dialog.Option("Why!?", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                    }
                                    break;
                                }
                            #endregion

                            #region Granny
                            case 699:
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                dialog.Text("These youngsters forget to increase the durabuility when they upgrade your items. ");
                                                dialog.Text("I can take your SuperKylinGems and try to increase your item's max durabuility. ");
                                                dialog.Text("It's possible that the item could be completely repaired too. How many will you try with?");
                                                dialog.Input("Enter:", 1, 2);
                                                dialog.Option("Not now.", 255);

                                                dialog.Send();
                                                break;
                                            }
                                        case 1:
                                            {
                                                byte Kylins = 0;
                                                if (!Byte.TryParse(npcRequest.Input, out Kylins))
                                                {// Input doesn't contain numbers only.
                                                    dialog.Text("Tell me, how am I supposed to get your durability higher if you can't give me a number 1 through 40?");
                                                    dialog.Option("Oops!", 0);
                                                    dialog.Send();
                                                    break;
                                                }
                                                if (Kylins != 0 && Kylins <= 40)
                                                {
                                                    if (client.Inventory.Contains(700043, Kylins))
                                                    {
                                                        client.KylinUpgradeCount = Kylins;
                                                        dialog.Text("Which item do you want to upgrade?");
                                                        dialog.Option("Headgear.", 101);
                                                        dialog.Option("Necklace.", 102);
                                                        dialog.Option("Armor.", 103);
                                                        dialog.Option("Main Weapon.", 104);
                                                        dialog.Option("Left Weapon.", 105);
                                                        dialog.Option("Ring.", 106);
                                                        dialog.Option("Next Page.", 2);
                                                        dialog.Option("I'll just leave", 255);
                                                        dialog.Send();
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You don't have that many SuperKylinGems...");
                                                        dialog.Option("Oops...", 255);
                                                        dialog.Send();
                                                        break;
                                                    }
                                                }
                                                break;
                                            }
                                        case 2:
                                            {
                                                if (client.Inventory.Contains(700043, client.KylinUpgradeCount))
                                                {
                                                    dialog.Text("Which item do you want to upgrade?");
                                                    dialog.Option("Boots.", 108);
                                                    dialog.Option("Fan.", 110);
                                                    dialog.Option("Tower.", 111);
                                                    dialog.Option("I'll just leave", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 101:
                                        case 102:
                                        case 103:
                                        case 104:
                                        case 105:
                                        case 106:
                                        case 108:
                                        case 110:
                                        case 111:
                                            {
                                                if (client.KylinUpgradeCount != 0 && client.KylinUpgradeCount <= 40)
                                                {
                                                    if (client.Inventory.Contains(700043, client.KylinUpgradeCount))
                                                    {
                                                        var item = client.Equipment.TryGetItem((byte)(npcRequest.OptionID - 100));
                                                        if (item != null)
                                                        {
                                                            #region old
                                                            /*if (item.Durability == item.MaximDurability)
                                                {
                                                    var itemdetail = PhoenixProject.Database.ConquerItemInformation.BaseInformations[item.ID];
                                                    if (itemdetail.Durability != item.MaximDurability)
                                                    {
                                                        
                                                        int diff = itemdetail.Durability - item.MaximDurability;

                                                        int need = Math.Max((diff / 100) / 6, 1);

                                                        need = Math.Min(need, client.KylinUpgradeCount);

                                                        for (int counter = 0; counter < need; counter++)
                                                        {
                                                            item.MaximDurability += 100;
                                                            client.Inventory.Remove(700043, 1);
                                                        }
                                                        if (item.MaximDurability > itemdetail.Durability)
                                                            item.MaximDurability = itemdetail.Durability;
                                                        item.Mode = PhoenixProject.Game.Enums.ItemMode.Update;
                                                        item.Send(client);
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("Your item must be repaired first.");
                                                    dialog.Option("Oh, sorry.", 255);
                                                    dialog.Send();
                                                    break;
                                                }*/
                                                            #endregion
                                                            #region test
                                                            var itemdetail = PhoenixProject.Database.ConquerItemInformation.BaseInformations[item.ID];
                                                            if (itemdetail.Durability != item.MaximDurability)
                                                            {
                                                                ushort oldDurability = item.MaximDurability;
                                                                bool Upgraded = false;
                                                                while (client.KylinUpgradeCount != 0)
                                                                {
                                                                    client.Inventory.Remove(700043, 1);
                                                                    client.KylinUpgradeCount -= 1;

                                                                    int rndDurability = (PhoenixProject.ServerBase.Kernel.Random.Next(itemdetail.Durability));
                                                                    if (rndDurability >= item.MaximDurability)
                                                                    {
                                                                        //This looks ugly to me, not sure how else to do it.
                                                                        item.MaximDurability = ushort.Parse(rndDurability.ToString());
                                                                        rndDurability = 0;
                                                                        if (!Upgraded)
                                                                            Upgraded = true;
                                                                    }
                                                                }
                                                                if (Upgraded)
                                                                    dialog.Text("Your item's durabuility was increased from " + oldDurability + " to " + item.MaximDurability + ".\n");
                                                                else
                                                                    dialog.Text("I wasen't able to increase your item's durability..\n");
                                                                int Repair = (PhoenixProject.ServerBase.Kernel.Random.Next(3));
                                                                if (Repair == 1)
                                                                {
                                                                    if (Upgraded)
                                                                        dialog.Text("I was also able to repair the item.");
                                                                    else
                                                                    {
                                                                        dialog.Text("But I was able to repair the item.");
                                                                        Upgraded = true;
                                                                    }
                                                                    item.Durability = item.MaximDurability;
                                                                }
                                                                item.Mode = PhoenixProject.Game.Enums.ItemMode.Update;
                                                                item.Send(client);
                                                                if (Upgraded)
                                                                    dialog.Option("Thanks.", 255);
                                                                else
                                                                    dialog.Option("Darn..", 255);
                                                                dialog.Send();
                                                                break;
                                                            }
                                                            else
                                                            {
                                                                dialog.Text("This item is already at it's max durabuility!");
                                                                dialog.Option("Oh.", 255);
                                                                dialog.Send();
                                                                break;
                                                            }
                                                            #endregion
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("Wahh, What is this? I may be forgetful but I'm sure you told me you would give me " + client.KylinUpgradeCount.ToString() + " SuperKylinGems!\n\n I don't see that you have this many..");
                                                        dialog.Option("Lets try again.", 0);
                                                        dialog.Option("Nevermind.", 255);
                                                        dialog.Send();
                                                        break;
                                                    }
                                                }
                                                break;
                                            }
                                    }
                                    break;
                                }

                            #endregion

                            #region Confiscator
                            case 4450:
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                dialog.Text("Have you ever arrested anyone? Or ... don't tell me, you have been arrested by anyone? If so, there is a chance that some gear was detained.");
                                                dialog.Option("I want to check my detained gear.", 1);
                                                dialog.Option("I want to check my claimable gear.", 2);
                                                dialog.Option("Thank you.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 1:
                                            {
                                                client.Send(new Data(true) { ID = Data.OpenWindow, dwParam = Data.WindowCommands.DetainRedeem, UID = client.Entity.UID });
                                                break;
                                            }
                                        case 2:
                                            {
                                                client.Send(new Data(true) { ID = Data.OpenWindow, dwParam = Data.WindowCommands.DetainClaim, UID = client.Entity.UID });
                                                break;
                                            }
                                    }
                                    break;
                                }
                            #endregion

                            #region PurificationStabilizer
                            case 7763:
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                dialog.Text("Have you ever heard of the ruthless Terato Dragon? It cuts open every single conqueror that wants to take his prize. His prize are items that purify your items. His affiliates, sub-kings of monsters, also drop items like that. If you have such an item, I can purify your gear with it.");
                                                dialog.Text("Once purified, the item must be stabilized, otherwise the purity will dissapear after several days. If you want to stabilize your items, come to me I'll see what I can do.");
                                                dialog.Option("Purify my item.", 1);
                                                dialog.Option("Stabilize my item.", 2);
                                                dialog.Option("Nevermind.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 1:
                                            {
                                                INpc npc = null;
                                                if (client.Map.Npcs.TryGetValue(client.ActiveNpc, out npc))
                                                {
                                                    Data data = new Data(true);
                                                    data.ID = Data.OpenWindow;
                                                    data.UID = client.Entity.UID;
                                                    data.TimeStamp = Time32.Now;
                                                    data.dwParam = 455;
                                                    data.wParam1 = npc.X;
                                                    data.wParam2 = npc.Y;
                                                    client.Send(data);
                                                }
                                                break;
                                            }
                                        case 2:
                                            {
                                                INpc npc = null;
                                                if (client.Map.Npcs.TryGetValue(client.ActiveNpc, out npc))
                                                {
                                                    Data data = new Data(true);
                                                    data.ID = Data.OpenWindow;
                                                    data.UID = client.Entity.UID;
                                                    data.TimeStamp = Time32.Now;//done
                                                    data.dwParam = 459;
                                                    data.wParam1 = npc.X;
                                                    data.wParam2 = npc.Y;
                                                    client.Send(data);
                                                }
                                                break;
                                            }
                                    }
                                    break;
                                }
                            #endregion


                            #region Poker
                            case 27838:
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                dialog.Text("Hello im Poker admin ,do you want to join Poker!!");
                                                dialog.Option("Vip Room.", 1);
                                                //dialog.Option("Vip Room!", 2);
                                                dialog.Option("Just Passing By.", 255);
                                                dialog.Send();
                                                break;
                                            }

                                        case 1:
                                            {
                                                client.Entity.Teleport(8881, 55, 62);
                                                break;
                                            }

                                    }
                                    break;
                                }
                            #endregion

                            #region Mobs1
                            case 269860: //Mobs1 npc
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                dialog.Text("Hello there. I can teleport you Amazing zone which you can find ThrillingSpook it drop good Items it coast 100 cps .");
                                                dialog.Option("Teleport me.", 1);
                                                dialog.Option("I'm standing by.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 1:
                                            {
                                                if (client.Entity.ConquerPoints >= 100)
                                                {
                                                    client.Entity.ConquerPoints -= 100;
                                                    client.Entity.Teleport(8892, 29, 26);
                                                }
                                                else
                                                {
                                                    dialog.Text("You need 100 cps to be able to Teleport To ThrillingSpook.");
                                                    dialog.Option("Alright.", 255);
                                                }
                                                break;
                                            }
                                    }
                                    break;
                                }
                            #endregion

                            #region StarLit
                            case 600055:
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                dialog.Text("Hello mate, how do you do? Listen, i can help you to Divcore your Spouse Just you must agree First.");
                                                dialog.Option("Yes,Divcore me.", 1);
                                                dialog.Option("Nothing thank you.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 1:
                                            {
                                                if (client.Entity.Spouse == "None")
                                                {
                                                    dialog.Text("Sorry, you not married i cant help you ^^.");
                                                    dialog.Option("Thank you.", 255);
                                                    dialog.Send();
                                                }
                                                else
                                                {
                                                    dialog.Text("You are Free Now.Hope you will find the Good Person for you.");
                                                    dialog.Option("Alright that's what I'll do.", 255);
                                                    dialog.Send();
                                                    client.Entity.Spouse = "None";
                                                }
                                                break;
                                            }
                                    }
                                    break;
                                }
                            #endregion

                            #region CollecterZhao
                            case 2070:
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                dialog.Text("Hello mate, i can help you to change Amulets and LifeFruitBasket for 10 cps what you have?.");
                                                dialog.Option("LifeFruitBasket", 1);
                                                dialog.Option("PenitenceAmulet.", 2);
                                                dialog.Option("DisguiseAmulet.", 3);
                                                dialog.Option("Nothing thank you.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 1:
                                            {
                                                if (client.Inventory.Contains(723725, 1))
                                                {
                                                    client.Inventory.Remove(723725, 1);
                                                    client.Entity.ConquerPoints += 10;
                                                }
                                                else
                                                {
                                                    dialog.Text("Sorry you dont Have Any LifeFruitBaskets.");
                                                    dialog.Option("Alright Thanks", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 2:
                                            {
                                                if (client.Inventory.Contains(723727, 1))
                                                {
                                                    client.Inventory.Remove(723727, 1);
                                                    client.Entity.ConquerPoints += 10;
                                                }
                                                else
                                                {
                                                    dialog.Text("Sorry you dont Have Any PenitenceAmulet.");
                                                    dialog.Option("Alright Thanks", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 3:
                                            {
                                                if (client.Inventory.Contains(723724, 1))
                                                {
                                                    client.Inventory.Remove(723724, 1);
                                                    client.Entity.ConquerPoints += 10;
                                                }
                                                else
                                                {
                                                    dialog.Text("Sorry you dont Have Any DisguiseAmulet.");
                                                    dialog.Option("Alright Thanks.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                    }
                                    break;
                                }
                            #endregion

                            #endregion
                        }
                        break;
                    }
                #endregion
                #region Guild war
                case 1038:
                    {
                        switch (client.ActiveNpc)
                        {
                            #region Pole
                            case 810:
                                {
                                    dialog.Text("Please, don't hurt me!.");
                                    dialog.Option("Sorry.", 255);
                                    dialog.Send();
                                    break;
                                }
                            #endregion

                            #region ClaimGuildPrize
                            case 4482114:
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                dialog.Text("Hello there. Do you want to Claim GuildWar Prize you can only Claim it 1 Time if you won GW.");
                                                dialog.Option("Leme Claim.", 1);
                                                dialog.Option("Claim TopDeputyLeader.", 3);
                                                dialog.Option("Just Passing By!", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 1:
                                            {
                                                if (client.Guild != null)
                                                {
                                                    if (client.Guild.PoleKeeper && client.Guild != null && client.AsMember.Rank == PhoenixProject.Game.Enums.GuildMemberRank.GuildLeader)
                                                    {
                                                        dialog.Text("Are you sure you want to Claim your Prize?");
                                                        dialog.Option("Yes.", 2);
                                                        dialog.Option("Ah, nevermind.", 255);
                                                        dialog.Send();
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("Sorry only GuildLeader of the Winner Guild can Claim The Prize After GuildWar End.");
                                                        dialog.Option("Ahh.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("Sorry You are not Member in any guild yet");
                                                    dialog.Option("Ahh.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 2:
                                            {
                                                if (DateTime.Now.Hour >= Game.KimoEvents.GWEEndHour && DateTime.Now.Hour < (Game.KimoEvents.GWEEndHour + 1) && DateTime.Now.DayOfWeek == DayOfWeek.Sunday && client.Guild.PoleKeeper && client.Guild != null && client.AsMember.Rank == PhoenixProject.Game.Enums.GuildMemberRank.GuildLeader && ClassPk.TopGlClaim == 0)
                                                {
                                                    client.Entity.ConquerPoints += PhoenixProject.Database.rates.GuildWar;
                                                    ClassPk.AddGl();
                                                    client.Inventory.Add(723467, 0, 1);
                                                    Game.Flags.AddGuildLeader(client);
                                                    client.Entity.AddFlag(Update.Flags.TopGuildLeader);
                                                    PhoenixProject.ServerBase.Kernel.SendWorldMessage(new Message("Congratulations! " + client.Entity.Name + " Leader of " + client.Guild.PoleKeeper + " The winner guild has Claimed Guild War Prize " + PhoenixProject.Database.rates.GuildWar + " cps and LordToken!", System.Drawing.Color.White, Message.TopLeft), PhoenixProject.ServerBase.Kernel.GamePool.Values);
                                                }
                                                else
                                                {
                                                    dialog.Text("Sorry you dont have Any Prize to claim only GL of the winner guild can claim Prize After GW");
                                                    dialog.Option("Ahh.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 3:
                                            {
                                                if (client.Guild != null)
                                                {
                                                    if (client.Guild.PoleKeeper && client.Guild != null && client.AsMember.Rank == PhoenixProject.Game.Enums.GuildMemberRank.DeputyLeader)
                                                    {
                                                        dialog.Text("Are you sure you want to Claim your Prize?");
                                                        dialog.Option("Yes.", 4);
                                                        dialog.Option("Ah, nevermind.", 255);
                                                        dialog.Send();
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("Sorry only DeputyLeader of the Winner Guild can Claim The Prize After GuildWar End.");
                                                        dialog.Option("Ahh.", 255);
                                                        dialog.Send();
                                                    }

                                                }
                                                else
                                                {
                                                    dialog.Text("Sorry You are not Member in any guild yet");
                                                    dialog.Option("Ahh.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 4:
                                            {
                                                if (!client.Entity.ContainsFlag(Update.Flags.TopDeputyLeader))
                                                {
                                                    if (DateTime.Now.Hour >= Game.KimoEvents.GWEEndHour && DateTime.Now.Hour < (Game.KimoEvents.GWEEndHour + 1) && DateTime.Now.DayOfWeek == DayOfWeek.Sunday && client.Guild.PoleKeeper && client.Guild != null && client.AsMember.Rank == PhoenixProject.Game.Enums.GuildMemberRank.DeputyLeader && ClassPk.TopDlClaim < 5)
                                                    {
                                                        ClassPk.AddDl();
                                                        client.Entity.AddFlag(Update.Flags.TopDeputyLeader);
                                                        PhoenixProject.ServerBase.Kernel.SendWorldMessage(new Message("Congratulations! " + client.Entity.Name + " From " + client.Guild.PoleKeeper + " Has Claimed TopDeputyLeader Halo!", System.Drawing.Color.White, Message.TopLeft), PhoenixProject.ServerBase.Kernel.GamePool.Values);
                                                        if (ClassPk.TopDlClaim == 1)
                                                        {
                                                            Game.Flags.AddGuildDeaputy(client);
                                                        }
                                                        if (ClassPk.TopDlClaim == 2)
                                                        {
                                                            Game.Flags.AddGuildDeaputy2(client);
                                                        }
                                                        if (ClassPk.TopDlClaim == 3)
                                                        {
                                                            Game.Flags.AddGuildDeaputy3(client);
                                                        }
                                                        if (ClassPk.TopDlClaim == 4)
                                                        {
                                                            Game.Flags.AddGuildDeaputy4(client);
                                                        }
                                                        if (ClassPk.TopDlClaim == 5)
                                                        {
                                                            Game.Flags.AddGuildDeaputy5(client);
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("Sorry you dont have Any Prize to claim only Dl of the Winner Guild Can claim the halo After GW end.");
                                                        dialog.Option("Ahh.", 255);
                                                        dialog.Send();
                                                    }
                                                    break;
                                                }
                                                else
                                                {
                                                    dialog.Text("Sorry you already have top DeaputyLeader come next time ;).");
                                                    dialog.Option("Ahh.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                    }
                                    break;
                                }
                            #endregion

                            #region Gates
                            case 516074:
                                {
                                    if (client.Guild != null)
                                    {
                                        if (client.Guild.PoleKeeper)
                                        {
                                            switch (npcRequest.OptionID)
                                            {
                                                case 0:
                                                    dialog.Text("Select the option you want to pursue.");
                                                    if (client.AsMember.Rank == PhoenixProject.Game.Enums.GuildMemberRank.GuildLeader || client.AsMember.Rank == PhoenixProject.Game.Enums.GuildMemberRank.DeputyLeader)
                                                    {
                                                        dialog.Option("Open gate.", 1);
                                                        dialog.Option("Close gate.", 2);
                                                    }
                                                    dialog.Option("Get inside.", 3);
                                                    dialog.Option("Nothing.", 255);
                                                    dialog.Send();
                                                    break;
                                                case 1:
                                                    {
                                                        PhoenixProject.Game.ConquerStructures.Society.GuildWar.LeftGate.Mesh = (ushort)(250 + PhoenixProject.Game.ConquerStructures.Society.GuildWar.LeftGate.Mesh % 10);

                                                        Update upd = new Update(true);
                                                        upd.UID = PhoenixProject.Game.ConquerStructures.Society.GuildWar.LeftGate.UID;
                                                        upd.Append(Update.Mesh, PhoenixProject.Game.ConquerStructures.Society.GuildWar.LeftGate.Mesh);
                                                        client.SendScreen(upd, true);
                                                        break;
                                                    }
                                                case 2:
                                                    {
                                                        PhoenixProject.Game.ConquerStructures.Society.GuildWar.LeftGate.Mesh = (ushort)(240 + PhoenixProject.Game.ConquerStructures.Society.GuildWar.LeftGate.Mesh % 10);

                                                        Update upd = new Update(true);
                                                        upd.UID = PhoenixProject.Game.ConquerStructures.Society.GuildWar.LeftGate.UID;
                                                        upd.Append(Update.Mesh, PhoenixProject.Game.ConquerStructures.Society.GuildWar.LeftGate.Mesh);
                                                        client.SendScreen(upd, true);
                                                        break;
                                                    }
                                                case 3:
                                                    {
                                                        client.Entity.Teleport(1038, 162, 198);
                                                        break;
                                                    }
                                            }
                                        }
                                    }
                                    break;
                                }
                            case 516075:
                                {
                                    if (client.Guild != null)
                                    {
                                        if (client.Guild.PoleKeeper)
                                        {
                                            switch (npcRequest.OptionID)
                                            {
                                                case 0:
                                                    dialog.Text("Select the option you want to pursue.");
                                                    if (client.AsMember.Rank == PhoenixProject.Game.Enums.GuildMemberRank.GuildLeader || client.AsMember.Rank == PhoenixProject.Game.Enums.GuildMemberRank.DeputyLeader)
                                                    {
                                                        dialog.Option("Open gate.", 1);
                                                        dialog.Option("Close gate.", 2);
                                                    }
                                                    dialog.Option("Get inside.", 3);
                                                    dialog.Option("Nothing.", 255);
                                                    dialog.Send();
                                                    break;
                                                case 1:
                                                    {
                                                        PhoenixProject.Game.ConquerStructures.Society.GuildWar.RightGate.Mesh = (ushort)(280 + PhoenixProject.Game.ConquerStructures.Society.GuildWar.RightGate.Mesh % 10);

                                                        Update upd = new Update(true);
                                                        upd.UID = PhoenixProject.Game.ConquerStructures.Society.GuildWar.RightGate.UID;
                                                        upd.Append(Update.Mesh, PhoenixProject.Game.ConquerStructures.Society.GuildWar.RightGate.Mesh);
                                                        client.SendScreen(upd, true);
                                                        break;
                                                    }
                                                case 2:
                                                    {
                                                        PhoenixProject.Game.ConquerStructures.Society.GuildWar.RightGate.Mesh = (ushort)(270 + PhoenixProject.Game.ConquerStructures.Society.GuildWar.RightGate.Mesh % 10);

                                                        Update upd = new Update(true);
                                                        upd.UID = PhoenixProject.Game.ConquerStructures.Society.GuildWar.RightGate.UID;
                                                        upd.Append(Update.Mesh, PhoenixProject.Game.ConquerStructures.Society.GuildWar.RightGate.Mesh);
                                                        client.SendScreen(upd, true);
                                                        break;
                                                    }
                                                case 3:
                                                    {
                                                        client.Entity.Teleport(1038, 210, 177);
                                                        break;
                                                    }
                                            }
                                        }
                                    }
                                    break;
                                }
                            #endregion

                            #region Guild Conductresses

                            #region Exit Guild Arena
                            case 7000:
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                dialog.Text("Do you want to leave the guild arena?");
                                                dialog.Option("Yes.", 1);
                                                dialog.Option("No.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 1:
                                            {
                                                client.Entity.Teleport(1002, 429, 378);
                                                break;
                                            }
                                    }
                                    break;
                                }
                            #endregion


                            #endregion

                            #region Guild Conductors
                            #region IN
                            case 9884:
                            case 9885:
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                dialog.Text("In exchange of a fee of 1000gold, I will teleport you to a special place. If you don't have money, don't bother me.");
                                                dialog.Option("Teleport me.", 1);
                                                dialog.Option("I'm too poor.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 1:
                                            {
                                                if (client.Entity.Money >= 1000)
                                                {
                                                    client.Entity.Money -= 1000;
                                                    switch (client.ActiveNpc)
                                                    {
                                                        case 9884: client.Entity.Teleport(1216, 12, 481); break;
                                                        case 9885: client.Entity.Teleport(1015, 792, 573); break;
                                                    }
                                                }
                                                break;
                                            }
                                    }
                                    break;
                                }
                            #endregion
                            #endregion

                            #region Guild Conductors2
                            #region IN
                            case 9886:
                            case 9887:
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                dialog.Text("In exchange of a fee of 1000gold, I will teleport you to a special place. If you don't have money, don't bother me.");
                                                dialog.Option("Teleport me.", 1);
                                                dialog.Option("I'm too poor.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 1:
                                            {
                                                if (client.Entity.Money >= 1000)
                                                {
                                                    client.Entity.Money -= 1000;
                                                    switch (client.ActiveNpc)
                                                    {
                                                        case 9886: client.Entity.Teleport(1217, 536, 558); break;
                                                        case 9887: client.Entity.Teleport(1001, 337, 325); break;
                                                    }
                                                }
                                                break;
                                            }
                                    }
                                    break;
                                }
                            #endregion
                            #endregion
                        }
                        break;
                    }
                #endregion
                #region Promotion Center
                case 1004:
                    {
                        switch (client.ActiveNpc)
                        {
                            #region Promotion Center

                            #region [LeadPerformer]
                            case 355913:
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            dialog.Text(
                                                "Hello there! Please allow me to introduce to you the sub-class of Performers to you. "
                                                + "Performers are gifted in the harmonizing of song and swordplay into "
                                                + "beautiful, unique dances. These dances will surely make you the center of "
                                                + "people`s attention! Would you like to join us? After you join this sub-class, you "
                                                + "can level it up and get promoted to learn more stylish dances.");
                                            if (!client.Entity.SubClasses.Classes.ContainsKey((byte)ClassID.Performer))
                                                dialog.Option("Yes, I`d like to join it.", 1);
                                            dialog.Option("I want to get promoted.", 2);
                                            dialog.Option("How can I get promoted?", 3);
                                            dialog.Option("Learn UniqueDance?", 11);
                                            dialog.Option("Not my concern.", 255);
                                            dialog.Avatar(100);
                                            dialog.Send();
                                            break;
                                        case 1:
                                            dialog.Text(
                                                "I`m glad that you are willing to be one of us. I`m sure your dances will be very "
                                                + "charming. Still, there are a few requiriments you need to meet. Though "
                                                + "players of all classes can join us, we only accept players who are over level "
                                                + "70, and it takes 15 Orchids to pay the tuition fee. After joining the Performer "
                                                + "sub-class, click open your character sheet and you`ll find the "
                                                + "sub-class button on the left-hand corner. You may level up your sub-class on "
                                                + "the sub-class button sheet. You need to meet a certain sub-class level to get "
                                                + "promoted to higher sub-class phases.");
                                            dialog.Option("I see. Count me in.", 100);
                                            dialog.Option("Oh, it does not suit me.", 255);
                                            dialog.Avatar(100);
                                            dialog.Send();
                                            break;
                                        case 2:
                                            if (!client.Entity.SubClasses.Classes.ContainsKey((byte)ClassID.Performer))
                                            {
                                                dialog.Text(
                                                    "You are not a Performer yet and can`t get promoted. Do you want to join the "
                                                    + "Performer sub-class now?");
                                                dialog.Option("Yes, I`d like to join.", 1);
                                                dialog.Option("Oh. Not now.", 255);
                                                dialog.Avatar(100);
                                                dialog.Send();
                                            }
                                            else
                                            {
                                                dialog.Text(
                                                   "To promote to Phase " + (client.Entity.SubClasses.Classes[(byte)ClassID.Performer].Phase + 1).ToString() + " you must meet the requirements. have you meet "
                                                   + "them into the sub-class sheet?");
                                                dialog.Option("Positive.", 200);
                                                dialog.Option("Oh. not yet.", 255);
                                                dialog.Avatar(100);
                                                dialog.Send();
                                            }
                                            break;
                                        case 3:
                                            dialog.Text(
                                                "Good day! Please spare me a few minutes so that I can tell you about the "
                                                + "sub-classes in Twin City. Each Sub-Class has 9 phases, and the higher the "
                                                + "phase is, the more bonus effects the sub-class will offer. But keep in mind "
                                                + "that these sub-classes also have a level system and you need to level them "
                                                + "up before you can get promoted. You can level up your sub-class by gaining "
                                                + "study points.");
                                            dialog.Option("How can I get study points?", 30);
                                            dialog.Option("Oh.", 255);
                                            dialog.Avatar(100);
                                            dialog.Send();
                                            break;
                                        case 30:
                                            dialog.Text(
                                                "Well, the only way to get those points is to read the sub-class books, such as "
                                                + "the Diligence Book. When you`ve gained enough study points, open the "
                                                + "sub-class sheet from the character panel and level up the sub-class there. "
                                                + "Monsters in the wild are always bothering young adventurers, so you might "
                                                + "find some books from them.");
                                            dialog.Option("Okay.", 255);
                                            dialog.Avatar(100);
                                            dialog.Send();
                                            break;
                                        case 100:
                                            if (PacketHandler.PassLearn((byte)ClassID.Performer, client.Entity))
                                            {
                                                client.Entity.SubClasses.Classes.Add((byte)ClassID.Performer, new PhoenixProject.Statement.SubClass() { ID = (byte)ClassID.Performer, Level = 1, Phase = 1 });
                                                SubClassTable.Insert(client.Entity, (byte)ClassID.Performer);
                                                dialog.Text(
                                                    "Congratulations! You`ve learned the Performer way. Hope you use this power "
                                                    + "for the good of us all.");
                                                dialog.Option("Oh.", 255);
                                                dialog.Avatar(100);
                                                dialog.Send();
                                            }
                                            else
                                            {
                                                dialog.Text(
                                                    "I`m sorry, you need to give me 15 Orchids and "
                                                    + "reach level 70 to join us.");
                                                dialog.Option("Oh.", 255);
                                                dialog.Avatar(100);
                                                dialog.Send();
                                            }
                                            break;
                                        case 11:
                                            {
                                                dialog.Text("i can help you to learn all UniqueDance you should have Req SubClass and ");
                                                dialog.Text("5,000 cps to Learn the dance what you wana Choose to learn? ");
                                                dialog.Option("BattleDance[P1].", 12);
                                                dialog.Option("Triumph[P3].", 13);
                                                dialog.Option("StepStomp[P5].", 14);
                                                dialog.Option("MoonLight[P7].", 15);
                                                dialog.Option("SnowWind[P9].", 16);
                                                dialog.Option("Oh.", 255);
                                                dialog.Avatar(100);
                                                dialog.Send();
                                            }
                                            break;
                                        case 12:

                                            if (client.Entity.SubClasses.Classes.ContainsKey((byte)ClassID.Performer))
                                            {
                                                if (client.Entity.SubClasses.Classes[(byte)ClassID.Performer].Phase >= 1 && client.Entity.ConquerPoints >= 5000)
                                                {
                                                    client.AddSpell(new Spell(true) { ID = 1415 });
                                                    client.Entity.ConquerPoints -= 5000;
                                                    dialog.Text(
                                                        "Congratulations! You`ve learned the BattleDance . Hope you use this power "
                                                        + "for the good of us all.");
                                                    dialog.Option("Thanks", 255);
                                                    dialog.Avatar(100);
                                                    dialog.Send();
                                                }
                                            }
                                            else
                                            {
                                                dialog.Text(
                                                    "I`m sorry, you dont have Enought cps or the Req Phase.");
                                                dialog.Option("Oh.", 255);
                                                dialog.Avatar(100);
                                                dialog.Send();
                                            }
                                            break;
                                        case 13:
                                            if (client.Entity.SubClasses.Classes.ContainsKey((byte)ClassID.Performer))
                                            {
                                                if (client.Entity.SubClasses.Classes[(byte)ClassID.Performer].Phase >= 3 && client.Entity.ConquerPoints >= 5000)
                                                {
                                                    client.AddSpell(new Spell(true) { ID = 1416 });
                                                    client.Entity.ConquerPoints -= 5000;
                                                    dialog.Text(
                                                        "Congratulations! You`ve learned the Triumph. Hope you use this power "
                                                        + "for the good of us all.");
                                                    dialog.Option("Thanks", 255);
                                                    dialog.Avatar(100);
                                                    dialog.Send();
                                                }
                                            }
                                            else
                                            {
                                                dialog.Text(
                                                    "I`m sorry, you dont have Enought cps or the Req Phase.");
                                                dialog.Option("Oh.", 255);
                                                dialog.Avatar(100);
                                                dialog.Send();
                                            }
                                            break;
                                        case 14:
                                            if (client.Entity.SubClasses.Classes.ContainsKey((byte)ClassID.Performer))
                                            {
                                                if (client.Entity.SubClasses.Classes[(byte)ClassID.Performer].Phase >= 5 && client.Entity.ConquerPoints >= 5000)
                                                {
                                                    client.AddSpell(new Spell(true) { ID = 1417 });
                                                    client.Entity.ConquerPoints -= 5000;
                                                    dialog.Text(
                                                        "Congratulations! You`ve learned the StepStomp. Hope you use this power "
                                                        + "for the good of us all.");
                                                    dialog.Option("Thanks", 255);
                                                    dialog.Avatar(100);
                                                    dialog.Send();
                                                }
                                            }
                                            else
                                            {
                                                dialog.Text(
                                                    "I`m sorry, you dont have Enought cps or the Req Phase.");
                                                dialog.Option("Oh.", 255);
                                                dialog.Avatar(100);
                                                dialog.Send();
                                            }
                                            break;
                                        case 15:
                                            if (client.Entity.SubClasses.Classes.ContainsKey((byte)ClassID.Performer))
                                            {
                                                if (client.Entity.SubClasses.Classes[(byte)ClassID.Performer].Phase >= 7 && client.Entity.ConquerPoints >= 5000)
                                                {
                                                    client.AddSpell(new Spell(true) { ID = 1418 });
                                                    client.Entity.ConquerPoints -= 5000;
                                                    dialog.Text(
                                                        "Congratulations! You`ve learned the MoonLight. Hope you use this power "
                                                        + "for the good of us all.");
                                                    dialog.Option("Thanks", 255);
                                                    dialog.Avatar(100);
                                                    dialog.Send();
                                                }
                                            }
                                            else
                                            {
                                                dialog.Text(
                                                    "I`m sorry, you dont have Enought cps or the Req Phase.");
                                                dialog.Option("Oh.", 255);
                                                dialog.Avatar(100);
                                                dialog.Send();
                                            }
                                            break;
                                        case 16:
                                            if (client.Entity.SubClasses.Classes.ContainsKey((byte)ClassID.Performer))
                                            {
                                                if (client.Entity.SubClasses.Classes[(byte)ClassID.Performer].Phase >= 9 && client.Entity.ConquerPoints >= 5000)
                                                {
                                                    client.AddSpell(new Spell(true) { ID = 1419 });
                                                    client.Entity.ConquerPoints -= 5000;
                                                    dialog.Text(
                                                        "Congratulations! You`ve learned the SnowWind. Hope you use this power "
                                                        + "for the good of us all.");
                                                    dialog.Option("Thanks", 255);
                                                    dialog.Avatar(100);
                                                    dialog.Send();
                                                }
                                            }
                                            else
                                            {
                                                dialog.Text(
                                                    "I`m sorry, you dont have Enought cps or the Req Phase.");
                                                dialog.Option("Oh.", 255);
                                                dialog.Avatar(100);
                                                dialog.Send();
                                            }
                                            break;
                                        case 200:
                                            if (client.Entity.SubClasses.Classes[(byte)ClassID.Performer].Phase == 9)
                                            {
                                                dialog.Text("Your sub-class phase is already 9, you can`t promote it anymore!");
                                                dialog.Option("Oh.", 255);
                                                dialog.Avatar(100);
                                                dialog.Send();
                                                return;
                                            }
                                            if (client.Entity.SubClasses.Classes[(byte)ClassID.Performer].Phase < client.Entity.SubClasses.Classes[(byte)ClassID.Performer].Level)
                                            {
                                                client.Entity.SubClasses.Classes[(byte)ClassID.Performer].Phase++;
                                                Database.SubClassTable.Update(client.Entity, client.Entity.SubClasses.Classes[(byte)ClassID.Performer]);
                                                dialog.Text("You have promoted your sub-class successfully.");
                                                dialog.Option("Oh, Thanks.", 255);
                                                dialog.Avatar(100);
                                                dialog.Send();
                                            }
                                            else
                                            {
                                                dialog.Text("I`m sorry, you don`t meet the requirements yet.");
                                                dialog.Option("Oh.", 255);
                                                dialog.Avatar(100);
                                                dialog.Send();
                                            }
                                            break;
                                    }
                                    break;
                                }
                            #endregion
                            #region [LeadApothecary]
                            case 355912:
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            dialog.Text(
                                                "Hello there! Please allow me to introduce to you the sub-class of the "
                                                + "Apothecary. An Apothecary is a master of various oriental herbs and can use  "
                                                + "their healing powers to protect themselves from poison damage. Would you "
                                                + "like to join us? After you join this sub-class, you can level it up and get "
                                                + "promoted to gain more protection.");
                                            if (!client.Entity.SubClasses.Classes.ContainsKey((byte)ClassID.Apothecary))
                                                dialog.Option("Yes, I`d like to join it.", 1);
                                            dialog.Option("I want to get promoted.", 2);
                                            dialog.Option("How can I get promoted?", 3);
                                            dialog.Option("Not my concern.", 255);
                                            dialog.Avatar(100);
                                            dialog.Send();
                                            break;
                                        case 1:
                                            dialog.Text(
                                                "I`m glad that you desire to become one of us. I`m sure you`ll make a capable  "
                                                + "Apothecary. Still, there are a few requiriments you need to meet. Though "
                                                + "players of all classes can join us, we only accept players who are over level "
                                                + "70, and it takes 10 Meteor Tears to pay the tuition fee. After joining the "
                                                + "Apothecary sub-class, click open your character sheet and you`ll find the "
                                                + "sub-class button on the left-hand corner. You may level up your sub-class on "
                                                + "the sub-class button sheet. You need to meet a certain sub-class level to get "
                                                + "promoted to higher sub-class phases.");
                                            dialog.Option("I see. Count me in.", 100);
                                            dialog.Option("Oh, it does not suit me.", 255);
                                            dialog.Avatar(100);
                                            dialog.Send();
                                            break;
                                        case 2:
                                            if (!client.Entity.SubClasses.Classes.ContainsKey((byte)ClassID.Apothecary))
                                            {
                                                dialog.Text(
                                                    "You are not a Apothecary yet and can`t get promoted. Do you want to join the "
                                                    + "Apothecary sub-class now?");
                                                dialog.Option("Yes, I`d like to join.", 1);
                                                dialog.Option("Oh. Not now.", 255);
                                                dialog.Avatar(100);
                                                dialog.Send();
                                            }
                                            else
                                            {
                                                dialog.Text(
                                                   "To promote to Phase " + (client.Entity.SubClasses.Classes[(byte)ClassID.Apothecary].Phase + 1).ToString() + " you must meet the requirements. have you meet "
                                                   + "them into the sub-class sheet?");
                                                dialog.Option("Positive.", 200);
                                                dialog.Option("Oh. not yet.", 255);
                                                dialog.Avatar(100);
                                                dialog.Send();
                                            }
                                            break;
                                        case 3:
                                            dialog.Text(
                                                "Good day! Please spare me a few minutes so that I can tell you about the "
                                                + "sub-classes in Twin City. Each Sub-Class has 9 phases, and the higher the "
                                                + "phase is, the more bonus effects the sub-class will offer. But keep in mind "
                                                + "that these sub-classes also have a level system and you need to level them "
                                                + "up before you can get promoted. You can level up your sub-class by gaining "
                                                + "study points.");
                                            dialog.Option("How can I get study points?", 30);
                                            dialog.Option("Oh.", 255);
                                            dialog.Avatar(100);
                                            dialog.Send();
                                            break;
                                        case 30:
                                            dialog.Text(
                                                "Well, the only way to get those points is to read the sub-class books, such as "
                                                + "the Diligence Book. When you`ve gained enough study points, open the "
                                                + "sub-class sheet from the character panel and level up the sub-class there. "
                                                + "Monsters in the wild are always bothering young adventurers, so you might "
                                                + "find some books from them.");
                                            dialog.Option("Okay.", 255);
                                            dialog.Avatar(100);
                                            dialog.Send();
                                            break;
                                        case 100:
                                            if (PacketHandler.PassLearn((byte)ClassID.Apothecary, client.Entity))
                                            {
                                                client.Entity.SubClasses.Classes.Add((byte)ClassID.Apothecary, new Statement.SubClass() { ID = (byte)ClassID.Apothecary, Level = 1, Phase = 1 });
                                                Database.SubClassTable.Insert(client.Entity, (byte)ClassID.Apothecary);
                                                dialog.Text(
                                                    "Congratulations! You`ve learned the Apothecary way. Hope you use this power "
                                                    + "for the good of us all.");
                                                dialog.Option("Oh.", 255);
                                                dialog.Avatar(100);
                                                dialog.Send();
                                            }
                                            else
                                            {
                                                dialog.Text(
                                                    "I`m sorry, you need to give me 10 Meteor Tears and "
                                                    + "reach level 70 to join us.");
                                                dialog.Option("Oh.", 255);
                                                dialog.Avatar(100);
                                                dialog.Send();
                                            }
                                            break;
                                        case 200:
                                            if (client.Entity.SubClasses.Classes[(byte)ClassID.Apothecary].Phase == 9)
                                            {
                                                dialog.Text("Your sub-class phase is already 9, you can`t promote it anymore!");
                                                dialog.Option("Oh.", 255);
                                                dialog.Avatar(100);
                                                dialog.Send();
                                                return;
                                            }
                                            if (client.Entity.SubClasses.Classes[(byte)ClassID.Apothecary].Phase < client.Entity.SubClasses.Classes[(byte)ClassID.Apothecary].Level)
                                            {
                                                client.Entity.SubClasses.Classes[(byte)ClassID.Apothecary].Phase++;
                                                dialog.Text("You have promoted your sub-class successfully.");
                                                dialog.Option("Oh, Thanks.", 255);
                                                dialog.Avatar(100);
                                                dialog.Send();
                                                Database.SubClassTable.Update(client.Entity, client.Entity.SubClasses.Classes[(byte)ClassID.Apothecary]);
                                            }
                                            else
                                            {
                                                dialog.Text("I`m sorry, you don`t meet the requirements yet.");
                                                dialog.Option("Oh.", 255);
                                                dialog.Avatar(100);
                                                dialog.Send();
                                            }
                                            break;
                                    }
                                    break;
                                }
                            #endregion
                            #region [LeadMartialArtist]
                            case 355911:
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            dialog.Text(
                                                "Hello there! You look quite capable. Perhaps you`ll make a great Martial "
                                                + "Artist. Please allow me to explain the MartialArtist sub-class. The Martial "
                                                + "Artist`s awesome displays of ombat prowess are a wonder to behold, but a "
                                                + "nightmare to face. When you are a martial Artist, you will be able to increase "
                                                + "the chances of hitting with 1.5x Attack Power! Would you like to join us? After "
                                                + "you join this sub-class, you can level it up and get promoted to increase your "
                                                + "chances of hitting your enemies with more power!");
                                            if (!client.Entity.SubClasses.Classes.ContainsKey((byte)ClassID.MartialArtist))
                                                dialog.Option("Yes, I`d like to join it.", 1);
                                            dialog.Option("I want to get promoted.", 2);
                                            dialog.Option("How can I get promoted?", 3);
                                            dialog.Option("Not my concern.", 255);
                                            dialog.Avatar(100);
                                            dialog.Send();
                                            break;
                                        case 1:
                                            dialog.Text(
                                                "I`m glad that you are willing to be one of us. I`m sure you will distinguish "
                                                + "yourself with your combat ability in no time. Still, there are a few requiriments "
                                                + "you need to meet. Though players of all classes can join us, we only accept "
                                                + "players who are over level 70, and it takes 5 Celestial Stones to pay the tuition "
                                                + "fee. After joining the Martial Artist sub-class, click open your character sheet "
                                                + "and you`ll find the sub-class button on the left-hand corner. You may level up "
                                                + "your sub-class on the sub-class button sheet. You need to meet a certain sub-class "
                                                + "level to get promoted to higher sub-class phases.");
                                            dialog.Option("I see. Count me in.", 100);
                                            dialog.Option("Oh, it does not suit me.", 255);
                                            dialog.Avatar(100);
                                            dialog.Send();
                                            break;
                                        case 2:
                                            if (!client.Entity.SubClasses.Classes.ContainsKey((byte)ClassID.MartialArtist))
                                            {
                                                dialog.Text(
                                                    "You are not a Martial Artist yet and can`t get promoted. Do you want to join the "
                                                    + "Martial Artist sub-class now?");
                                                dialog.Option("Yes, I`d like to join.", 1);
                                                dialog.Option("Oh. Not now.", 255);
                                                dialog.Avatar(100);
                                                dialog.Send();
                                            }
                                            else
                                            {
                                                dialog.Text(
                                                   "To promote to Phase " + (client.Entity.SubClasses.Classes[(byte)ClassID.MartialArtist].Phase + 1).ToString() + " you must meet the requirements. have you meet "
                                                   + "them into the sub-class sheet?");
                                                dialog.Option("Positive.", 200);
                                                dialog.Option("Oh. not yet.", 255);
                                                dialog.Avatar(100);
                                                dialog.Send();
                                            }
                                            break;
                                        case 3:
                                            dialog.Text(
                                                "Good day! Please spare me a few minutes so that I can tell you about the "
                                                + "sub-classes in Twin City. Each Sub-Class has 9 phases, and the higher the "
                                                + "phase is, the more bonus effects the sub-class will offer. But keep in mind "
                                                + "that these sub-classes also have a level system and you need to level them "
                                                + "up before you can get promoted. You can level up your sub-class by gaining "
                                                + "study points.");
                                            dialog.Option("How can I get study points?", 30);
                                            dialog.Option("Oh.", 255);
                                            dialog.Avatar(100);
                                            dialog.Send();
                                            break;
                                        case 30:
                                            dialog.Text(
                                                "Well, the only way to get those points is to read the sub-class books, such as "
                                                + "the Diligence Book. When you`ve gained enough study points, open the "
                                                + "sub-class sheet from the character panel and level up the sub-class there. "
                                                + "Monsters in the wild are always bothering young adventurers, so you might "
                                                + "find some books from them.");
                                            dialog.Option("Okay.", 255);
                                            dialog.Avatar(100);
                                            dialog.Send();
                                            break;
                                        case 100:
                                            if (PacketHandler.PassLearn((byte)ClassID.MartialArtist, client.Entity))
                                            {
                                                client.Entity.SubClasses.Classes.Add((byte)ClassID.MartialArtist, new Statement.SubClass() { ID = (byte)ClassID.MartialArtist, Level = 1, Phase = 1 });
                                                Database.SubClassTable.Insert(client.Entity, (byte)ClassID.MartialArtist);
                                                dialog.Text(
                                                    "Congratulations! You`ve learned the Martial Artist way. Hope you use this power "
                                                    + "for the good of us all.");
                                                dialog.Option("Oh.", 255);
                                                dialog.Avatar(100);
                                                dialog.Send();
                                            }
                                            else
                                            {
                                                dialog.Text(
                                                    "I`m sorry, you need to buy 5 Celestial Stones from the Great Merchant and "
                                                    + "reach level 70 to join us.");
                                                dialog.Option("Oh.", 255);
                                                dialog.Avatar(100);
                                                dialog.Send();
                                            }
                                            break;
                                        case 200:
                                            if (client.Entity.SubClasses.Classes[(byte)ClassID.MartialArtist].Phase == 9)
                                            {
                                                dialog.Text("Your sub-class phase is already 9, you can`t promote it anymore!");
                                                dialog.Option("Oh.", 255);
                                                dialog.Avatar(100);
                                                dialog.Send();
                                                return;
                                            }
                                            if (client.Entity.SubClasses.Classes[(byte)ClassID.MartialArtist].Phase < client.Entity.SubClasses.Classes[(byte)ClassID.MartialArtist].Level)
                                            {
                                                client.Entity.SubClasses.Classes[(byte)ClassID.MartialArtist].Phase++;
                                                dialog.Text("You have promoted your sub-class successfully.");
                                                dialog.Option("Oh, Thanks.", 255);
                                                dialog.Avatar(100);
                                                dialog.Send();
                                                Database.SubClassTable.Update(client.Entity, client.Entity.SubClasses.Classes[(byte)ClassID.MartialArtist]);
                                            }
                                            else
                                            {
                                                dialog.Text("I`m sorry, you don`t meet the requirements yet.");
                                                dialog.Option("Oh.", 255);
                                                dialog.Avatar(100);
                                                dialog.Send();
                                            }
                                            break;
                                    }
                                    break;
                                }
                            #endregion
                            #region [LeadChiMaster]
                            case 355910:
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            dialog.Text(
                                                "Hello there! Please allow me to introduce to you the sub-class of the Chi "
                                                + "Master. The Chi Master is a potent combatant so versed in counter attacks, "
                                                + "that they have a chance of preventing their enemy from landing Critical "
                                                + "Strikes! Would you like to join us? After you join this sub-class you can level"
                                                + "it up and get promoted to increase your immunity to critical strikes.");
                                            if (!client.Entity.SubClasses.Classes.ContainsKey((byte)ClassID.ChiMaster))
                                                dialog.Option("Yes, I`d like to join it.", 1);
                                            dialog.Option("I want to get promoted.", 2);
                                            dialog.Option("How can I get promoted?", 3);
                                            dialog.Option("Where to buy Yin-Yang Fruits?", 4);
                                            dialog.Option("Not my concern.", 255);
                                            dialog.Avatar(100);
                                            dialog.Send();
                                            break;
                                        case 1:
                                            dialog.Text(
                                                "I`m glad that you are willing to be one of us. I`m sure you`ll make a capable "
                                                + "Chi Master. Still, there are a few requiriments you need to meet. Though "
                                                + "players of all classes can join us, we only accept players who are over level "
                                                + "70, and it takes 1 Yin-Yang Fruit to pay the tuition fee. You can pay 10,000 "
                                                + "Horse Racing points to the Horse Race Manager to buy one. After joining the "
                                                + "Chi Master sub-class, click open your character sheet and you`ll find the "
                                                + "sub-class button on the left-hand corner. You may level up your sub-class on "
                                                + "the sub-class button sheet. You need to meet a certain sub-class level to get "
                                                + "promoted to higher sub-class phases.");
                                            dialog.Option("I see. Count me in.", 100);
                                            dialog.Option("Oh, it does not suit me.", 255);
                                            dialog.Avatar(100);
                                            dialog.Send();
                                            break;
                                        case 2:
                                            if (!client.Entity.SubClasses.Classes.ContainsKey((byte)ClassID.ChiMaster))
                                            {
                                                dialog.Text(
                                                    "You are not a Chi Master yet and can`t get promoted. Do you want to join the "
                                                    + "Chi Master sub-class now?");
                                                dialog.Option("Yes, I`d like to join.", 1);
                                                dialog.Option("Oh. Not now.", 255);
                                                dialog.Avatar(100);
                                                dialog.Send();
                                            }
                                            else
                                            {
                                                dialog.Text(
                                                   "To promote to Phase " + client.Entity.SubClasses.Classes[(byte)ClassID.ChiMaster].Phase + 1 + " you must meet the requirements. have you meet "
                                                   + "them into the sub-class sheet?");
                                                dialog.Option("Positive.", 200);
                                                dialog.Option("Oh. not yet.", 255);
                                                dialog.Avatar(100);
                                                dialog.Send();
                                            }
                                            break;
                                        case 3:
                                            dialog.Text(
                                                "Good day! Please spare me a few minutes so that I can tell you about the "
                                                + "sub-classes in Twin City. Each Sub-Class has 9 phases, and the higher the "
                                                + "phase is, the more bonus effects the sub-class will offer. But keep in mind "
                                                + "that these sub-classes also have a level system and you need to level them "
                                                + "up before you can get promoted. You can level up your sub-class by gaining "
                                                + "study points.");
                                            dialog.Option("How can I get study points?", 30);
                                            dialog.Option("Oh.", 255);
                                            dialog.Avatar(100);
                                            dialog.Send();
                                            break;
                                        case 30:
                                            dialog.Text(
                                                "Well, the only way to get those points is to read the sub-class books, such as "
                                                + "the Diligence Book. When you`ve gained enough study points, open the "
                                                + "sub-class sheet from the character panel and level up the sub-class there. "
                                                + "Monsters in the wild are always bothering young adventurers, so you might "
                                                + "find some books from them.");
                                            dialog.Option("Okay.", 255);
                                            dialog.Avatar(100);
                                            dialog.Send();
                                            break;
                                        case 4:
                                            dialog.Text(
                                                "You may pay 10,000 Horse Racing points to the Horse Race Manager to buy "
                                                + "a Yin-Yang Fruit.");
                                            dialog.Option("Thanks.", 255);
                                            dialog.Avatar(100);
                                            dialog.Send();
                                            break;
                                        case 100:
                                            if (PacketHandler.PassLearn((byte)ClassID.ChiMaster, client.Entity))
                                            {
                                                client.Entity.SubClasses.Classes.Add((byte)ClassID.ChiMaster, new Statement.SubClass() { ID = (byte)ClassID.ChiMaster, Level = 1, Phase = 1 });
                                                Database.SubClassTable.Insert(client.Entity, (byte)ClassID.ChiMaster);
                                                dialog.Text(
                                                    "Congratulations! You`ve learned the Chi Masters way. Hope you use this power "
                                                    + "for the good of us all.");
                                                dialog.Option("Oh.", 255);
                                                dialog.Avatar(100);
                                                dialog.Send();
                                            }
                                            else
                                            {
                                                dialog.Text(
                                                    "I`m sorry, you need to buy a Yin-Yang Fruit from the Horse Race Manager and "
                                                    + "reach level 70 to join us.");
                                                dialog.Option("Oh.", 255);
                                                dialog.Avatar(100);
                                                dialog.Send();
                                            }
                                            break;
                                        case 200:
                                            if (client.Entity.SubClasses.Classes[(byte)ClassID.ChiMaster].Phase == 9)
                                            {
                                                dialog.Text("Your sub-class phase is already 9, you can`t promote it anymore!");
                                                dialog.Option("Oh.", 255);
                                                dialog.Avatar(100);
                                                dialog.Send();
                                                return;
                                            }
                                            if (client.Entity.SubClasses.Classes[(byte)ClassID.ChiMaster].Phase < client.Entity.SubClasses.Classes[(byte)ClassID.ChiMaster].Level)
                                            {
                                                client.Entity.SubClasses.Classes[(byte)ClassID.ChiMaster].Phase++;
                                                dialog.Text("You have promoted your sub-class successfully.");
                                                dialog.Option("Oh, Thanks.", 255);
                                                dialog.Avatar(100);
                                                dialog.Send();
                                                Database.SubClassTable.Update(client.Entity, client.Entity.SubClasses.Classes[(byte)ClassID.ChiMaster]);
                                            }
                                            else
                                            {
                                                dialog.Text("I`m sorry, you don`t meet the requirements yet.");
                                                dialog.Option("Oh.", 255);
                                                dialog.Avatar(100);
                                                dialog.Send();
                                            }
                                            break;
                                    }
                                    break;
                                }
                            #endregion
                            #region [Wrangler]
                            case 355916:
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            dialog.Text(
                                                "Good day! Have you ever wondered what a Wrangler is? Well, please allow "
                                                + "me to introduce this sub-class to you. Wrangler are masters of the "
                                                + "MaxHp energies and can increase! "
                                                + "Isn`t that wonderful? Would you like to join us? After you join "
                                                + "this sub-class, you can level it up and get promoted to increase your power!");
                                            if (!client.Entity.SubClasses.Classes.ContainsKey((byte)ClassID.Wrangler))
                                                dialog.Option("Yes, I`d like to join it.", 1);
                                            dialog.Option("I want to get promoted.", 2);
                                            dialog.Option("How can I get promoted?", 3);
                                            dialog.Option("Not my concern.", 255);
                                            dialog.Avatar(100);
                                            dialog.Send();
                                            break;
                                        case 1:
                                            dialog.Text(
                                                "I`m glad that you are willing to be one of us. I`m sure you will make a great "
                                                + "Wrangler. Still, there are a few requiriments you need to meet. Though players "
                                                + "of all classes can join us, we only accept players who are over level 70, and it "
                                                + "takes 40 Saddle`s to pay the tuition fee. After joining the Wrangler sub-class, "
                                                + "click open your character sheet and you`ll find the sub-class button on the "
                                                + "left-hand corner. You may level up your sub-class on the sub-class button sheet. You "
                                                + "need to meet a certain sub-class level to get promoted to higher sub-class "
                                                + "phases.");
                                            dialog.Option("I see. Count me in.", 100);
                                            dialog.Option("Oh, it does not suit me.", 255);
                                            dialog.Avatar(100);
                                            dialog.Send();
                                            break;
                                        case 2:
                                            if (!client.Entity.SubClasses.Classes.ContainsKey((byte)ClassID.Wrangler))
                                            {
                                                dialog.Text(
                                                    "You are not a Wrangler yet and can`t get promoted. Do you want to join the "
                                                    + "Warlock sub-class now?");
                                                dialog.Option("Yes, I`d like to join.", 1);
                                                dialog.Option("Oh. Not now.", 255);
                                                dialog.Avatar(100);
                                                dialog.Send();
                                            }
                                            else
                                            {
                                                dialog.Text(
                                                   "To promote to Phase " + (client.Entity.SubClasses.Classes[(byte)ClassID.Wrangler].Phase + 1).ToString() + " you must meet the requirements. have you meet "
                                                   + "them into the sub-class sheet?");
                                                dialog.Option("Positive.", 200);
                                                dialog.Option("Oh. not yet.", 255);
                                                dialog.Avatar(100);
                                                dialog.Send();
                                            }
                                            break;
                                        case 3:
                                            dialog.Text(
                                                "Good day! Please spare me a few minutes so that I can tell you about the "
                                                + "sub-classes in Twin City. Each Sub-Class has 9 phases, and the higher the "
                                                + "phase is, the more bonus effects the sub-class will offer. But keep in mind "
                                                + "that these sub-classes also have a level system and you need to level them "
                                                + "up before you can get promoted. You can level up your sub-class by gaining "
                                                + "study points.");
                                            dialog.Option("How can I get study points?", 30);
                                            dialog.Option("Oh.", 255);
                                            dialog.Avatar(100);
                                            dialog.Send();
                                            break;
                                        case 30:
                                            dialog.Text(
                                                "Well, the only way to get those points is to read the sub-class books, such as "
                                                + "the Diligence Book. When you`ve gained enough study points, open the "
                                                + "sub-class sheet from the character panel and level up the sub-class there. "
                                                + "Monsters in the wild are always bothering young adventurers, so you might "
                                                + "find some books from them.");
                                            dialog.Option("Okay.", 255);
                                            dialog.Avatar(100);
                                            dialog.Send();
                                            break;
                                        case 100:
                                            if (PacketHandler.PassLearn((byte)ClassID.Wrangler, client.Entity))
                                            {
                                                client.Entity.SubClasses.Classes.Add((byte)ClassID.Wrangler, new Statement.SubClass() { ID = (byte)ClassID.Wrangler, Level = 1, Phase = 1 });
                                                Database.SubClassTable.Insert(client.Entity, (byte)ClassID.Wrangler);
                                                dialog.Text(
                                                    "Congratulations! You`ve learned the Wrangler way. Hope you use this power "
                                                    + "for the good of us all.");
                                                dialog.Option("Oh.", 255);
                                                dialog.Avatar(100);
                                                dialog.Send();
                                            }
                                            else
                                            {
                                                dialog.Text(
                                                    "I`m sorry, you need to give me 40 Saddle's and "
                                                    + "reach level 70 to join us.");
                                                dialog.Option("Oh.", 255);
                                                dialog.Avatar(100);
                                                dialog.Send();
                                            }
                                            break;
                                        case 200:
                                            if (client.Entity.SubClasses.Classes[(byte)ClassID.Wrangler].Phase == 9)
                                            {
                                                dialog.Text("Your sub-class phase is already 9, you can`t promote it anymore!");
                                                dialog.Option("Oh.", 255);
                                                dialog.Avatar(100);
                                                dialog.Send();
                                                return;
                                            }
                                            if (client.Entity.SubClasses.Classes[(byte)ClassID.Wrangler].Phase < client.Entity.SubClasses.Classes[(byte)ClassID.Wrangler].Level)
                                            {
                                                client.Entity.SubClasses.Classes[(byte)ClassID.Wrangler].Phase++;
                                                dialog.Text("You have promoted your sub-class successfully.");
                                                dialog.Option("Oh, Thanks.", 255);
                                                dialog.Avatar(100);
                                                dialog.Send();
                                                Database.SubClassTable.Update(client.Entity, client.Entity.SubClasses.Classes[(byte)ClassID.Wrangler]);
                                            }
                                            else
                                            {
                                                dialog.Text("I`m sorry, you don`t meet the requirements yet.");
                                                dialog.Option("Oh.", 255);
                                                dialog.Avatar(100);
                                                dialog.Send();
                                            }
                                            break;
                                    }
                                    break;
                                }
                            #endregion
                            #region [LeadSage]
                            case 355915:
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            dialog.Text(
                                                "Hello, my friend. Are you here to join the Sage sub-class? Before we start, "
                                                + "please allow me to introduce this sub-class to you. Sages have strong "
                                                + "spiritual powers and have a gruesome ability to reduce a target`s Magical "
                                                + "Defense. This is very helpful in defeating those who might underestimate "
                                                + "your power! Would you like to join us? After you join this sub-class, you can "
                                                + "level it up and get promoted to reduce more of your target`s Magical Defense.");
                                            if (!client.Entity.SubClasses.Classes.ContainsKey((byte)Statement.ClassID.Sage))
                                                dialog.Option("Yes, I`d like to join it.", 1);
                                            dialog.Option("I want to get promoted.", 2);
                                            dialog.Option("How can I get promoted?", 3);
                                            dialog.Option("Not my concern.", 255);
                                            dialog.Avatar(100);
                                            dialog.Send();
                                            break;
                                        case 1:
                                            dialog.Text(
                                                "I`m glad that you are willing to be one of us. I`m sure you will be a fantastic "
                                                + "Sage. Still, there are a few requiriments you need to meet. Though players "
                                                + "of all classes can join us, we only accept players who are over level 70, and it "
                                                + "takes 20 Lucky Amulets to pay the tuition fee. After joining the Sage sub-class, "
                                                + "click open your character sheet and you`ll find the sub-class button on the "
                                                + "left-hand corner. You may level up your sub-class on the sub-class button sheet. You "
                                                + "need to meet a certain sub-class level to get promoted to higher sub-class "
                                                + "phases.");
                                            dialog.Option("I see. Count me in.", 100);
                                            dialog.Option("Oh, it does not suit me.", 255);
                                            dialog.Avatar(100);
                                            dialog.Send();
                                            break;
                                        case 2:
                                            if (!client.Entity.SubClasses.Classes.ContainsKey((byte)ClassID.Sage))
                                            {
                                                dialog.Text(
                                                    "You are not a Sage yet and can`t get promoted. Do you want to join the "
                                                    + "Sage sub-class now?");
                                                dialog.Option("Yes, I`d like to join.", 1);
                                                dialog.Option("Oh. Not now.", 255);
                                                dialog.Avatar(100);
                                                dialog.Send();
                                            }
                                            else
                                            {
                                                dialog.Text(
                                                   "To promote to Phase " + (client.Entity.SubClasses.Classes[(byte)ClassID.Sage].Phase + 1).ToString() + " you must meet the requirements. have you meet "
                                                   + "them into the sub-class sheet?");
                                                dialog.Option("Positive.", 200);
                                                dialog.Option("Oh. not yet.", 255);
                                                dialog.Avatar(100);
                                                dialog.Send();
                                            }
                                            break;
                                        case 3:
                                            dialog.Text(
                                                "Good day! Please spare me a few minutes so that I can tell you about the "
                                                + "sub-classes in Twin City. Each Sub-Class has 9 phases, and the higher the "
                                                + "phase is, the more bonus effects the sub-class will offer. But keep in mind "
                                                + "that these sub-classes also have a level system and you need to level them "
                                                + "up before you can get promoted. You can level up your sub-class by gaining "
                                                + "study points.");
                                            dialog.Option("How can I get study points?", 30);
                                            dialog.Option("Oh.", 255);
                                            dialog.Avatar(100);
                                            dialog.Send();
                                            break;
                                        case 30:
                                            dialog.Text(
                                                "Well, the only way to get those points is to read the sub-class books, such as "
                                                + "the Diligence Book. When you`ve gained enough study points, open the "
                                                + "sub-class sheet from the character panel and level up the sub-class there. "
                                                + "Monsters in the wild are always bothering young adventurers, so you might "
                                                + "find some books from them.");
                                            dialog.Option("Okay.", 255);
                                            dialog.Avatar(100);
                                            dialog.Send();
                                            break;
                                        case 100:
                                            if (PacketHandler.PassLearn((byte)ClassID.Sage, client.Entity))
                                            {
                                                client.Entity.SubClasses.Classes.Add((byte)ClassID.Sage, new Statement.SubClass() { ID = (byte)ClassID.Sage, Level = 1, Phase = 1 });
                                                Database.SubClassTable.Insert(client.Entity, (byte)ClassID.Sage);
                                                dialog.Text(
                                                    "Congratulations! You`ve learned the Sage way. Hope you use this power "
                                                    + "for the good of us all.");
                                                dialog.Option("Oh.", 255);
                                                dialog.Avatar(100);
                                                dialog.Send();
                                            }
                                            else
                                            {
                                                dialog.Text(
                                                    "I`m sorry, you need to give me 20 Lucky Amulets and "
                                                    + "reach level 70 to join us.");
                                                dialog.Option("Oh.", 255);
                                                dialog.Avatar(100);
                                                dialog.Send();
                                            }
                                            break;
                                        case 200:
                                            if (client.Entity.SubClasses.Classes[(byte)ClassID.Sage].Phase == 9)
                                            {
                                                dialog.Text("Your sub-class phase is already 9, you can`t promote it anymore!");
                                                dialog.Option("Oh.", 255);
                                                dialog.Avatar(100);
                                                dialog.Send();
                                                return;
                                            }
                                            if (client.Entity.SubClasses.Classes[(byte)ClassID.Sage].Phase < client.Entity.SubClasses.Classes[(byte)ClassID.Sage].Level)
                                            {
                                                client.Entity.SubClasses.Classes[(byte)ClassID.Sage].Phase++;
                                                dialog.Text("You have promoted your sub-class successfully.");
                                                dialog.Option("Oh, Thanks.", 255);
                                                dialog.Avatar(100);
                                                dialog.Send();
                                                Database.SubClassTable.Update(client.Entity, client.Entity.SubClasses.Classes[(byte)ClassID.Sage]);
                                            }
                                            else
                                            {
                                                dialog.Text("I`m sorry, you don`t meet the requirements yet.");
                                                dialog.Option("Oh.", 255);
                                                dialog.Avatar(100);
                                                dialog.Send();
                                            }
                                            break;
                                    }
                                    break;
                                }
                            #endregion
                            #region [LeadWarlock]
                            case 355914:
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            dialog.Text(
                                                "Good day! Have you ever wondered what a Warlock is? Well, please allow "
                                                + "me to introduce this sub-class to you. Warlocks are masters of the "
                                                + "psionic energies and can increase their chances of casting spells with 2x "
                                                + "Magical Attack. Isn`t that wonderful? Would you like to join us? After you join "
                                                + "this sub-class, you can level it up and get promoted to increase your power!");
                                            if (!client.Entity.SubClasses.Classes.ContainsKey((byte)ClassID.Warlock))
                                                dialog.Option("Yes, I`d like to join it.", 1);
                                            dialog.Option("I want to get promoted.", 2);
                                            dialog.Option("How can I get promoted?", 3);
                                            dialog.Option("Not my concern.", 255);
                                            dialog.Avatar(100);
                                            dialog.Send();
                                            break;
                                        case 1:
                                            dialog.Text(
                                                "I`m glad that you are willing to be one of us. I`m sure you will make a great "
                                                + "Warlock. Still, there are a few requiriments you need to meet. Though players "
                                                + "of all classes can join us, we only accept players who are over level 70, and it "
                                                + "takes 10 Bombs to pay the tuition fee. After joining the Warlock sub-class, "
                                                + "click open your character sheet and you`ll find the sub-class button on the "
                                                + "left-hand corner. You may level up your sub-class on the sub-class button sheet. You "
                                                + "need to meet a certain sub-class level to get promoted to higher sub-class "
                                                + "phases.");
                                            dialog.Option("I see. Count me in.", 100);
                                            dialog.Option("Oh, it does not suit me.", 255);
                                            dialog.Avatar(100);
                                            dialog.Send();
                                            break;
                                        case 2:
                                            if (!client.Entity.SubClasses.Classes.ContainsKey((byte)ClassID.Warlock))
                                            {
                                                dialog.Text(
                                                    "You are not a Warlock yet and can`t get promoted. Do you want to join the "
                                                    + "Warlock sub-class now?");
                                                dialog.Option("Yes, I`d like to join.", 1);
                                                dialog.Option("Oh. Not now.", 255);
                                                dialog.Avatar(100);
                                                dialog.Send();
                                            }
                                            else
                                            {
                                                dialog.Text(
                                                   "To promote to Phase " + (client.Entity.SubClasses.Classes[(byte)ClassID.Warlock].Phase + 1).ToString() + " you must meet the requirements. have you meet "
                                                   + "them into the sub-class sheet?");
                                                dialog.Option("Positive.", 200);
                                                dialog.Option("Oh. not yet.", 255);
                                                dialog.Avatar(100);
                                                dialog.Send();
                                            }
                                            break;
                                        case 3:
                                            dialog.Text(
                                                "Good day! Please spare me a few minutes so that I can tell you about the "
                                                + "sub-classes in Twin City. Each Sub-Class has 9 phases, and the higher the "
                                                + "phase is, the more bonus effects the sub-class will offer. But keep in mind "
                                                + "that these sub-classes also have a level system and you need to level them "
                                                + "up before you can get promoted. You can level up your sub-class by gaining "
                                                + "study points.");
                                            dialog.Option("How can I get study points?", 30);
                                            dialog.Option("Oh.", 255);
                                            dialog.Avatar(100);
                                            dialog.Send();
                                            break;
                                        case 30:
                                            dialog.Text(
                                                "Well, the only way to get those points is to read the sub-class books, such as "
                                                + "the Diligence Book. When you`ve gained enough study points, open the "
                                                + "sub-class sheet from the character panel and level up the sub-class there. "
                                                + "Monsters in the wild are always bothering young adventurers, so you might "
                                                + "find some books from them.");
                                            dialog.Option("Okay.", 255);
                                            dialog.Avatar(100);
                                            dialog.Send();
                                            break;
                                        case 100:
                                            if (PacketHandler.PassLearn((byte)ClassID.Warlock, client.Entity))
                                            {
                                                client.Entity.SubClasses.Classes.Add((byte)ClassID.Warlock, new Statement.SubClass() { ID = (byte)ClassID.Warlock, Level = 1, Phase = 1 });
                                                Database.SubClassTable.Insert(client.Entity, (byte)ClassID.Warlock);
                                                dialog.Text(
                                                    "Congratulations! You`ve learned the Warlock way. Hope you use this power "
                                                    + "for the good of us all.");
                                                dialog.Option("Oh.", 255);
                                                dialog.Avatar(100);
                                                dialog.Send();
                                            }
                                            else
                                            {
                                                dialog.Text(
                                                    "I`m sorry, you need to give me 10 Bombs and "
                                                    + "reach level 70 to join us.");
                                                dialog.Option("Oh.", 255);
                                                dialog.Avatar(100);
                                                dialog.Send();
                                            }
                                            break;
                                        case 200:
                                            if (client.Entity.SubClasses.Classes[(byte)ClassID.Warlock].Phase == 9)
                                            {
                                                if (client.Entity.SubClasses.Classes[(byte)ClassID.Warlock].Phase == 9)
                                                {
                                                    dialog.Text("Your sub-class phase is already 9, you can`t promote it anymore!");
                                                    dialog.Option("Oh.", 255);
                                                    dialog.Avatar(100);
                                                    dialog.Send();
                                                    return;
                                                }
                                                if (client.Entity.SubClasses.Classes[(byte)ClassID.Warlock].Phase < client.Entity.SubClasses.Classes[(byte)ClassID.Warlock].Level)
                                                {
                                                    client.Entity.SubClasses.Classes[(byte)ClassID.Warlock].Phase++;
                                                    dialog.Text("You have promoted your sub-class successfully.");
                                                    dialog.Option("Oh, Thanks.", 255);
                                                    dialog.Avatar(100);
                                                    dialog.Send();
                                                    Database.SubClassTable.Update(client.Entity, client.Entity.SubClasses.Classes[(byte)ClassID.Warlock]);
                                                }
                                                else
                                                {
                                                    dialog.Text("I`m sorry, you don`t meet the requirements yet.");
                                                    dialog.Option("Oh.", 255);
                                                    dialog.Avatar(100);
                                                    dialog.Send();
                                                }
                                            }
                                            break;
                                    }
                                    break;
                                }
                            #endregion


                            #region PiratePromete
                            case 4272:
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                if (client.Entity.Class >= 70 && client.Entity.Class <= 75)
                                                {
                                                    dialog.Text("I am the Pirate trainer, master of balence in destruction and harmony.\nWhat do you seek, young Pirate?");
                                                    dialog.Option("Promote me.", 1);
                                                    dialog.Option("Learn skills.", 2);
                                                    //dialog.Option("Claim bound items.", 49);
                                                    dialog.Option("Wait a minute.", 255);
                                                    dialog.Send();
                                                }
                                                else
                                                {
                                                    dialog.Text("The ancient secrets of the Pirate is not for trade.\nIf you wish to learn the secrets of the Pirate come back in another life. Good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }


                                        #region Promote
                                        case 1:
                                            {
                                                if (client.Entity.Class >= 70 && client.Entity.Class <= 75)
                                                {
                                                    if (client.Entity.Class == 75)
                                                    {
                                                        dialog.Text("You cannot be promoted anymore. You have mastered your class.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("To promote now you need" + client.PromoteItemNameNeed + " level " + client.PromoteLevelNeed + ".");
                                                        dialog.Option("Promote me sir.", 3);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("The ancient secrets of the Pirate is not for trade.\nIf you wish to learn the secrets of the Pirate come back in another life. Good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 3:
                                            {
                                                if (client.Entity.Class >= 70 && client.Entity.Class <= 75)
                                                {
                                                    if (client.Entity.Class == 75)
                                                    {
                                                        dialog.Text("You cannot be promoted anymore. You have mastered your class.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                    }
                                                    else
                                                    {

                                                        if (client.PromoteItemNeed == 721020)
                                                        {
                                                            if (client.Inventory.Remove("moonbox"))
                                                            {
                                                                client.Inventory.Add(client.PromoteItemGain, 0, 1);
                                                                client.Entity.Class++;
                                                                dialog.Text("Congratulations! You have been promoted.");
                                                                dialog.Option("Thank you master.", 255);
                                                                dialog.Send();
                                                            }

                                                            else
                                                            {
                                                                dialog.Text("You don't meet the requierments.");
                                                                dialog.Option("Ahh.", 255);
                                                                dialog.Send();
                                                            }
                                                            return;
                                                        }
                                                        if (client.Inventory.Contains(client.PromoteItemNeed, client.PromoteItemCountNeed) && client.Entity.Level >= client.PromoteLevelNeed)
                                                        {
                                                            client.Inventory.Remove(client.PromoteItemNeed, client.PromoteItemCountNeed);
                                                            client.Inventory.Add(client.PromoteItemGain, 0, 1);
                                                            client.Entity.Class++;
                                                            dialog.Text("Congratulations! You have been promoted.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You don't meet the requierments.");
                                                            dialog.Option("Ahh.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("The ancient secrets of the Pirate is not for trade.\nIf you wish to learn the secrets of the Pirate come back in another life. Good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        #endregion
                                        #region Skills
                                        case 2:
                                            {
                                                if (client.Entity.Class >= 70 && client.Entity.Class <= 75)
                                                {
                                                    dialog.Text("Let me know what you want to learn.");
                                                    dialog.Option("BladeTempest (Lvl 15).", 6);
                                                    dialog.Option("ScurvyBomb (XP) (Lvl 15)", 7);
                                                    dialog.Option("CannonBarrage (Lvl 15)", 8);
                                                    dialog.Option("BlackbeardRage (Lvl 15)", 9);
                                                    dialog.Option("GaleBomb (Lvl 15)", 10);
                                                    dialog.Option("KrakensRevenge (Lvl 15)", 11);
                                                    dialog.Option("BlackSpot (Lvl 15)", 12);
                                                    dialog.Option("Next!", 5);
                                                    dialog.Send();
                                                }
                                                else
                                                {
                                                    dialog.Text("The ancient secrets of the Pirate is not for trade.\nIf you wish to learn the secrets of the Pirate come back in another life. Good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 5:
                                            {
                                                if (client.Entity.Class >= 70 && client.Entity.Class <= 75)
                                                {
                                                    dialog.Text("Which aura do you want to learn?");
                                                    dialog.Option("AdrenalineRush (Lvl 15).", 13);
                                                    dialog.Option("PiEagleEye (Lvl 15).", 14);
                                                    dialog.Option("WindStorm (Lvl 15).", 20);
                                                    dialog.Option("Back to skills.", 2);
                                                    dialog.Send();
                                                }
                                                else
                                                {
                                                    dialog.Text("The ancient secrets of the Pirate is not for trade.\nIf you wish to learn the secrets of the Pirate come back in another life. Good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 20:
                                            {
                                                if (client.Entity.Class >= 70 && client.Entity.Class <= 75)
                                                {
                                                    if (client.Entity.Level >= 15)
                                                    {
                                                        dialog.Text("You have learned WindStorm.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                        if (!client.AddSpell(LearnableSpell(11140)))
                                                        {
                                                            dialog.Text("You already know this skill WindStorm.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 15 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("The ancient secrets of the Pirate is not for trade.\nIf you wish to learn the secrets of the Pirate come back in another life. Good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 6:
                                            {
                                                if (client.Entity.Class >= 70 && client.Entity.Class <= 75)
                                                {
                                                    if (client.Entity.Level >= 15)
                                                    {
                                                        dialog.Text("You have learned BladeTempest.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                        if (!client.AddSpell(LearnableSpell(11110)))
                                                        {
                                                            dialog.Text("You already know this skill.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 15 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("The ancient secrets of the Pirate is not for trade.\nIf you wish to learn the secrets of the Pirate come back in another life. Good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 7:
                                            {
                                                if (client.Entity.Class >= 70 && client.Entity.Class <= 75 && client.Entity.FirstRebornClass == 75 && client.Entity.SecondRebornClass == 75)
                                                {
                                                    if (client.Entity.Level >= 15)
                                                    {
                                                        dialog.Text("You have learned the ScurvyBomb.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                        if (!client.AddSpell(LearnableSpell(11040)))
                                                        {
                                                            dialog.Text("You already know this skill.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 15 or more to learn ScurvyBomb .");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You need to be Pure Pirate [Pirate/Pirate/Pirate] to learn ScurvyBomb");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 8:
                                            {
                                                if (client.Entity.Class >= 70 && client.Entity.Class <= 75)
                                                {
                                                    if (client.Entity.Level >= 15)
                                                    {
                                                        dialog.Text("You have learned CannonBarrage .");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                        if (!client.AddSpell(LearnableSpell(11050)))
                                                        {
                                                            dialog.Text("You already know this skill.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 15 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("The ancient secrets of the Pirate is not for trade.\nIf you wish to learn the secrets of the Pirate come back in another life. Good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 9:
                                            {
                                                if (client.Entity.Class >= 70 && client.Entity.Class <= 75)
                                                {
                                                    if (client.Entity.Level >= 15)
                                                    {
                                                        dialog.Text("You have learned BlackbeardRage .");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                        if (!client.AddSpell(LearnableSpell(11060)))
                                                        {
                                                            dialog.Text("You already know this skill.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 15 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("The ancient secrets of the Pirate is not for trade.\nIf you wish to learn the secrets of the Pirate come back in another life. Good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 10:
                                            {
                                                if (client.Entity.Class >= 70 && client.Entity.Class <= 75)
                                                {
                                                    if (client.Entity.Level >= 15)
                                                    {
                                                        dialog.Text("You have learned GaleBomb.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                        if (!client.AddSpell(LearnableSpell(11070)))
                                                        {
                                                            dialog.Text("You already know this skill.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 15 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("The ancient secrets of the Pirate is not for trade.\nIf you wish to learn the secrets of the Pirate come back in another life. Good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 11:
                                            {
                                                if (client.Entity.FirstRebornClass == 75 && client.Entity.Class >= 70 && client.Entity.Class <= 75 || client.Entity.SecondRebornClass == 75 && client.Entity.Class >= 70 && client.Entity.Class <= 75)
                                                {
                                                    if (client.Entity.Level >= 15)
                                                    {
                                                        dialog.Text("You have learned KrakensRevenge.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                        if (!client.AddSpell(LearnableSpell(11100)))
                                                        {
                                                            dialog.Text("You already know this skill.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 15 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("Only Pirate Pirate can learn this skill.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 12:
                                            {
                                                if (client.Entity.Class >= 70 && client.Entity.Class <= 75)
                                                {
                                                    if (client.Entity.Level >= 15)
                                                    {
                                                        dialog.Text("You have learned BlackSpot.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                        if (!client.AddSpell(LearnableSpell(11120)))
                                                        {
                                                            dialog.Text("You already know this skill.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 15 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("The ancient secrets of the Pirate is not for trade.\nIf you wish to learn the secrets of the Pirate come back in another life. Good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 13:
                                            {
                                                if (client.Entity.Class >= 70 && client.Entity.Class <= 75)
                                                {
                                                    if (client.Entity.Level >= 15)
                                                    {
                                                        dialog.Text("You have learned AdrenalineRush.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                        if (!client.AddSpell(LearnableSpell(11130)))
                                                        {
                                                            dialog.Text("You already know this skill.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 15 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("The ancient secrets of the Pirate is not for trade.\nIf you wish to learn the secrets of the Pirate come back in another life. Good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 14:
                                            {
                                                if (client.Entity.Class >= 70 && client.Entity.Class <= 75)
                                                {
                                                    if (client.Entity.Level >= 15)
                                                    {
                                                        dialog.Text("You have learned PiEagleEye .");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                        if (!client.AddSpell(LearnableSpell(11030)))
                                                        {
                                                            dialog.Text("You already know this skill.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 15 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("The ancient secrets of the Pirate is not for trade.\nIf you wish to learn the secrets of the Pirate come back in another life. Good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 15:
                                            {
                                                if (client.Entity.Class >= 70 && client.Entity.Class <= 75)
                                                {
                                                    if (client.Entity.Level >= 15)
                                                    {
                                                        dialog.Text("You have learned Metal Elemental Aura.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                        if (!client.AddSpell(LearnableSpell(10420)))
                                                        {
                                                            dialog.Text("You already know this skill.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 15 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("The ancient secrets of the Pirate is not for trade.\nIf you wish to learn the secrets of the Pirate come back in another life. Good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 16:
                                            {
                                                if (client.Entity.Class >= 70 && client.Entity.Class <= 75)
                                                {
                                                    if (client.Entity.Level >= 15)
                                                    {
                                                        dialog.Text("You have learned Wood Elemental Aura.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                        if (!client.AddSpell(LearnableSpell(10421)))
                                                        {
                                                            dialog.Text("You already know this skill.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 15 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("The ancient secrets of the Pirate is not for trade.\nIf you wish to learn the secrets of the Pirate come back in another life. Good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 17:
                                            {
                                                if (client.Entity.Class >= 70 && client.Entity.Class <= 75)
                                                {
                                                    if (client.Entity.Level >= 15)
                                                    {
                                                        dialog.Text("You have learned Water Elemental Aura.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                        if (!client.AddSpell(LearnableSpell(10422)))
                                                        {
                                                            dialog.Text("You already know this skill.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 15 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("The ancient secrets of the Pirate is not for trade.\nIf you wish to learn the secrets of the Pirate come back in another life. Good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 18:
                                            {
                                                if (client.Entity.Class >= 70 && client.Entity.Class <= 75)
                                                {
                                                    if (client.Entity.Level >= 15)
                                                    {
                                                        dialog.Text("You have learned Fire Elemental Aura.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                        if (!client.AddSpell(LearnableSpell(10423)))
                                                        {
                                                            dialog.Text("You already know this skill.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 15 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("The ancient secrets of the Pirate is not for trade.\nIf you wish to learn the secrets of the Pirate come back in another life. Good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 19:
                                            {
                                                if (client.Entity.Class >= 70 && client.Entity.Class <= 75)
                                                {
                                                    if (client.Entity.Level >= 100)
                                                    {
                                                        dialog.Text("You have learned Earth Elemental Aura.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                        if (!client.AddSpell(LearnableSpell(10424)))
                                                        {
                                                            dialog.Text("You already know this skill.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 100 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("The ancient secrets of the Pirate is not for trade.\nIf you wish to learn the secrets of the Pirate come back in another life. Good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        #endregion
                                    }
                                    break;
                                }
                            #endregion
                            #region HeadAbbot
                            case 4271:
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                if (client.Entity.Class >= 60 && client.Entity.Class <= 65)
                                                {
                                                    dialog.Text("I am the monk trainer, master of balence in destruction and harmony.\nWhat do you seek, young monk?");
                                                    dialog.Option("Promote me.", 1);
                                                    dialog.Option("Learn skills.", 2);
                                                    //dialog.Option("Claim bound items.", 49);
                                                    dialog.Option("Wait a minute.", 255);
                                                    dialog.Send();
                                                }
                                                else
                                                {
                                                    dialog.Text("The ancient secrets of the monk is not for trade.\nIf you wish to learn the secrets of the monk come back in another life. Good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        #region BoundItems
                                        case 49:
                                            {
                                                dialog.Text("We just found some equipment, and I thought that we should give them to our pupils so they can be less defeatable.");
                                                if (!client.HeadgearClaim)
                                                    dialog.Option("Headgear (Lvl 15).", 50);
                                                if (!client.RingClaim)
                                                    dialog.Option("Ring (Lvl 40).", 51);
                                                if (!client.NecklaceClaim)
                                                    dialog.Option("Necklace (Lvl 50).", 52);
                                                if (!client.ArmorClaim)
                                                    dialog.Option("Armor (Lvl 70).", 53);
                                                dialog.Option("Next.", 48);
                                                dialog.Option("Nothing.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 48:
                                            {
                                                dialog.Text("We just found some equipment, and I thought that we should give them to our pupils so they can be less defeatable.");
                                                if (!client.BootsClaim)
                                                    dialog.Option("Boots (Lvl 80).", 54);
                                                if (!client.TowerClaim)
                                                    dialog.Option("Tower (Lvl 100).", 55);
                                                if (!client.FanClaim)
                                                    dialog.Option("Fan (Lvl 100).", 56);
                                                if (!client.WeaponClaim)
                                                    dialog.Option("Weapon (Lvl 110).", 57);
                                                dialog.Option("Back.", 49);
                                                dialog.Option("Nothing.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 50:
                                            {
                                                uint itemid = 143009;
                                                byte level = 15;
                                                if (!client.HeadgearClaim)
                                                {
                                                    if (client.Entity.Level >= level)
                                                    {
                                                        ConquerItem item = new ConquerItem(true);
                                                        item.ID = itemid;
                                                        item.Color = PhoenixProject.Game.Enums.Color.White;
                                                        item.Bound = true;
                                                        item.Plus = 1;
                                                        item.Durability = item.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid].Durability;
                                                        if (client.Inventory.Add(item, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd))
                                                        {
                                                            client.HeadgearClaim = true;
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You need atleast one free slot in your inventory.");
                                                            dialog.Option("Alright.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You don't have atleast level " + level + ".");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You cannot claim it twice.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 51:
                                            {
                                                uint itemid = 150079;
                                                byte level = 40;
                                                if (!client.RingClaim)
                                                {
                                                    if (client.Entity.Level >= level)
                                                    {
                                                        ConquerItem item = new ConquerItem(true);
                                                        item.ID = itemid;
                                                        item.Color = PhoenixProject.Game.Enums.Color.White;
                                                        item.Bound = true;
                                                        item.Plus = 1;
                                                        item.Durability = item.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid].Durability;
                                                        if (client.Inventory.Add(item, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd))
                                                        {
                                                            client.RingClaim = true;
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You need atleast one free slot in your inventory.");
                                                            dialog.Option("Alright.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You don't have atleast level " + level + ".");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You cannot claim it twice.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 52:
                                            {
                                                uint itemid = 120099;
                                                byte level = 50;
                                                if (!client.NecklaceClaim)
                                                {
                                                    if (client.Entity.Level >= level)
                                                    {
                                                        ConquerItem item = new ConquerItem(true);
                                                        item.ID = itemid;
                                                        item.Color = PhoenixProject.Game.Enums.Color.White;
                                                        item.Bound = true;
                                                        item.Plus = 1;
                                                        item.Durability = item.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid].Durability;
                                                        if (client.Inventory.Add(item, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd))
                                                        {
                                                            client.NecklaceClaim = true;
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You need atleast one free slot in your inventory.");
                                                            dialog.Option("Alright.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You don't have atleast level " + level + ".");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You cannot claim it twice.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 53:
                                            {
                                                uint itemid = 136069;
                                                byte level = 70;
                                                if (!client.ArmorClaim)
                                                {
                                                    if (client.Entity.Level >= level)
                                                    {
                                                        ConquerItem item = new ConquerItem(true);
                                                        item.ID = itemid;
                                                        item.Color = PhoenixProject.Game.Enums.Color.White;
                                                        item.Bound = true;
                                                        item.Plus = 1;
                                                        item.Durability = item.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid].Durability;
                                                        if (client.Inventory.Add(item, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd))
                                                        {
                                                            client.ArmorClaim = true;
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You need atleast one free slot in your inventory.");
                                                            dialog.Option("Alright.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You don't have atleast level " + level + ".");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You cannot claim it twice.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 54:
                                            {
                                                uint itemid = 160159;
                                                byte level = 80;
                                                if (!client.BootsClaim)
                                                {
                                                    if (client.Entity.Level >= level)
                                                    {
                                                        ConquerItem item = new ConquerItem(true);
                                                        item.ID = itemid;
                                                        item.Color = PhoenixProject.Game.Enums.Color.White;
                                                        item.Bound = true;
                                                        item.Plus = 1;
                                                        item.Durability = item.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid].Durability;
                                                        if (client.Inventory.Add(item, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd))
                                                        {
                                                            client.BootsClaim = true;
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You need atleast one free slot in your inventory.");
                                                            dialog.Option("Alright.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You don't have atleast level " + level + ".");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You cannot claim it twice.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 55:
                                            {
                                                uint itemid = 202009;
                                                byte level = 100;
                                                if (!client.TowerClaim)
                                                {
                                                    if (client.Entity.Level >= level)
                                                    {
                                                        ConquerItem item = new ConquerItem(true);
                                                        item.ID = itemid;
                                                        item.Color = PhoenixProject.Game.Enums.Color.White;
                                                        item.Bound = true;
                                                        item.Plus = 1;
                                                        item.Durability = item.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid].Durability;
                                                        if (client.Inventory.Add(item, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd))
                                                        {
                                                            client.TowerClaim = true;
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You need atleast one free slot in your inventory.");
                                                            dialog.Option("Alright.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You don't have atleast level " + level + ".");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You cannot claim it twice.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 56:
                                            {
                                                uint itemid = 201009;
                                                byte level = 100;
                                                if (!client.FanClaim)
                                                {
                                                    if (client.Entity.Level >= level)
                                                    {
                                                        ConquerItem item = new ConquerItem(true);
                                                        item.ID = itemid;
                                                        item.Color = PhoenixProject.Game.Enums.Color.White;
                                                        item.Bound = true;
                                                        item.Plus = 1;
                                                        item.Durability = item.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid].Durability;
                                                        if (client.Inventory.Add(item, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd))
                                                        {
                                                            client.FanClaim = true;
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You need atleast one free slot in your inventory.");
                                                            dialog.Option("Alright.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You don't have atleast level " + level + ".");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You cannot claim it twice.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 57:
                                            {
                                                byte level = 100;
                                                if (!client.WeaponClaim)
                                                {
                                                    IProf proff = null;
                                                    ushort maxlevel = 0;
                                                    foreach (var prof in client.Proficiencies.Values)
                                                    {
                                                        if (maxlevel < prof.Level && prof.ID != 0)
                                                        {
                                                            maxlevel = prof.Level;
                                                            proff = prof;
                                                        }
                                                    }
                                                    if (proff == null)
                                                        return;
                                                    uint itemid = 610199;
                                                    if (client.Entity.Level >= level)
                                                    {
                                                        ConquerItem item = new ConquerItem(true);

                                                        item.ID = itemid; item.Color = PhoenixProject.Game.Enums.Color.White;
                                                        item.Durability = item.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid].Durability;
                                                        item.Bound = true;
                                                        item.Plus = 3;
                                                        item.SocketOne = PhoenixProject.Game.Enums.Gem.EmptySocket;
                                                        if (client.Inventory.Add(item, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd))
                                                        {
                                                            client.WeaponClaim = true;
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You need atleast one free slot in your inventory.");
                                                            dialog.Option("Alright.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You don't have atleast level " + level + ".");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You cannot claim it twice.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        #endregion
                                        #region Promote
                                        case 1:
                                            {
                                                if (client.Entity.Class >= 60 && client.Entity.Class <= 65)
                                                {
                                                    if (client.Entity.Class == 65)
                                                    {
                                                        dialog.Text("You cannot be promoted anymore. You have mastered your class.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("To promote now you need" + client.PromoteItemNameNeed + " level " + client.PromoteLevelNeed + ".");
                                                        dialog.Option("Promote me sir.", 3);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("The ancient secrets of the monk is not for trade.\nIf you wish to learn the secrets of the monk come back in another life. Good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 3:
                                            {
                                                if (client.Entity.Class >= 60 && client.Entity.Class <= 65)
                                                {
                                                    if (client.Entity.Class == 65)
                                                    {
                                                        dialog.Text("You cannot be promoted anymore. You have mastered your class.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                    }
                                                    else
                                                    {

                                                        if (client.PromoteItemNeed == 721020)
                                                        {
                                                            if (client.Inventory.Remove("moonbox"))
                                                            {
                                                                client.Inventory.Add(client.PromoteItemGain, 0, 1);
                                                                client.Entity.Class++;
                                                                dialog.Text("Congratulations! You have been promoted.");
                                                                dialog.Option("Thank you master.", 255);
                                                                dialog.Send();
                                                            }

                                                            else
                                                            {
                                                                dialog.Text("You don't meet the requierments.");
                                                                dialog.Option("Ahh.", 255);
                                                                dialog.Send();
                                                            }
                                                            return;
                                                        }
                                                        if (client.Inventory.Contains(client.PromoteItemNeed, client.PromoteItemCountNeed) && client.Entity.Level >= client.PromoteLevelNeed)
                                                        {
                                                            client.Inventory.Remove(client.PromoteItemNeed, client.PromoteItemCountNeed);
                                                            client.Inventory.Add(client.PromoteItemGain, 0, 1);
                                                            client.Entity.Class++;
                                                            dialog.Text("Congratulations! You have been promoted.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You don't meet the requierments.");
                                                            dialog.Option("Ahh.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("The ancient secrets of the monk is not for trade.\nIf you wish to learn the secrets of the monk come back in another life. Good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        #endregion
                                        #region Skills
                                        case 2:
                                            {
                                                if (client.Entity.Class >= 60 && client.Entity.Class <= 65)
                                                {
                                                    dialog.Text("Let me know what you want to learn.");
                                                    dialog.Option("Triple Attack (Lvl 5).", 6);
                                                    dialog.Option("Oblivion (XP) (Lvl 15)", 7);
                                                    dialog.Option("Whirlwind Kick (Lvl 15)", 8);
                                                    dialog.Option("Radiant Palm (Lvl 40)", 9);
                                                    dialog.Option("Serenity (Lvl 40)", 10);
                                                    dialog.Option("Tranquility (Lvl 70)", 11);
                                                    dialog.Option("Compassion (Lvl 100)", 12);
                                                    dialog.Option("Auras (Lvl 20->100)", 5);
                                                    dialog.Send();
                                                }
                                                else
                                                {
                                                    dialog.Text("The ancient secrets of the monk is not for trade.\nIf you wish to learn the secrets of the monk come back in another life. Good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 5:
                                            {
                                                if (client.Entity.Class >= 60 && client.Entity.Class <= 65)
                                                {
                                                    dialog.Text("Which aura do you want to learn?");
                                                    dialog.Option("Tyrant (Lvl 20).", 13);
                                                    dialog.Option("Fend (Lvl 20)", 14);
                                                    //dialog.Option("Metal (Lvl 100)", 15);
                                                    //dialog.Option("Wood (Lvl 100)", 16);
                                                    //dialog.Option("Water (Lvl 100)", 17);
                                                    //dialog.Option("Fire (Lvl 100)", 18);
                                                    //dialog.Option("Earth (Lvl 100)", 19);
                                                    dialog.Option("Back to skills.", 2);
                                                    dialog.Send();
                                                }
                                                else
                                                {
                                                    dialog.Text("The ancient secrets of the monk is not for trade.\nIf you wish to learn the secrets of the monk come back in another life. Good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 6:
                                            {
                                                if (client.Entity.Class >= 60 && client.Entity.Class <= 65)
                                                {
                                                    if (client.Entity.Level >= 5)
                                                    {
                                                        dialog.Text("You have learned Triple Attack.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                        if (!client.AddSpell(LearnableSpell(10490)))
                                                        {
                                                            dialog.Text("You already know this skill.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 5 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("The ancient secrets of the monk is not for trade.\nIf you wish to learn the secrets of the monk come back in another life. Good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 7:
                                            {
                                                if (client.Entity.Class >= 60 && client.Entity.Class <= 65)
                                                {
                                                    if (client.Entity.Level >= 15)
                                                    {
                                                        dialog.Text("You have learned the Oblivion XP skill.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                        if (!client.AddSpell(LearnableSpell(10390)))
                                                        {
                                                            dialog.Text("You already know this skill.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 15 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("The ancient secrets of the monk is not for trade.\nIf you wish to learn the secrets of the monk come back in another life. Good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 8:
                                            {
                                                if (client.Entity.Class >= 60 && client.Entity.Class <= 65)
                                                {
                                                    if (client.Entity.Level >= 15)
                                                    {
                                                        dialog.Text("You have learned Whirlwind Kick.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                        if (!client.AddSpell(LearnableSpell(10415)))
                                                        {
                                                            dialog.Text("You already know this skill.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 15 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("The ancient secrets of the monk is not for trade.\nIf you wish to learn the secrets of the monk come back in another life. Good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 9:
                                            {
                                                if (client.Entity.Class >= 60 && client.Entity.Class <= 65)
                                                {
                                                    if (client.Entity.Level >= 40)
                                                    {
                                                        dialog.Text("You have learned Radiant Palm.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                        if (!client.AddSpell(LearnableSpell(10381)))
                                                        {
                                                            dialog.Text("You already know this skill.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 40 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("The ancient secrets of the monk is not for trade.\nIf you wish to learn the secrets of the monk come back in another life. Good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 10:
                                            {
                                                if (client.Entity.Class >= 60 && client.Entity.Class <= 65)
                                                {
                                                    if (client.Entity.Level >= 40)
                                                    {
                                                        dialog.Text("You have learned Serenity.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                        if (!client.AddSpell(LearnableSpell(10400)))
                                                        {
                                                            dialog.Text("You already know this skill.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 40 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("The ancient secrets of the monk is not for trade.\nIf you wish to learn the secrets of the monk come back in another life. Good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 11:
                                            {
                                                if (client.Entity.Class >= 60 && client.Entity.Class <= 65)
                                                {
                                                    if (client.Entity.Level >= 70)
                                                    {
                                                        dialog.Text("You have learned Tranquility.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                        if (!client.AddSpell(LearnableSpell(10425)))
                                                        {
                                                            dialog.Text("You already know this skill.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 70 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("The ancient secrets of the monk is not for trade.\nIf you wish to learn the secrets of the monk come back in another life. Good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 12:
                                            {
                                                if (client.Entity.Class >= 60 && client.Entity.Class <= 65)
                                                {
                                                    if (client.Entity.Level >= 100)
                                                    {
                                                        dialog.Text("You have learned Compassion.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                        if (!client.AddSpell(LearnableSpell(10430)))
                                                        {
                                                            dialog.Text("You already know this skill.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 100 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("The ancient secrets of the monk is not for trade.\nIf you wish to learn the secrets of the monk come back in another life. Good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 13:
                                            {
                                                if (client.Entity.Class >= 60 && client.Entity.Class <= 65)
                                                {
                                                    if (client.Entity.Level >= 20)
                                                    {
                                                        dialog.Text("You have learned Tyrent Aura.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                        if (!client.AddSpell(LearnableSpell(10395)))
                                                        {
                                                            dialog.Text("You already know this skill.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 20 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("The ancient secrets of the monk is not for trade.\nIf you wish to learn the secrets of the monk come back in another life. Good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 14:
                                            {
                                                if (client.Entity.Class >= 60 && client.Entity.Class <= 65)
                                                {
                                                    if (client.Entity.Level >= 20)
                                                    {
                                                        dialog.Text("You have learned Fend Aura.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                        if (!client.AddSpell(LearnableSpell(10410)))
                                                        {
                                                            dialog.Text("You already know this skill.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 20 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("The ancient secrets of the monk is not for trade.\nIf you wish to learn the secrets of the monk come back in another life. Good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 15:
                                            {
                                                if (client.Entity.Class >= 60 && client.Entity.Class <= 65)
                                                {
                                                    if (client.Entity.Level >= 100)
                                                    {
                                                        dialog.Text("You have learned Metal Elemental Aura.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                        if (!client.AddSpell(LearnableSpell(10420)))
                                                        {
                                                            dialog.Text("You already know this skill.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 100 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("The ancient secrets of the monk is not for trade.\nIf you wish to learn the secrets of the monk come back in another life. Good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 16:
                                            {
                                                if (client.Entity.Class >= 60 && client.Entity.Class <= 65)
                                                {
                                                    if (client.Entity.Level >= 100)
                                                    {
                                                        dialog.Text("You have learned Wood Elemental Aura.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                        if (!client.AddSpell(LearnableSpell(10421)))
                                                        {
                                                            dialog.Text("You already know this skill.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 100 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("The ancient secrets of the monk is not for trade.\nIf you wish to learn the secrets of the monk come back in another life. Good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 17:
                                            {
                                                if (client.Entity.Class >= 60 && client.Entity.Class <= 65)
                                                {
                                                    if (client.Entity.Level >= 100)
                                                    {
                                                        dialog.Text("You have learned Water Elemental Aura.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                        if (!client.AddSpell(LearnableSpell(10422)))
                                                        {
                                                            dialog.Text("You already know this skill.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 100 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("The ancient secrets of the monk is not for trade.\nIf you wish to learn the secrets of the monk come back in another life. Good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 18:
                                            {
                                                if (client.Entity.Class >= 60 && client.Entity.Class <= 65)
                                                {
                                                    if (client.Entity.Level >= 100)
                                                    {
                                                        dialog.Text("You have learned Fire Elemental Aura.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                        if (!client.AddSpell(LearnableSpell(10423)))
                                                        {
                                                            dialog.Text("You already know this skill.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 100 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("The ancient secrets of the monk is not for trade.\nIf you wish to learn the secrets of the monk come back in another life. Good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 19:
                                            {
                                                if (client.Entity.Class >= 60 && client.Entity.Class <= 65)
                                                {
                                                    if (client.Entity.Level >= 100)
                                                    {
                                                        dialog.Text("You have learned Earth Elemental Aura.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                        if (!client.AddSpell(LearnableSpell(10424)))
                                                        {
                                                            dialog.Text("You already know this skill.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 100 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("The ancient secrets of the monk is not for trade.\nIf you wish to learn the secrets of the monk come back in another life. Good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        #endregion
                                    }
                                    break;
                                }
                            #endregion

                            #region WarriorGod
                            case 10001:
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                if (client.Entity.Class >= 20 && client.Entity.Class <= 25)
                                                {
                                                    dialog.Text("I am the shield and two hand weapons master. As I see, you started your way on conquering this world. I will try to help you teaching you warrir skills and promoting you.");
                                                    dialog.Option("Promote me.", 1);
                                                    dialog.Option("Learn skills.", 2);
                                                    //dialog.Option("Claim bound items.", 49);
                                                    dialog.Option("Wait a minute.", 255);
                                                    dialog.Send();
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the warrior secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        #region BoundItems
                                        case 49:
                                            {
                                                dialog.Text("We just found some equipment, and I thought that we should give them to our pupils so they can be less defeatable.");
                                                if (!client.HeadgearClaim)
                                                    dialog.Option("Headgear (Lvl 15).", 50);
                                                if (!client.RingClaim)
                                                    dialog.Option("Ring (Lvl 40).", 51);
                                                if (!client.NecklaceClaim)
                                                    dialog.Option("Necklace (Lvl 50).", 52);
                                                if (!client.ArmorClaim)
                                                    dialog.Option("Armor (Lvl 70).", 53);
                                                dialog.Option("Next.", 48);
                                                dialog.Option("Nothing.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 48:
                                            {
                                                dialog.Text("We just found some equipment, and I thought that we should give them to our pupils so they can be less defeatable.");
                                                if (!client.BootsClaim)
                                                    dialog.Option("Boots (Lvl 80).", 54);
                                                if (!client.TowerClaim)
                                                    dialog.Option("Tower (Lvl 100).", 55);
                                                if (!client.FanClaim)
                                                    dialog.Option("Fan (Lvl 100).", 56);
                                                if (!client.WeaponClaim)
                                                    dialog.Option("Weapon (Lvl 110).", 57);
                                                dialog.Option("Back.", 49);
                                                dialog.Option("Nothing.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 50:
                                            {
                                                uint itemid = 111009;
                                                byte level = 15;
                                                if (!client.HeadgearClaim)
                                                {
                                                    if (client.Entity.Level >= level)
                                                    {
                                                        ConquerItem item = new ConquerItem(true);

                                                        item.ID = itemid; item.Color = PhoenixProject.Game.Enums.Color.White;
                                                        item.Bound = true;
                                                        item.Plus = 3;
                                                        item.Durability = item.MaximDurability = PhoenixProject.Database
                                                            .ConquerItemInformation.BaseInformations[itemid].Durability;
                                                        if (client.Inventory.Add(item, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd))
                                                        {
                                                            client.HeadgearClaim = true;
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You need atleast one free slot in your inventory.");
                                                            dialog.Option("Alright.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You don't have atleast level " + level + ".");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You cannot claim it twice.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 51:
                                            {
                                                uint itemid = 150079;
                                                byte level = 40;
                                                if (!client.RingClaim)
                                                {
                                                    if (client.Entity.Level >= level)
                                                    {
                                                        ConquerItem item = new ConquerItem(true);

                                                        item.ID = itemid; item.Color = PhoenixProject.Game.Enums.Color.White;
                                                        item.Bound = true;
                                                        item.Plus = 3;
                                                        item.Durability = item.MaximDurability = PhoenixProject.Database
                                                            .ConquerItemInformation.BaseInformations[itemid].Durability;
                                                        if (client.Inventory.Add(item, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd))
                                                        {
                                                            client.RingClaim = true;
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You need atleast one free slot in your inventory.");
                                                            dialog.Option("Alright.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You don't have atleast level " + level + ".");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You cannot claim it twice.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 52:
                                            {
                                                uint itemid = 120099;
                                                byte level = 50;
                                                if (!client.NecklaceClaim)
                                                {
                                                    if (client.Entity.Level >= level)
                                                    {
                                                        ConquerItem item = new ConquerItem(true);

                                                        item.ID = itemid; item.Color = PhoenixProject.Game.Enums.Color.White;
                                                        item.Durability = item.MaximDurability = PhoenixProject.Database
                                                            .ConquerItemInformation.BaseInformations[itemid].Durability;
                                                        item.Bound = true;
                                                        item.Plus = 3;
                                                        if (client.Inventory.Add(item, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd))
                                                        {
                                                            client.NecklaceClaim = true;
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You need atleast one free slot in your inventory.");
                                                            dialog.Option("Alright.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You don't have atleast level " + level + ".");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You cannot claim it twice.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 53:
                                            {
                                                uint itemid = 131069;
                                                byte level = 70;
                                                if (!client.ArmorClaim)
                                                {
                                                    if (client.Entity.Level >= level)
                                                    {
                                                        ConquerItem item = new ConquerItem(true);

                                                        item.ID = itemid; item.Color = PhoenixProject.Game.Enums.Color.White;
                                                        item.Durability = item.MaximDurability = PhoenixProject.Database
                                                            .ConquerItemInformation.BaseInformations[itemid].Durability;
                                                        item.Bound = true;
                                                        item.Plus = 3;
                                                        if (client.Inventory.Add(item, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd))
                                                        {
                                                            client.ArmorClaim = true;
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You need atleast one free slot in your inventory.");
                                                            dialog.Option("Alright.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You don't have atleast level " + level + ".");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You cannot claim it twice.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 54:
                                            {
                                                uint itemid = 160159;
                                                byte level = 80;
                                                if (!client.BootsClaim)
                                                {
                                                    if (client.Entity.Level >= level)
                                                    {
                                                        ConquerItem item = new ConquerItem(true);

                                                        item.ID = itemid; item.Color = PhoenixProject.Game.Enums.Color.White;
                                                        item.Durability = item.MaximDurability = PhoenixProject.Database
                                                            .ConquerItemInformation.BaseInformations[itemid].Durability;
                                                        item.Bound = true;
                                                        item.Plus = 3;
                                                        if (client.Inventory.Add(item, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd))
                                                        {
                                                            client.BootsClaim = true;
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You need atleast one free slot in your inventory.");
                                                            dialog.Option("Alright.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You don't have atleast level " + level + ".");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You cannot claim it twice.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 55:
                                            {
                                                uint itemid = 202009;
                                                byte level = 100;
                                                if (!client.TowerClaim)
                                                {
                                                    if (client.Entity.Level >= level)
                                                    {
                                                        ConquerItem item = new ConquerItem(true);

                                                        item.ID = itemid; item.Color = PhoenixProject.Game.Enums.Color.White;
                                                        item.Durability = item.MaximDurability = PhoenixProject.Database
                                                            .ConquerItemInformation.BaseInformations[itemid].Durability;
                                                        item.Bound = true;
                                                        item.Plus = 3;
                                                        if (client.Inventory.Add(item, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd))
                                                        {
                                                            client.TowerClaim = true;
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You need atleast one free slot in your inventory.");
                                                            dialog.Option("Alright.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You don't have atleast level " + level + ".");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You cannot claim it twice.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 56:
                                            {
                                                uint itemid = 201009;
                                                byte level = 100;
                                                if (!client.FanClaim)
                                                {
                                                    if (client.Entity.Level >= level)
                                                    {
                                                        ConquerItem item = new ConquerItem(true);

                                                        item.ID = itemid; item.Color = PhoenixProject.Game.Enums.Color.White;
                                                        item.Durability = item.MaximDurability = PhoenixProject.Database
                                                            .ConquerItemInformation.BaseInformations[itemid].Durability;
                                                        item.Bound = true;
                                                        item.Plus = 3;
                                                        if (client.Inventory.Add(item, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd))
                                                        {
                                                            client.FanClaim = true;
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You need atleast one free slot in your inventory.");
                                                            dialog.Option("Alright.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You don't have atleast level " + level + ".");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You cannot claim it twice.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 57:
                                            {
                                                byte level = 100;
                                                if (!client.WeaponClaim)
                                                {
                                                    IProf proff = null;
                                                    ushort maxlevel = 0;
                                                    foreach (var prof in client.Proficiencies.Values)
                                                    {
                                                        if (maxlevel < prof.Level && prof.ID != 0)
                                                        {
                                                            maxlevel = prof.Level;
                                                            proff = prof;
                                                        }
                                                    }
                                                    if (proff == null)
                                                        return;
                                                    uint itemid = (uint)(proff.ID * 1000 + 219);
                                                    if (!PhoenixProject.Database.ConquerItemInformation.BaseInformations.ContainsKey(itemid))
                                                    {
                                                        dialog.Text("You need more proficiency belonging to a weapon, and not a shield or your punch.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                        return;
                                                    }
                                                    if (client.Entity.Level >= level)
                                                    {
                                                        ConquerItem item = new ConquerItem(true);

                                                        item.ID = itemid; item.Color = PhoenixProject.Game.Enums.Color.White;
                                                        item.Durability = item.MaximDurability = PhoenixProject.Database
                                                            .ConquerItemInformation.BaseInformations[itemid].Durability;
                                                        item.Bound = true;
                                                        item.Plus = 3;
                                                        item.SocketOne = PhoenixProject.Game.Enums.Gem.EmptySocket;
                                                        if (client.Inventory.Add(item, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd))
                                                        {
                                                            client.WeaponClaim = true;
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You need atleast one free slot in your inventory.");
                                                            dialog.Option("Alright.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You don't have atleast level " + level + ".");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You cannot claim it twice.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        #endregion
                                        case 1:
                                            {
                                                if (client.Entity.Class >= 20 && client.Entity.Class <= 25)
                                                {
                                                    if (client.Entity.Class == 25)
                                                    {
                                                        dialog.Text("You cannot be promoted anymore. You have mastered your class.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("To promote now you need" + client.PromoteItemNameNeed + " level " + client.PromoteLevelNeed + ".");
                                                        dialog.Option("Promote me sir.", 3);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the warrior secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 3:
                                            {
                                                if (client.Entity.Class >= 20 && client.Entity.Class <= 25)
                                                {
                                                    if (client.Entity.Class == 25)
                                                    {
                                                        dialog.Text("You cannot be promoted anymore. You have mastered your class.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                    }
                                                    else
                                                    {

                                                        if (client.PromoteItemNeed == 721020)
                                                        {
                                                            if (client.Inventory.Remove("moonbox"))
                                                            {
                                                                client.Inventory.Add(client.PromoteItemGain, 0, 1);
                                                                client.Entity.Class++;
                                                                dialog.Text("Congratulations! You have been promoted.");
                                                                dialog.Option("Thank you master.", 255);
                                                                dialog.Send();
                                                            }

                                                            else
                                                            {
                                                                dialog.Text("You don't meet the requierments.");
                                                                dialog.Option("Ahh.", 255);
                                                                dialog.Send();
                                                            }
                                                            return;
                                                        }
                                                        if (client.Inventory.Contains(client.PromoteItemNeed, client.PromoteItemCountNeed) && client.Entity.Level >= client.PromoteLevelNeed)
                                                        {
                                                            client.Inventory.Remove(client.PromoteItemNeed, client.PromoteItemCountNeed);
                                                            client.Inventory.Add(client.PromoteItemGain, 0, 1);
                                                            client.Entity.Class++;
                                                            dialog.Text("Congratulations! You have been promoted.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You don't meet the requierments.");
                                                            dialog.Option("Ahh.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the warrior secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 2:
                                            {
                                                if (client.Entity.Class >= 20 && client.Entity.Class <= 25)
                                                {
                                                    dialog.Text("Let me know what you want to learn.");
                                                    dialog.Option("XP Skills (Lvl 40).", 5);
                                                    dialog.Option("Dash (Lvl 61).", 6);
                                                    dialog.Option("DefensiveStance (Lvl 70).", 7);
                                                    dialog.Option("MagicDefender (Lvl 70).", 8);
                                                    dialog.Send();
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the warrior secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 5:
                                            {
                                                if (client.Entity.Class >= 20 && client.Entity.Class <= 25)
                                                {
                                                    if (client.Entity.Level >= 40)
                                                    {
                                                        dialog.Text("You have learned the XP Skills of this class.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                        client.AddSpell(LearnableSpell(1025));
                                                        client.AddSpell(LearnableSpell(1020));
                                                        client.AddSpell(LearnableSpell(1015));
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 40 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the warrior secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 6:
                                            {
                                                if (client.Entity.Class >= 20 && client.Entity.Class <= 25)
                                                {
                                                    if (client.Entity.Level >= 61)
                                                    {
                                                        dialog.Text("You have learned the Dash Skill of this class.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                        if (!client.AddSpell(LearnableSpell(1051)))
                                                        {
                                                            dialog.Text("You already know this skill.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 61 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the warrior secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 7:
                                            {
                                                if (client.Entity.Class >= 20 && client.Entity.Class <= 25)
                                                {
                                                    if (client.Entity.Level >= 70)
                                                    {
                                                        dialog.Text("You have learned the DefensiveStance Skill of this class.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                        if (!client.AddSpell(LearnableSpell(11160)))
                                                        {
                                                            dialog.Text("You already got DefensiveStance skill.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 70 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the warrior secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 8:
                                            {
                                                if (client.Entity.Class >= 20 && client.Entity.Class <= 25)
                                                {
                                                    if (client.Entity.Level >= 70)
                                                    {
                                                        dialog.Text("You have learned the MagicDefender Skill of this class.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                        if (!client.AddSpell(LearnableSpell(11200)))
                                                        {
                                                            dialog.Text("You already got MagicDefender skill.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 70 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the warrior secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                    }
                                    break;
                                }
                            #endregion

                            #region Archer Master
                            case 400:
                                {
                                    byte mClass = 40;
                                    byte MClass = 45;
                                    string Class = "archer";
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                if (client.Entity.Class >= mClass && client.Entity.Class <= MClass)
                                                {
                                                    dialog.Text("I am the bow master. As I see, you started your way on conquering this world. I will try to help you teaching you warrir skills and promoting you.");
                                                    dialog.Option("Promote me.", 1);
                                                    dialog.Option("Learn skills.", 2);
                                                    //dialog.Option("Claim bound items.", 49);
                                                    dialog.Option("Wait a minute.", 255);
                                                    dialog.Send();
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        #region BoundItems
                                        case 49:
                                            {
                                                dialog.Text("We just found some equipment, and I thought that we should give them to our pupils so they can be less defeatable.");
                                                if (!client.HeadgearClaim)
                                                    dialog.Option("Headgear (Lvl 15).", 50);
                                                if (!client.RingClaim)
                                                    dialog.Option("Ring (Lvl 40).", 51);
                                                if (!client.NecklaceClaim)
                                                    dialog.Option("Necklace (Lvl 50).", 52);
                                                if (!client.ArmorClaim)
                                                    dialog.Option("Armor (Lvl 70).", 53);
                                                dialog.Option("Next.", 48);
                                                dialog.Option("Nothing.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 48:
                                            {
                                                dialog.Text("We just found some equipment, and I thought that we should give them to our pupils so they can be less defeatable.");
                                                if (!client.BootsClaim)
                                                    dialog.Option("Boots (Lvl 80).", 54);
                                                if (!client.TowerClaim)
                                                    dialog.Option("Tower (Lvl 100).", 55);
                                                if (!client.FanClaim)
                                                    dialog.Option("Fan (Lvl 100).", 56);
                                                if (!client.WeaponClaim)
                                                    dialog.Option("Weapon (Lvl 110).", 57);
                                                dialog.Option("Back.", 49);
                                                dialog.Option("Nothing.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 50:
                                            {
                                                uint itemid = 113009;
                                                byte level = 15;
                                                if (!client.HeadgearClaim)
                                                {
                                                    if (client.Entity.Level >= level)
                                                    {
                                                        ConquerItem item = new ConquerItem(true);

                                                        item.ID = itemid; item.Color = PhoenixProject.Game.Enums.Color.White;
                                                        item.Durability = item.MaximDurability = PhoenixProject.Database
                                                            .ConquerItemInformation.BaseInformations[itemid].Durability;
                                                        item.Bound = true;
                                                        item.Plus = 3;
                                                        if (client.Inventory.Add(item, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd))
                                                        {
                                                            client.HeadgearClaim = true;
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You need atleast one free slot in your inventory.");
                                                            dialog.Option("Alright.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You don't have atleast level " + level + ".");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You cannot claim it twice.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 51:
                                            {
                                                uint itemid = 150079;
                                                byte level = 40;
                                                if (!client.RingClaim)
                                                {
                                                    if (client.Entity.Level >= level)
                                                    {
                                                        ConquerItem item = new ConquerItem(true);

                                                        item.ID = itemid; item.Color = PhoenixProject.Game.Enums.Color.White;
                                                        item.Durability = item.MaximDurability = PhoenixProject.Database
                                                            .ConquerItemInformation.BaseInformations[itemid].Durability;
                                                        item.Bound = true;
                                                        item.Plus = 3;
                                                        if (client.Inventory.Add(item, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd))
                                                        {
                                                            client.RingClaim = true;
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You need atleast one free slot in your inventory.");
                                                            dialog.Option("Alright.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You don't have atleast level " + level + ".");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You cannot claim it twice.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 52:
                                            {
                                                uint itemid = 120099;
                                                byte level = 50;
                                                if (!client.NecklaceClaim)
                                                {
                                                    if (client.Entity.Level >= level)
                                                    {
                                                        ConquerItem item = new ConquerItem(true);

                                                        item.ID = itemid; item.Color = PhoenixProject.Game.Enums.Color.White;
                                                        item.Durability = item.MaximDurability = PhoenixProject.Database
                                                            .ConquerItemInformation.BaseInformations[itemid].Durability;
                                                        item.Bound = true;
                                                        item.Plus = 3;
                                                        if (client.Inventory.Add(item, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd))
                                                        {
                                                            client.NecklaceClaim = true;
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You need atleast one free slot in your inventory.");
                                                            dialog.Option("Alright.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You don't have atleast level " + level + ".");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You cannot claim it twice.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 53:
                                            {
                                                uint itemid = 133049;
                                                byte level = 70;
                                                if (!client.ArmorClaim)
                                                {
                                                    if (client.Entity.Level >= level)
                                                    {
                                                        ConquerItem item = new ConquerItem(true);

                                                        item.ID = itemid; item.Color = PhoenixProject.Game.Enums.Color.White;
                                                        item.Durability = item.MaximDurability = PhoenixProject.Database
                                                            .ConquerItemInformation.BaseInformations[itemid].Durability;
                                                        item.Bound = true;
                                                        item.Plus = 3;
                                                        if (client.Inventory.Add(item, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd))
                                                        {
                                                            client.ArmorClaim = true;
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You need atleast one free slot in your inventory.");
                                                            dialog.Option("Alright.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You don't have atleast level " + level + ".");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You cannot claim it twice.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 54:
                                            {
                                                uint itemid = 160159;
                                                byte level = 80;
                                                if (!client.BootsClaim)
                                                {
                                                    if (client.Entity.Level >= level)
                                                    {
                                                        ConquerItem item = new ConquerItem(true);

                                                        item.ID = itemid; item.Color = PhoenixProject.Game.Enums.Color.White;
                                                        item.Durability = item.MaximDurability = PhoenixProject.Database
                                                            .ConquerItemInformation.BaseInformations[itemid].Durability;
                                                        item.Bound = true;
                                                        item.Plus = 3;
                                                        if (client.Inventory.Add(item, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd))
                                                        {
                                                            client.BootsClaim = true;
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You need atleast one free slot in your inventory.");
                                                            dialog.Option("Alright.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You don't have atleast level " + level + ".");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You cannot claim it twice.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 55:
                                            {
                                                uint itemid = 202009;
                                                byte level = 100;
                                                if (!client.TowerClaim)
                                                {
                                                    if (client.Entity.Level >= level)
                                                    {
                                                        ConquerItem item = new ConquerItem(true);

                                                        item.ID = itemid; item.Color = PhoenixProject.Game.Enums.Color.White;
                                                        item.Durability = item.MaximDurability = PhoenixProject.Database
                                                            .ConquerItemInformation.BaseInformations[itemid].Durability;
                                                        item.Bound = true;
                                                        item.Plus = 3;
                                                        if (client.Inventory.Add(item, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd))
                                                        {
                                                            client.TowerClaim = true;
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You need atleast one free slot in your inventory.");
                                                            dialog.Option("Alright.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You don't have atleast level " + level + ".");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You cannot claim it twice.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 56:
                                            {
                                                uint itemid = 201009;
                                                byte level = 100;
                                                if (!client.FanClaim)
                                                {
                                                    if (client.Entity.Level >= level)
                                                    {
                                                        ConquerItem item = new ConquerItem(true);

                                                        item.ID = itemid; item.Color = PhoenixProject.Game.Enums.Color.White;
                                                        item.Durability = item.MaximDurability = PhoenixProject.Database
                                                            .ConquerItemInformation.BaseInformations[itemid].Durability;
                                                        item.Bound = true;
                                                        item.Plus = 3;
                                                        if (client.Inventory.Add(item, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd))
                                                        {
                                                            client.FanClaim = true;
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You need atleast one free slot in your inventory.");
                                                            dialog.Option("Alright.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You don't have atleast level " + level + ".");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You cannot claim it twice.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 57:
                                            {
                                                byte level = 100;
                                                if (!client.WeaponClaim)
                                                {
                                                    IProf proff = null;
                                                    ushort maxlevel = 0;
                                                    foreach (var prof in client.Proficiencies.Values)
                                                    {
                                                        if (maxlevel < prof.Level && prof.ID != 0)
                                                        {
                                                            maxlevel = prof.Level;
                                                            proff = prof;
                                                        }
                                                    }
                                                    if (proff == null)
                                                        return;
                                                    uint itemid = (uint)(proff.ID * 1000 + 219);
                                                    if (!PhoenixProject.Database.ConquerItemInformation.BaseInformations.ContainsKey(itemid))
                                                    {
                                                        Console.WriteLine("invalid claim weapon " + itemid);
                                                        return;
                                                    }
                                                    if (client.Entity.Level >= level)
                                                    {
                                                        ConquerItem item = new ConquerItem(true);

                                                        item.ID = itemid; item.Color = PhoenixProject.Game.Enums.Color.White;
                                                        item.Durability = item.MaximDurability = PhoenixProject.Database
                                                            .ConquerItemInformation.BaseInformations[itemid].Durability;
                                                        item.Bound = true;
                                                        item.Plus = 3;
                                                        item.SocketOne = PhoenixProject.Game.Enums.Gem.EmptySocket;
                                                        if (client.Inventory.Add(item, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd))
                                                        {
                                                            client.WeaponClaim = true;
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You need atleast one free slot in your inventory.");
                                                            dialog.Option("Alright.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You don't have atleast level " + level + ".");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You cannot claim it twice.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        #endregion
                                        case 1:
                                            {
                                                if (client.Entity.Class >= mClass && client.Entity.Class <= MClass)
                                                {
                                                    if (client.Entity.Class == MClass)
                                                    {
                                                        dialog.Text("You cannot be promoted anymore. You have mastered your class.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("To promote now you need" + client.PromoteItemNameNeed + " level " + client.PromoteLevelNeed + ".");
                                                        dialog.Option("Promote me sir.", 3);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 3:
                                            {
                                                if (client.Entity.Class >= mClass && client.Entity.Class <= MClass)
                                                {
                                                    if (client.Entity.Class == MClass)
                                                    {
                                                        dialog.Text("You cannot be promoted anymore. You have mastered your class.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                    }
                                                    else
                                                    {
                                                        if (client.PromoteItemNeed == 721020)
                                                        {
                                                            if (client.Inventory.Remove("moonbox"))
                                                            {
                                                                client.Inventory.Add(client.PromoteItemGain, 0, 1);
                                                                client.Entity.Class++;
                                                                dialog.Text("Congratulations! You have been promoted.");
                                                                dialog.Option("Thank you master.", 255);
                                                                dialog.Send();
                                                            }

                                                            else
                                                            {
                                                                dialog.Text("You don't meet the requierments.");
                                                                dialog.Option("Ahh.", 255);
                                                                dialog.Send();
                                                            }
                                                            return;
                                                        }
                                                        if (client.Inventory.Contains(client.PromoteItemNeed, client.PromoteItemCountNeed) && client.Entity.Level >= client.PromoteLevelNeed)
                                                        {
                                                            client.Inventory.Remove(client.PromoteItemNeed, client.PromoteItemCountNeed);
                                                            client.Inventory.Add(client.PromoteItemGain, 0, 1);
                                                            client.Entity.Class++;
                                                            dialog.Text("Congratulations! You have been promoted.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You don't meet the requierments.");
                                                            dialog.Option("Ahh.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 2:
                                            {
                                                if (client.Entity.Class >= mClass && client.Entity.Class <= MClass)
                                                {
                                                    dialog.Text("Let me know what you want to learn.");
                                                    dialog.Option("XPFly (Lvl 1).", 5);
                                                    dialog.Option("Scatter (Lvl 23).", 6);
                                                    dialog.Option("RapidFire (Lvl 40).", 7);
                                                    dialog.Option("Fly (Lvl 70).", 8);
                                                    dialog.Option("Intensify (Lvl 70).", 9);
                                                    dialog.Option("Arrow rain (Lvl 70).", 10);
                                                    dialog.Option("Advanced Fly (Lvl 100).", 11);
                                                    dialog.Option("Nothing.", 255);
                                                    dialog.Send();
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 5:
                                            {
                                                if (client.Entity.Class >= mClass && client.Entity.Class <= MClass)
                                                {
                                                    dialog.Text("You have learned the XP Skill of this class.");
                                                    dialog.Option("Thank you master.", 255);
                                                    dialog.Send();
                                                    if (!client.AddSpell(LearnableSpell(8002)))
                                                    {
                                                        dialog.Text("You already know this skill.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 6:
                                            {
                                                if (client.Entity.Class >= mClass && client.Entity.Class <= MClass)
                                                {
                                                    if (client.Entity.Level >= 23)
                                                    {
                                                        dialog.Text("You have learned the scatter.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                        if (!client.AddSpell(LearnableSpell(8001)))
                                                        {
                                                            dialog.Text("You already know this skill.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 23 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 7:
                                            {
                                                if (client.Entity.Class >= mClass && client.Entity.Class <= MClass)
                                                {
                                                    if (client.Entity.Level >= 40)
                                                    {
                                                        if (!client.AddSpell(LearnableSpell(8000)))
                                                        {
                                                            dialog.Text("You already know this skill.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                            break;
                                                        }
                                                        dialog.Text("You have learned the rapid fire.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 40 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 8:
                                            {
                                                if (client.Entity.Class >= mClass && client.Entity.Class <= MClass)
                                                {
                                                    if (client.Entity.Level >= 70)
                                                    {

                                                        if (!client.AddSpell(LearnableSpell(8003)))
                                                        {
                                                            dialog.Text("You already know this skill.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                            break;
                                                        }
                                                        dialog.Text("You have learned the fly.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 70 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 9:
                                            {
                                                if (client.Entity.Class >= mClass && client.Entity.Class <= MClass)
                                                {
                                                    if (client.Entity.Level >= 70)
                                                    {
                                                        if (!client.AddSpell(LearnableSpell(9000)))
                                                        {
                                                            dialog.Text("You already know this skill.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                            break;
                                                        }
                                                        dialog.Text("You have learned the intensify.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 70 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 10:
                                            {
                                                if (client.Entity.Class >= mClass && client.Entity.Class <= MClass)
                                                {
                                                    if (client.Entity.Level >= 70)
                                                    {
                                                        if (!client.AddSpell(LearnableSpell(8030)))
                                                        {
                                                            dialog.Text("You already know this skill.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                            break;
                                                        }
                                                        dialog.Text("You have learned the arrow rain.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 70 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 11:
                                            {
                                                if (client.Entity.Class >= mClass && client.Entity.Class <= MClass)
                                                {
                                                    if (client.Entity.Level >= 100)
                                                    {
                                                        if (!client.AddSpell(LearnableSpell(8003, 1)))
                                                        {
                                                            dialog.Text("You already know this skill.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                            break;
                                                        }
                                                        dialog.Text("You have learned the advanced fly.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 100 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                    }
                                    break;
                                }
                            #endregion

                            #region WindSage
                            case 4720:
                                {
                                    byte mClass = 50;
                                    byte MClass = 55;
                                    string Class = "ninja";
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                if (client.Entity.Class >= mClass && client.Entity.Class <= MClass)
                                                {
                                                    dialog.Text("I am the master of the no sound attack and the master of the katanas. As I see, you started your way on conquering this world. I will try to help you teaching you warrir skills and promoting you.");
                                                    dialog.Option("Promote me.", 1);
                                                    dialog.Option("Learn skills.", 2);
                                                    //dialog.Option("Claim bound items.", 49);
                                                    dialog.Option("Wait a minute.", 255);
                                                    dialog.Send();
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        #region BoundItems
                                        case 49:
                                            {
                                                dialog.Text("We just found some equipment, and I thought that we should give them to our pupils so they can be less defeatable.");
                                                if (!client.HeadgearClaim)
                                                    dialog.Option("Headgear (Lvl 15).", 50);
                                                if (!client.RingClaim)
                                                    dialog.Option("Ring (Lvl 40).", 51);
                                                if (!client.NecklaceClaim)
                                                    dialog.Option("Necklace (Lvl 50).", 52);
                                                if (!client.ArmorClaim)
                                                    dialog.Option("Armor (Lvl 70).", 53);
                                                dialog.Option("Next.", 48);
                                                dialog.Option("Nothing.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 48:
                                            {
                                                dialog.Text("We just found some equipment, and I thought that we should give them to our pupils so they can be less defeatable.");
                                                if (!client.BootsClaim)
                                                    dialog.Option("Boots (Lvl 80).", 54);
                                                if (!client.TowerClaim)
                                                    dialog.Option("Tower (Lvl 100).", 55);
                                                if (!client.FanClaim)
                                                    dialog.Option("Fan (Lvl 100).", 56);
                                                if (!client.WeaponClaim)
                                                    dialog.Option("Weapon (Lvl 110).", 57);
                                                dialog.Option("Back.", 49);
                                                dialog.Option("Nothing.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 50:
                                            {
                                                uint itemid = 123009;
                                                byte level = 15;
                                                if (!client.HeadgearClaim)
                                                {
                                                    if (client.Entity.Level >= level)
                                                    {
                                                        ConquerItem item = new ConquerItem(true);

                                                        item.ID = itemid; item.Color = PhoenixProject.Game.Enums.Color.White;
                                                        item.Durability = item.MaximDurability = PhoenixProject.Database
                                                            .ConquerItemInformation.BaseInformations[itemid].Durability;
                                                        item.Bound = true;
                                                        item.Plus = 3;
                                                        if (client.Inventory.Add(item, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd))
                                                        {
                                                            client.HeadgearClaim = true;
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You need atleast one free slot in your inventory.");
                                                            dialog.Option("Alright.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You don't have atleast level " + level + ".");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You cannot claim it twice.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 51:
                                            {
                                                uint itemid = 150079;
                                                byte level = 40;
                                                if (!client.RingClaim)
                                                {
                                                    if (client.Entity.Level >= level)
                                                    {
                                                        ConquerItem item = new ConquerItem(true);

                                                        item.ID = itemid; item.Color = PhoenixProject.Game.Enums.Color.White;
                                                        item.Durability = item.MaximDurability = PhoenixProject.Database
                                                            .ConquerItemInformation.BaseInformations[itemid].Durability;
                                                        item.Bound = true;
                                                        item.Plus = 3;
                                                        if (client.Inventory.Add(item, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd))
                                                        {
                                                            client.RingClaim = true;
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You need atleast one free slot in your inventory.");
                                                            dialog.Option("Alright.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You don't have atleast level " + level + ".");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You cannot claim it twice.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 52:
                                            {
                                                uint itemid = 120099;
                                                byte level = 50;
                                                if (!client.NecklaceClaim)
                                                {
                                                    if (client.Entity.Level >= level)
                                                    {
                                                        ConquerItem item = new ConquerItem(true);

                                                        item.ID = itemid; item.Color = PhoenixProject.Game.Enums.Color.White;
                                                        item.Durability = item.MaximDurability = PhoenixProject.Database
                                                            .ConquerItemInformation.BaseInformations[itemid].Durability;
                                                        item.Bound = true;
                                                        item.Plus = 3;
                                                        if (client.Inventory.Add(item, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd))
                                                        {
                                                            client.NecklaceClaim = true;
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You need atleast one free slot in your inventory.");
                                                            dialog.Option("Alright.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You don't have atleast level " + level + ".");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You cannot claim it twice.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 53:
                                            {
                                                uint itemid = 135069;
                                                byte level = 70;
                                                if (!client.ArmorClaim)
                                                {
                                                    if (client.Entity.Level >= level)
                                                    {
                                                        ConquerItem item = new ConquerItem(true);

                                                        item.ID = itemid; item.Color = PhoenixProject.Game.Enums.Color.White;
                                                        item.Durability = item.MaximDurability = PhoenixProject.Database
                                                            .ConquerItemInformation.BaseInformations[itemid].Durability;
                                                        item.Bound = true;
                                                        item.Plus = 3;
                                                        if (client.Inventory.Add(item, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd))
                                                        {
                                                            client.ArmorClaim = true;
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You need atleast one free slot in your inventory.");
                                                            dialog.Option("Alright.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You don't have atleast level " + level + ".");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You cannot claim it twice.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 54:
                                            {
                                                uint itemid = 160159;
                                                byte level = 80;
                                                if (!client.BootsClaim)
                                                {
                                                    if (client.Entity.Level >= level)
                                                    {
                                                        ConquerItem item = new ConquerItem(true);

                                                        item.ID = itemid; item.Color = PhoenixProject.Game.Enums.Color.White;
                                                        item.Durability = item.MaximDurability = PhoenixProject.Database
                                                            .ConquerItemInformation.BaseInformations[itemid].Durability;
                                                        item.Bound = true;
                                                        item.Plus = 3;
                                                        if (client.Inventory.Add(item, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd))
                                                        {
                                                            client.BootsClaim = true;
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You need atleast one free slot in your inventory.");
                                                            dialog.Option("Alright.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You don't have atleast level " + level + ".");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You cannot claim it twice.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 55:
                                            {
                                                uint itemid = 202009;
                                                byte level = 100;
                                                if (!client.TowerClaim)
                                                {
                                                    if (client.Entity.Level >= level)
                                                    {
                                                        ConquerItem item = new ConquerItem(true);

                                                        item.ID = itemid; item.Color = PhoenixProject.Game.Enums.Color.White;
                                                        item.Durability = item.MaximDurability = PhoenixProject.Database
                                                            .ConquerItemInformation.BaseInformations[itemid].Durability;
                                                        item.Bound = true;
                                                        item.Plus = 3;
                                                        if (client.Inventory.Add(item, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd))
                                                        {
                                                            client.TowerClaim = true;
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You need atleast one free slot in your inventory.");
                                                            dialog.Option("Alright.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You don't have atleast level " + level + ".");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You cannot claim it twice.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 56:
                                            {
                                                uint itemid = 201009;
                                                byte level = 100;
                                                if (!client.FanClaim)
                                                {
                                                    if (client.Entity.Level >= level)
                                                    {
                                                        ConquerItem item = new ConquerItem(true);

                                                        item.ID = itemid; item.Color = PhoenixProject.Game.Enums.Color.White;
                                                        item.Durability = item.MaximDurability = PhoenixProject.Database
                                                            .ConquerItemInformation.BaseInformations[itemid].Durability;
                                                        item.Bound = true;
                                                        item.Plus = 3;
                                                        if (client.Inventory.Add(item, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd))
                                                        {
                                                            client.FanClaim = true;
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You need atleast one free slot in your inventory.");
                                                            dialog.Option("Alright.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You don't have atleast level " + level + ".");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You cannot claim it twice.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 57:
                                            {
                                                byte level = 100;
                                                if (!client.WeaponClaim)
                                                {
                                                    IProf proff = null;
                                                    ushort maxlevel = 0;
                                                    foreach (var prof in client.Proficiencies.Values)
                                                    {
                                                        if (maxlevel < prof.Level && prof.ID != 0)
                                                        {
                                                            maxlevel = prof.Level;
                                                            proff = prof;
                                                        }
                                                    }
                                                    if (proff == null)
                                                        return;
                                                    uint itemid = (uint)(proff.ID * 1000 + 219);
                                                    if (!PhoenixProject.Database.ConquerItemInformation.BaseInformations.ContainsKey(itemid))
                                                    {
                                                        Console.WriteLine("invalid claim weapon " + itemid);
                                                        return;
                                                    }
                                                    if (client.Entity.Level >= level)
                                                    {
                                                        ConquerItem item = new ConquerItem(true);

                                                        item.ID = itemid; item.Color = PhoenixProject.Game.Enums.Color.White;
                                                        item.Durability = item.MaximDurability = PhoenixProject.Database
                                                            .ConquerItemInformation.BaseInformations[itemid].Durability;
                                                        item.Bound = true;
                                                        item.Plus = 3;
                                                        item.SocketOne = PhoenixProject.Game.Enums.Gem.EmptySocket;
                                                        if (client.Inventory.Add(item, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd))
                                                        {
                                                            client.WeaponClaim = true;
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You need atleast one free slot in your inventory.");
                                                            dialog.Option("Alright.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You don't have atleast level " + level + ".");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You cannot claim it twice.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        #endregion
                                        case 1:
                                            {
                                                if (client.Entity.Class >= mClass && client.Entity.Class <= MClass)
                                                {
                                                    if (client.Entity.Class == MClass)
                                                    {
                                                        dialog.Text("You cannot be promoted anymore. You have mastered your class.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("To promote now you need" + client.PromoteItemNameNeed + " level " + client.PromoteLevelNeed + ".");
                                                        dialog.Option("Promote me sir.", 3);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 3:
                                            {
                                                if (client.Entity.Class >= mClass && client.Entity.Class <= MClass)
                                                {
                                                    if (client.Entity.Class == MClass)
                                                    {
                                                        dialog.Text("You cannot be promoted anymore. You have mastered your class.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                    }
                                                    else
                                                    {
                                                        if (client.PromoteItemNeed == 721020)
                                                        {
                                                            if (client.Inventory.Remove("moonbox"))
                                                            {
                                                                client.Inventory.Add(client.PromoteItemGain, 0, 1);
                                                                client.Entity.Class++;
                                                                dialog.Text("Congratulations! You have been promoted.");
                                                                dialog.Option("Thank you master.", 255);
                                                                dialog.Send();
                                                            }
                                                            else
                                                            {
                                                                dialog.Text("You don't meet the requierments.");
                                                                dialog.Option("Ahh.", 255);
                                                                dialog.Send();
                                                            }
                                                            return;
                                                        }
                                                        if (client.Inventory.Contains(client.PromoteItemNeed, client.PromoteItemCountNeed) && client.Entity.Level >= client.PromoteLevelNeed)
                                                        {
                                                            client.Inventory.Remove(client.PromoteItemNeed, client.PromoteItemCountNeed);
                                                            client.Inventory.Add(client.PromoteItemGain, 0, 1);
                                                            client.Entity.Class++;
                                                            dialog.Text("Congratulations! You have been promoted.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You don't meet the requierments.");
                                                            dialog.Option("Ahh.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 2:
                                            {
                                                if (client.Entity.Class >= mClass && client.Entity.Class <= MClass)
                                                {
                                                    dialog.Text("Let me know what you want to learn. '[...]' and '{...}' means ninja as second life and ninja as third life.");
                                                    dialog.Option("TwofoldBlades (Lvl 40).", 5);
                                                    dialog.Option("ToxicFog (Lvl 70).", 6);
                                                    dialog.Option("PoisonStar [Lvl 70].", 7);
                                                    dialog.Option("BloodyScythe (Lvl 15)).", 8);

                                                    dialog.Option("MortalDrag.(Lvl 15)", 12);
                                                    dialog.Option("ArcherBane (Lvl 110).", 9);
                                                    dialog.Option("ShurikenVortex (Lvl 70).", 10);
                                                    dialog.Option("FatalStrike (Lvl 15).", 11);
                                                    dialog.Send();
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 5:
                                            {
                                                if (client.Entity.Class >= mClass && client.Entity.Class <= MClass)
                                                {
                                                    if (client.Entity.Level >= 40)
                                                    {
                                                        if (!client.AddSpell(LearnableSpell(6000)))
                                                        {
                                                            dialog.Text("You already know this skill.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                            break;
                                                        }
                                                        dialog.Text("You have learned the TwofoldBlades.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 23 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 6:
                                            {
                                                if (client.Entity.Class >= mClass && client.Entity.Class <= MClass)
                                                {
                                                    if (client.Entity.Level >= 70)
                                                    {
                                                        if (!client.AddSpell(LearnableSpell(6001)))
                                                        {
                                                            dialog.Text("You already know this skill.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                            break;
                                                        }
                                                        dialog.Text("You have learned the ToxicFog.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 70 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 7:
                                            {
                                                if (client.Entity.Class >= mClass && client.Entity.Class <= MClass)
                                                {
                                                    if (client.Entity.Level >= 70)
                                                    {
                                                        if ((client.Entity.Reborn == 1 && client.Entity.Class == 55) || (client.Entity.Reborn == 2 && client.Entity.SecondRebornClass == 55))
                                                        {
                                                            if (!client.AddSpell(LearnableSpell(6002)))
                                                            {
                                                                dialog.Text("You already know this skill.");
                                                                dialog.Option("Thank you master.", 255);
                                                                dialog.Send();
                                                                break;
                                                            }
                                                            dialog.Text("You have learned the PoisonStar.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You need to be ninja in the second life.");
                                                            dialog.Option("Alright.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 70 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 8:
                                            {
                                                if (client.Entity.Class >= mClass && client.Entity.Class <= MClass)
                                                {
                                                    if (client.Entity.Level >= 15)
                                                    {
                                                        if (client.Entity.Class >= 50 && client.Entity.Class <= 55)
                                                        {
                                                            if (!client.AddSpell(LearnableSpell(11170)))
                                                            {
                                                                dialog.Text("You already know this BloodyScythe skill.");
                                                                dialog.Option("Thank you master.", 255);
                                                                dialog.Send();
                                                                break;
                                                            }
                                                            dialog.Text("You have learned the BloodyScythe.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You need to be ninja .");
                                                            dialog.Option("Alright.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 15 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 12:
                                            {
                                                if (client.Entity.Class >= mClass && client.Entity.Class <= MClass)
                                                {
                                                    if (client.Entity.Level >= 15)
                                                    {
                                                        if (client.Entity.Class >= 50 && client.Entity.Class <= 55)
                                                        {
                                                            if (!client.AddSpell(LearnableSpell(11180)))
                                                            {
                                                                dialog.Text("You already know this MortalDrag skill.");
                                                                dialog.Option("Thank you master.", 255);
                                                                dialog.Send();
                                                                break;
                                                            }
                                                            dialog.Text("You have learned the MortalDrag.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You need to be ninja .");
                                                            dialog.Option("Alright.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 15 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 9:
                                            {
                                                if (client.Entity.Class >= mClass && client.Entity.Class <= MClass)
                                                {
                                                    if (client.Entity.Level >= 110)
                                                    {
                                                        if (!client.AddSpell(LearnableSpell(6004)))
                                                        {
                                                            dialog.Text("You already know this skill.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                            break;
                                                        }
                                                        dialog.Text("You have learned the ArcherBane.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 70 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 10:
                                            {
                                                if (client.Entity.Class >= mClass && client.Entity.Class <= MClass)
                                                {
                                                    if (client.Entity.Level >= 70)
                                                    {
                                                        if (!client.AddSpell(LearnableSpell(6010)))
                                                        {
                                                            dialog.Text("You already know this skill.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                            break;
                                                        }
                                                        dialog.Text("You have learned the ShurikenVortex.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 70 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 11:
                                            {
                                                if (client.Entity.Class >= mClass && client.Entity.Class <= MClass)
                                                {
                                                    if (client.Entity.Level >= 15)
                                                    {
                                                        if (!client.AddSpell(LearnableSpell(6011)))
                                                        {
                                                            dialog.Text("You already know this skill.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                            break;
                                                        }
                                                        dialog.Text("You have learned the FatalStrike.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 15 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                    }
                                    break;
                                }
                            #endregion

                            #region TrojanMaster
                            case 10022:
                                {
                                    byte mClass = 10;
                                    byte MClass = 15;
                                    string Class = "trojan";
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                if (client.Entity.Class >= mClass && client.Entity.Class <= MClass)
                                                {
                                                    dialog.Text("I am the master of the one hand weapons. As I see, you started your way on conquering this world. I will try to help you teaching you warrir skills and promoting you.");
                                                    dialog.Option("Promote me.", 1);
                                                    dialog.Option("Learn skills.", 2);
                                                    //dialog.Option("Claim bound items.", 49);
                                                    dialog.Option("Wait a minute.", 255);
                                                    dialog.Send();
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        #region BoundItems
                                        case 49:
                                            {
                                                dialog.Text("We just found some equipment, and I thought that we should give them to our pupils so they can be less defeatable.");
                                                if (!client.HeadgearClaim)
                                                    dialog.Option("Headgear (Lvl 15).", 50);
                                                if (!client.RingClaim)
                                                    dialog.Option("Ring (Lvl 40).", 51);
                                                if (!client.NecklaceClaim)
                                                    dialog.Option("Necklace (Lvl 50).", 52);
                                                if (!client.ArmorClaim)
                                                    dialog.Option("Armor (Lvl 70).", 53);
                                                dialog.Option("Next.", 48);
                                                dialog.Option("Nothing.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 48:
                                            {
                                                dialog.Text("We just found some equipment, and I thought that we should give them to our pupils so they can be less defeatable.");
                                                if (!client.BootsClaim)
                                                    dialog.Option("Boots (Lvl 80).", 54);
                                                if (!client.TowerClaim)
                                                    dialog.Option("Tower (Lvl 100).", 55);
                                                if (!client.FanClaim)
                                                    dialog.Option("Fan (Lvl 100).", 56);
                                                if (!client.WeaponClaim)
                                                    dialog.Option("Weapon (Lvl 110).", 57);
                                                dialog.Option("Back.", 49);
                                                dialog.Option("Nothing.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 50:
                                            {
                                                uint itemid = 118009;
                                                byte level = 15;
                                                if (!client.HeadgearClaim)
                                                {
                                                    if (client.Entity.Level >= level)
                                                    {
                                                        ConquerItem item = new ConquerItem(true);

                                                        item.ID = itemid; item.Color = PhoenixProject.Game.Enums.Color.White;
                                                        item.Durability = item.MaximDurability = PhoenixProject.Database
                                                            .ConquerItemInformation.BaseInformations[itemid].Durability;
                                                        item.Bound = true;
                                                        item.Plus = 3;
                                                        if (client.Inventory.Add(item, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd))
                                                        {
                                                            client.HeadgearClaim = true;
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You need atleast one free slot in your inventory.");
                                                            dialog.Option("Alright.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You don't have atleast level " + level + ".");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You cannot claim it twice.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 51:
                                            {
                                                uint itemid = 150079;
                                                byte level = 40;
                                                if (!client.RingClaim)
                                                {
                                                    if (client.Entity.Level >= level)
                                                    {
                                                        ConquerItem item = new ConquerItem(true);

                                                        item.ID = itemid; item.Color = PhoenixProject.Game.Enums.Color.White;
                                                        item.Durability = item.MaximDurability = PhoenixProject.Database
                                                            .ConquerItemInformation.BaseInformations[itemid].Durability;
                                                        item.Bound = true;
                                                        item.Plus = 3;
                                                        if (client.Inventory.Add(item, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd))
                                                        {
                                                            client.RingClaim = true;
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You need atleast one free slot in your inventory.");
                                                            dialog.Option("Alright.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You don't have atleast level " + level + ".");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You cannot claim it twice.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 52:
                                            {
                                                uint itemid = 120099;
                                                byte level = 50;
                                                if (!client.NecklaceClaim)
                                                {
                                                    if (client.Entity.Level >= level)
                                                    {
                                                        ConquerItem item = new ConquerItem(true);

                                                        item.ID = itemid; item.Color = PhoenixProject.Game.Enums.Color.White;
                                                        item.Durability = item.MaximDurability = PhoenixProject.Database
                                                            .ConquerItemInformation.BaseInformations[itemid].Durability;
                                                        item.Bound = true;
                                                        item.Plus = 3;
                                                        if (client.Inventory.Add(item, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd))
                                                        {
                                                            client.NecklaceClaim = true;
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You need atleast one free slot in your inventory.");
                                                            dialog.Option("Alright.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You don't have atleast level " + level + ".");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You cannot claim it twice.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 53:
                                            {
                                                uint itemid = 130069;
                                                byte level = 70;
                                                if (!client.ArmorClaim)
                                                {
                                                    if (client.Entity.Level >= level)
                                                    {
                                                        ConquerItem item = new ConquerItem(true);

                                                        item.ID = itemid; item.Color = PhoenixProject.Game.Enums.Color.White;
                                                        item.Durability = item.MaximDurability = PhoenixProject.Database
                                                            .ConquerItemInformation.BaseInformations[itemid].Durability;
                                                        item.Bound = true;
                                                        item.Plus = 3;
                                                        if (client.Inventory.Add(item, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd))
                                                        {
                                                            client.ArmorClaim = true;
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You need atleast one free slot in your inventory.");
                                                            dialog.Option("Alright.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You don't have atleast level " + level + ".");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You cannot claim it twice.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 54:
                                            {
                                                uint itemid = 160159;
                                                byte level = 80;
                                                if (!client.BootsClaim)
                                                {
                                                    if (client.Entity.Level >= level)
                                                    {
                                                        ConquerItem item = new ConquerItem(true);

                                                        item.ID = itemid; item.Color = PhoenixProject.Game.Enums.Color.White;
                                                        item.Durability = item.MaximDurability = PhoenixProject.Database
                                                            .ConquerItemInformation.BaseInformations[itemid].Durability;
                                                        item.Bound = true;
                                                        item.Plus = 3;
                                                        if (client.Inventory.Add(item, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd))
                                                        {
                                                            client.BootsClaim = true;
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You need atleast one free slot in your inventory.");
                                                            dialog.Option("Alright.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You don't have atleast level " + level + ".");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You cannot claim it twice.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 55:
                                            {
                                                uint itemid = 202009;
                                                byte level = 100;
                                                if (!client.TowerClaim)
                                                {
                                                    if (client.Entity.Level >= level)
                                                    {
                                                        ConquerItem item = new ConquerItem(true);

                                                        item.ID = itemid; item.Color = PhoenixProject.Game.Enums.Color.White;
                                                        item.Durability = item.MaximDurability = PhoenixProject.Database
                                                            .ConquerItemInformation.BaseInformations[itemid].Durability;
                                                        item.Bound = true;
                                                        item.Plus = 3;
                                                        if (client.Inventory.Add(item, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd))
                                                        {
                                                            client.TowerClaim = true;
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You need atleast one free slot in your inventory.");
                                                            dialog.Option("Alright.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You don't have atleast level " + level + ".");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You cannot claim it twice.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 56:
                                            {
                                                uint itemid = 201009;
                                                byte level = 100;
                                                if (!client.FanClaim)
                                                {
                                                    if (client.Entity.Level >= level)
                                                    {
                                                        ConquerItem item = new ConquerItem(true);

                                                        item.ID = itemid; item.Color = PhoenixProject.Game.Enums.Color.White;
                                                        item.Durability = item.MaximDurability = PhoenixProject.Database
                                                            .ConquerItemInformation.BaseInformations[itemid].Durability;
                                                        item.Bound = true;
                                                        item.Plus = 3;
                                                        if (client.Inventory.Add(item, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd))
                                                        {
                                                            client.FanClaim = true;
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You need atleast one free slot in your inventory.");
                                                            dialog.Option("Alright.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You don't have atleast level " + level + ".");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You cannot claim it twice.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 57:
                                            {
                                                byte level = 100;
                                                if (!client.WeaponClaim)
                                                {
                                                    IProf proff = null;
                                                    ushort maxlevel = 0;
                                                    foreach (var prof in client.Proficiencies.Values)
                                                    {
                                                        if (maxlevel < prof.Level && prof.ID != 0)
                                                        {
                                                            maxlevel = prof.Level;
                                                            proff = prof;
                                                        }
                                                    }
                                                    if (proff == null)
                                                        return;
                                                    uint itemid = (uint)(proff.ID * 1000 + 219);
                                                    if (!PhoenixProject.Database.ConquerItemInformation.BaseInformations.ContainsKey(itemid))
                                                    {
                                                        Console.WriteLine("invalid claim weapon " + itemid);
                                                        return;
                                                    }
                                                    if (client.Entity.Level >= level)
                                                    {
                                                        ConquerItem item = new ConquerItem(true);

                                                        item.ID = itemid; item.Color = PhoenixProject.Game.Enums.Color.White;
                                                        item.Durability = item.MaximDurability = PhoenixProject.Database
                                                            .ConquerItemInformation.BaseInformations[itemid].Durability;
                                                        item.Bound = true;
                                                        item.Plus = 3;
                                                        item.SocketOne = PhoenixProject.Game.Enums.Gem.EmptySocket;
                                                        if (client.Inventory.Add(item, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd))
                                                        {
                                                            client.WeaponClaim = true;
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You need atleast one free slot in your inventory.");
                                                            dialog.Option("Alright.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You don't have atleast level " + level + ".");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You cannot claim it twice.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        #endregion
                                        case 1:
                                            {
                                                if (client.Entity.Class >= mClass && client.Entity.Class <= MClass)
                                                {
                                                    if (client.Entity.Class == MClass)
                                                    {
                                                        dialog.Text("You cannot be promoted anymore. You have mastered your class.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("To promote now you need" + client.PromoteItemNameNeed + " level " + client.PromoteLevelNeed + ".");
                                                        dialog.Option("Promote me sir.", 3);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 3:
                                            {
                                                if (client.Entity.Class >= mClass && client.Entity.Class <= MClass)
                                                {
                                                    if (client.Entity.Class == MClass)
                                                    {
                                                        dialog.Text("You cannot be promoted anymore. You have mastered your class.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                    }
                                                    else
                                                    {
                                                        if (client.PromoteItemNeed == 721020)
                                                        {
                                                            if (client.Inventory.Remove("moonbox"))
                                                            {
                                                                client.Inventory.Add(client.PromoteItemGain, 0, 1);
                                                                client.Entity.Class++;
                                                                dialog.Text("Congratulations! You have been promoted.");
                                                                dialog.Option("Thank you master.", 255);
                                                                dialog.Send();
                                                            }

                                                            else
                                                            {
                                                                dialog.Text("You don't meet the requierments.");
                                                                dialog.Option("Ahh.", 255);
                                                                dialog.Send();
                                                            }
                                                            return;
                                                        }
                                                        if (client.Inventory.Contains(client.PromoteItemNeed, client.PromoteItemCountNeed) && client.Entity.Level >= client.PromoteLevelNeed)
                                                        {
                                                            client.Inventory.Remove(client.PromoteItemNeed, client.PromoteItemCountNeed);
                                                            client.Inventory.Add(client.PromoteItemGain, 0, 1);
                                                            client.Entity.Class++;
                                                            dialog.Text("Congratulations! You have been promoted.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You don't meet the requierments.");
                                                            dialog.Option("Ahh.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 2:
                                            {
                                                if (client.Entity.Class >= mClass && client.Entity.Class <= MClass)
                                                {
                                                    dialog.Text("Let me know what you want to learn.");
                                                    dialog.Option("XPSkills (Lvl 40).", 5);
                                                    dialog.Option("Hercules (Lvl 40).", 6);
                                                    dialog.Option("Golem. (Lvl 40).", 7);
                                                    dialog.Option("Spritual Healing. (Lvl 40).", 8);
                                                    dialog.Option("Nothing.", 255);
                                                    dialog.Send();
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 5:
                                            {
                                                if (client.Entity.Class >= mClass && client.Entity.Class <= MClass)
                                                {
                                                    if (client.Entity.Level >= 40)
                                                    {
                                                        dialog.Text("You have learned the XP Skills.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                        client.AddSpell(LearnableSpell(1110));
                                                        client.AddSpell(LearnableSpell(1015));
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 40 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 6:
                                            {
                                                if (client.Entity.Class >= mClass && client.Entity.Class <= MClass)
                                                {
                                                    if (client.Entity.Level >= 40)
                                                    {
                                                        if (!client.AddSpell(LearnableSpell(1115)))
                                                        {
                                                            dialog.Text("You already know this skill.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                            break;
                                                        }
                                                        dialog.Text("You have learned the Hercules.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 40 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 7:
                                            {
                                                if (client.Entity.Class >= mClass && client.Entity.Class <= MClass)
                                                {
                                                    if (client.Entity.Level >= 40)
                                                    {
                                                        if (!client.AddSpell(LearnableSpell(1270)))
                                                        {
                                                            dialog.Text("You already know this skill.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                            break;
                                                        }
                                                        dialog.Text("You have learned the Golem.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 40 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 8:
                                            {
                                                if (client.Entity.Class >= mClass && client.Entity.Class <= MClass)
                                                {
                                                    if (client.Entity.Level >= 40)
                                                    {
                                                        if (!client.AddSpell(LearnableSpell(1190)))
                                                        {
                                                            dialog.Text("You already know this skill.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                            break;
                                                        }
                                                        dialog.Text("You have learned the Spritual Healing.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 40 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                    }
                                    break;
                                }
                            #endregion

                            #region Taoist Moon
                            case 10000:
                                {
                                    byte mClass = 142;
                                    byte MClass = 145;
                                    string Class = "fire taoist";
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                if (client.Entity.Class >= 100 && client.Entity.Class <= 101)
                                                {
                                                    dialog.Text("I am the master of the fire skills. As I see, you started your way on conquering this world. I will try to help you teaching you warrir skills and promoting you.");
                                                    dialog.Option("Promote me.", 100);
                                                    dialog.Option("Learn basic skills.", 200);
                                                    //dialog.Option("Claim bound items.", 49);
                                                    dialog.Option("Wait a minute.", 255);
                                                    dialog.Send();
                                                }
                                                else
                                                {
                                                    if (client.Entity.Class >= mClass && client.Entity.Class <= MClass)
                                                    {
                                                        dialog.Text("I am the master of the fire skills. As I see, you started your way on conquering this world. I will try to help you teaching you warrir skills and promoting you.");
                                                        dialog.Option("Promote me.", 1);
                                                        dialog.Option("Learn skills.", 2);
                                                        dialog.Option("Learn basic skills.", 200);
                                                        //dialog.Option("Claim bound items.", 49);
                                                        dialog.Option("Wait a minute.", 255);
                                                        dialog.Send();
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                break;
                                            }
                                        #region BoundItems
                                        case 49:
                                            {
                                                dialog.Text("We just found some equipment, and I thought that we should give them to our pupils so they can be less defeatable.");
                                                if (!client.HeadgearClaim)
                                                    dialog.Option("Headgear (Lvl 15).", 50);
                                                if (!client.RingClaim)
                                                    dialog.Option("Ring (Lvl 40).", 51);
                                                if (!client.NecklaceClaim)
                                                    dialog.Option("Necklace (Lvl 50).", 52);
                                                if (!client.ArmorClaim)
                                                    dialog.Option("Armor (Lvl 70).", 53);
                                                dialog.Option("Next.", 48);
                                                dialog.Option("Nothing.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 48:
                                            {
                                                dialog.Text("We just found some equipment, and I thought that we should give them to our pupils so they can be less defeatable.");
                                                if (!client.BootsClaim)
                                                    dialog.Option("Boots (Lvl 80).", 54);
                                                if (!client.TowerClaim)
                                                    dialog.Option("Tower (Lvl 100).", 55);
                                                if (!client.FanClaim)
                                                    dialog.Option("Fan (Lvl 100).", 56);
                                                if (!client.WeaponClaim)
                                                    dialog.Option("Weapon (Lvl 110).", 57);
                                                dialog.Option("Back.", 49);
                                                dialog.Option("Nothing.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 50:
                                            {
                                                uint itemid = 117009;
                                                byte level = 15;
                                                if (!client.HeadgearClaim)
                                                {
                                                    if (client.Entity.Level >= level)
                                                    {
                                                        ConquerItem item = new ConquerItem(true);

                                                        item.ID = itemid; item.Color = PhoenixProject.Game.Enums.Color.White;
                                                        item.Durability = item.MaximDurability = PhoenixProject.Database
                                                            .ConquerItemInformation.BaseInformations[itemid].Durability;
                                                        item.Bound = true;
                                                        item.Plus = 3;
                                                        if (client.Inventory.Add(item, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd))
                                                        {
                                                            client.HeadgearClaim = true;
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You need atleast one free slot in your inventory.");
                                                            dialog.Option("Alright.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You don't have atleast level " + level + ".");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You cannot claim it twice.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 51:
                                            {
                                                uint itemid = 152089;
                                                byte level = 40;
                                                if (!client.RingClaim)
                                                {
                                                    if (client.Entity.Level >= level)
                                                    {
                                                        ConquerItem item = new ConquerItem(true);

                                                        item.ID = itemid; item.Color = PhoenixProject.Game.Enums.Color.White;
                                                        item.Durability = item.MaximDurability = PhoenixProject.Database
                                                            .ConquerItemInformation.BaseInformations[itemid].Durability;
                                                        item.Bound = true;
                                                        item.Plus = 3;
                                                        if (client.Inventory.Add(item, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd))
                                                        {
                                                            client.RingClaim = true;
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You need atleast one free slot in your inventory.");
                                                            dialog.Option("Alright.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You don't have atleast level " + level + ".");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You cannot claim it twice.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 52:
                                            {
                                                uint itemid = 121099;
                                                byte level = 50;
                                                if (!client.NecklaceClaim)
                                                {
                                                    if (client.Entity.Level >= level)
                                                    {
                                                        ConquerItem item = new ConquerItem(true);

                                                        item.ID = itemid; item.Color = PhoenixProject.Game.Enums.Color.White;
                                                        item.Durability = item.MaximDurability = PhoenixProject.Database
                                                            .ConquerItemInformation.BaseInformations[itemid].Durability;
                                                        item.Bound = true;
                                                        item.Plus = 3;
                                                        if (client.Inventory.Add(item, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd))
                                                        {
                                                            client.NecklaceClaim = true;
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You need atleast one free slot in your inventory.");
                                                            dialog.Option("Alright.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You don't have atleast level " + level + ".");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You cannot claim it twice.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 53:
                                            {
                                                uint itemid = 134069;
                                                byte level = 70;
                                                if (!client.ArmorClaim)
                                                {
                                                    if (client.Entity.Level >= level)
                                                    {
                                                        ConquerItem item = new ConquerItem(true);

                                                        item.ID = itemid; item.Color = PhoenixProject.Game.Enums.Color.White;
                                                        item.Durability = item.MaximDurability = PhoenixProject.Database
                                                            .ConquerItemInformation.BaseInformations[itemid].Durability;
                                                        item.Bound = true;
                                                        item.Plus = 3;
                                                        if (client.Inventory.Add(item, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd))
                                                        {
                                                            client.ArmorClaim = true;
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You need atleast one free slot in your inventory.");
                                                            dialog.Option("Alright.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You don't have atleast level " + level + ".");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You cannot claim it twice.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 54:
                                            {
                                                uint itemid = 160159;
                                                byte level = 80;
                                                if (!client.BootsClaim)
                                                {
                                                    if (client.Entity.Level >= level)
                                                    {
                                                        ConquerItem item = new ConquerItem(true);

                                                        item.ID = itemid; item.Color = PhoenixProject.Game.Enums.Color.White;
                                                        item.Durability = item.MaximDurability = PhoenixProject.Database
                                                            .ConquerItemInformation.BaseInformations[itemid].Durability;
                                                        item.Bound = true;
                                                        item.Plus = 3;
                                                        if (client.Inventory.Add(item, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd))
                                                        {
                                                            client.BootsClaim = true;
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You need atleast one free slot in your inventory.");
                                                            dialog.Option("Alright.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You don't have atleast level " + level + ".");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You cannot claim it twice.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 55:
                                            {
                                                uint itemid = 202009;
                                                byte level = 100;
                                                if (!client.TowerClaim)
                                                {
                                                    if (client.Entity.Level >= level)
                                                    {
                                                        ConquerItem item = new ConquerItem(true);

                                                        item.ID = itemid; item.Color = PhoenixProject.Game.Enums.Color.White;
                                                        item.Durability = item.MaximDurability = PhoenixProject.Database
                                                            .ConquerItemInformation.BaseInformations[itemid].Durability;
                                                        item.Bound = true;
                                                        item.Plus = 3;
                                                        if (client.Inventory.Add(item, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd))
                                                        {
                                                            client.TowerClaim = true;
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You need atleast one free slot in your inventory.");
                                                            dialog.Option("Alright.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You don't have atleast level " + level + ".");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You cannot claim it twice.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 56:
                                            {
                                                uint itemid = 201009;
                                                byte level = 100;
                                                if (!client.FanClaim)
                                                {
                                                    if (client.Entity.Level >= level)
                                                    {
                                                        ConquerItem item = new ConquerItem(true);

                                                        item.ID = itemid; item.Color = PhoenixProject.Game.Enums.Color.White;
                                                        item.Durability = item.MaximDurability = PhoenixProject.Database
                                                            .ConquerItemInformation.BaseInformations[itemid].Durability;
                                                        item.Bound = true;
                                                        item.Plus = 3;
                                                        if (client.Inventory.Add(item, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd))
                                                        {
                                                            client.FanClaim = true;
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You need atleast one free slot in your inventory.");
                                                            dialog.Option("Alright.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You don't have atleast level " + level + ".");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You cannot claim it twice.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 57:
                                            {
                                                byte level = 100;
                                                if (!client.WeaponClaim)
                                                {
                                                    IProf proff = null;
                                                    ushort maxlevel = 0;
                                                    foreach (var prof in client.Proficiencies.Values)
                                                    {
                                                        if (maxlevel < prof.Level && prof.ID != 0)
                                                        {
                                                            maxlevel = prof.Level;
                                                            proff = prof;
                                                        }
                                                    }
                                                    if (proff == null)
                                                        return;
                                                    uint itemid = (uint)(proff.ID * 1000 + 219);
                                                    if (!PhoenixProject.Database.ConquerItemInformation.BaseInformations.ContainsKey(itemid))
                                                    {
                                                        Console.WriteLine("invalid claim weapon " + itemid);
                                                        return;
                                                    }
                                                    if (client.Entity.Level >= level)
                                                    {
                                                        ConquerItem item = new ConquerItem(true);

                                                        item.ID = itemid; item.Color = PhoenixProject.Game.Enums.Color.White;
                                                        item.Durability = item.MaximDurability = PhoenixProject.Database
                                                            .ConquerItemInformation.BaseInformations[itemid].Durability;
                                                        item.Bound = true;
                                                        item.Plus = 3;
                                                        item.SocketOne = PhoenixProject.Game.Enums.Gem.EmptySocket;
                                                        if (client.Inventory.Add(item, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd))
                                                        {
                                                            client.WeaponClaim = true;
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You need atleast one free slot in your inventory.");
                                                            dialog.Option("Alright.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You don't have atleast level " + level + ".");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You cannot claim it twice.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        #endregion
                                        case 100:
                                            {
                                                if (client.Entity.Class >= 100 && client.Entity.Class <= 101)
                                                {
                                                    if (client.Entity.Class == 101)
                                                    {
                                                        dialog.Text("Do you want to become a fire taoist?");
                                                        dialog.Option("Yes sir.", 254);
                                                        dialog.Option("No thank you master.", 255);
                                                        dialog.Send();
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("To promote now you need" + client.PromoteItemNameNeed + " level " + client.PromoteLevelNeed + ".");
                                                        dialog.Option("Promote me sir.", 254);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 254:
                                            {
                                                if (client.Entity.Class == 100)
                                                {
                                                    client.Entity.Class++;
                                                    dialog.Text("Congratulations! You have been promoted.");
                                                    dialog.Option("Thank you master.", 255);
                                                    dialog.Send();
                                                }
                                                else if (client.Entity.Class == 101)
                                                {
                                                    client.Entity.Class = 142;
                                                    dialog.Text("Congratulations! You have been promoted.");
                                                    dialog.Option("Thank you master.", 255);
                                                    dialog.Send();
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 200:
                                            {
                                                if (client.Entity.Class >= 100)
                                                {
                                                    dialog.Text("Let me know what you want to learn.");
                                                    dialog.Option("Thunder (Lvl 1).", 205);
                                                    dialog.Option("Cure (Lvl 1).", 206);
                                                    dialog.Option("Meditation. (Lvl 40).", 207);
                                                    dialog.Option("Nothing.", 255);
                                                    dialog.Send();
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 205:
                                            {
                                                if (client.Entity.Class >= 100)
                                                {
                                                    if (!client.AddSpell(LearnableSpell(1000)))
                                                    {
                                                        dialog.Text("You already know this skill.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                        break;
                                                    }
                                                    dialog.Text("You have learned thunder.");
                                                    dialog.Option("Thank you.", 255);
                                                    dialog.Send();
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 206:
                                            {
                                                if (client.Entity.Class >= 100)
                                                {
                                                    if (!client.AddSpell(LearnableSpell(1005)))
                                                    {
                                                        dialog.Text("You already know this skill.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                        break;
                                                    }
                                                    dialog.Text("You have learned cure.");
                                                    dialog.Option("Thank you.", 255);
                                                    dialog.Send();
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 207:
                                            {
                                                if (client.Entity.Class >= 100)
                                                {
                                                    if (client.Entity.Level >= 40)
                                                    {
                                                        if (!client.AddSpell(LearnableSpell(1195)))
                                                        {
                                                            dialog.Text("You already know this skill.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                            break;
                                                        }
                                                        dialog.Text("You have learned meditation.");
                                                        dialog.Option("Thank you.", 255);
                                                        dialog.Send();
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 40 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 1:
                                            {
                                                if (client.Entity.Class >= mClass && client.Entity.Class <= MClass)
                                                {
                                                    if (client.Entity.Class == MClass)
                                                    {
                                                        dialog.Text("You cannot be promoted anymore. You have mastered your class.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("To promote now you need" + client.PromoteItemNameNeed + " level " + client.PromoteLevelNeed + ".");
                                                        dialog.Option("Promote me sir.", 3);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 3:
                                            {
                                                if (client.Entity.Class >= mClass && client.Entity.Class <= MClass)
                                                {
                                                    if (client.Entity.Class == MClass)
                                                    {
                                                        dialog.Text("You cannot be promoted anymore. You have mastered your class.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                    }
                                                    else
                                                    {
                                                        if (client.PromoteItemNeed == 721020)
                                                        {
                                                            if (client.Inventory.Remove("moonbox"))
                                                            {
                                                                client.Inventory.Add(client.PromoteItemGain, 0, 1);
                                                                client.Entity.Class++;
                                                                dialog.Text("Congratulations! You have been promoted.");
                                                                dialog.Option("Thank you master.", 255);
                                                                dialog.Send();
                                                            }

                                                            else
                                                            {
                                                                dialog.Text("You don't meet the requierments.");
                                                                dialog.Option("Ahh.", 255);
                                                                dialog.Send();
                                                            }
                                                            return;
                                                        }
                                                        if (client.Inventory.Contains(client.PromoteItemNeed, client.PromoteItemCountNeed) && client.Entity.Level >= client.PromoteLevelNeed)
                                                        {
                                                            client.Inventory.Remove(client.PromoteItemNeed, client.PromoteItemCountNeed);
                                                            client.Inventory.Add(client.PromoteItemGain, 0, 1);
                                                            client.Entity.Class++;
                                                            dialog.Text("Congratulations! You have been promoted.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You don't meet the requierments.");
                                                            dialog.Option("Ahh.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 2:
                                            {
                                                if (client.Entity.Class >= mClass && client.Entity.Class <= MClass)
                                                {
                                                    dialog.Text("Let me know what you want to learn.");
                                                    dialog.Option("Fire (Lvl 42 + Thunder lvl 4).", 5);
                                                    dialog.Option("Bomb. (Lvl 43).", 6);
                                                    dialog.Option("FireCircle. (Lvl 48).", 7);
                                                    dialog.Option("FireRing. (Lvl 52).", 8);
                                                    dialog.Option("FireMeteor. (Lvl 55).", 9);
                                                    dialog.Option("Tornado (Lvl 81 + Fire lvl 3).", 10);
                                                    dialog.Option("Nothing.", 255);
                                                    dialog.Send();
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 5:
                                            {
                                                if (client.Entity.Class >= mClass && client.Entity.Class <= MClass)
                                                {
                                                    if (client.Entity.Level >= 42)
                                                    {
                                                        if (client.Spells.ContainsKey(1000) && client.Spells[1000] != null && client.Spells[1000].Level == 4)
                                                        {
                                                            if (!client.AddSpell(LearnableSpell(1001)))
                                                            {
                                                                dialog.Text("You already know this skill.");
                                                                dialog.Option("Thank you master.", 255);
                                                                dialog.Send();
                                                                break;
                                                            }
                                                            dialog.Text("You have learned the fire.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You need to know thunder very well to be able to learn the fire skill.");
                                                            dialog.Option("Alright.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 42 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 10:
                                            {
                                                if (client.Entity.Class >= mClass && client.Entity.Class <= MClass)
                                                {
                                                    if (client.Entity.Level >= 81)
                                                    {
                                                        if (client.Spells.ContainsKey(1001) && client.Spells[1001] != null && client.Spells[1001].Level == 3)
                                                        {
                                                            if (!client.AddSpell(LearnableSpell(1002)))
                                                            {
                                                                dialog.Text("You already know this skill.");
                                                                dialog.Option("Thank you master.", 255);
                                                                dialog.Send();
                                                                break;
                                                            }
                                                            dialog.Text("You have learned the tornado.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You need to know thunder very well to be able to learn the fire skill.");
                                                            dialog.Option("Alright.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 81 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 6:
                                            {
                                                if (client.Entity.Class >= mClass && client.Entity.Class <= MClass)
                                                {
                                                    if (client.Entity.Level >= 43)
                                                    {
                                                        if (!client.AddSpell(LearnableSpell(1160)))
                                                        {
                                                            dialog.Text("You already know this skill.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                            break;
                                                        }
                                                        dialog.Text("You have learned the bomb skill.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 43 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 7:
                                            {
                                                if (client.Entity.Class >= mClass && client.Entity.Class <= MClass)
                                                {
                                                    if (client.Entity.Level >= 48)
                                                    {
                                                        if (!client.AddSpell(LearnableSpell(1120)))
                                                        {
                                                            dialog.Text("You already know this skill.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                            break;
                                                        }
                                                        dialog.Text("You have learned the fire circle skill.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 48 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 8:
                                            {
                                                if (client.Entity.Class >= mClass && client.Entity.Class <= MClass)
                                                {
                                                    if (client.Entity.Level >= 52)
                                                    {
                                                        if (!client.AddSpell(LearnableSpell(1150)))
                                                        {
                                                            dialog.Text("You already know this skill.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                            break;
                                                        }
                                                        dialog.Text("You have learned the fire ring skill.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 52 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 9:
                                            {
                                                if (client.Entity.Class >= mClass && client.Entity.Class <= MClass)
                                                {
                                                    if (client.Entity.Level >= 55)
                                                    {
                                                        if (!client.AddSpell(LearnableSpell(1180)))
                                                        {
                                                            dialog.Text("You already know this skill.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                            break;
                                                        }
                                                        dialog.Text("You have learned the fire meteor skill.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 55 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                    }
                                    break;
                                }
                            #endregion

                            #region Taoist Star
                            case 30:
                                {
                                    byte mClass = 132;
                                    byte MClass = 135;
                                    string Class = "water taoist";
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                if (client.Entity.Class >= 100 && client.Entity.Class <= 101)
                                                {
                                                    dialog.Text("I am the master of the fire skills. As I see, you started your way on conquering this world. I will try to help you teaching you warrir skills and promoting you.");
                                                    dialog.Option("Promote me.", 100);
                                                    dialog.Option("Learn basic skills.", 200);
                                                    //dialog.Option("Claim bound items.", 49);
                                                    dialog.Option("Wait a minute.", 255);
                                                    dialog.Send();
                                                }
                                                else
                                                {
                                                    if (client.Entity.Class >= mClass && client.Entity.Class <= MClass)
                                                    {
                                                        dialog.Text("I am the master of the water skills. The water skills, are not skills that would make wounds but heal them. As I see, you started your way on conquering this world. I will try to help you teaching you warrir skills and promoting you.");
                                                        dialog.Option("Promote me.", 1);
                                                        dialog.Option("Learn skills.", 2);
                                                        dialog.Option("Learn basic skills.", 200);
                                                        //dialog.Option("Claim bound items.", 49);
                                                        dialog.Option("Wait a minute.", 255);
                                                        dialog.Send();
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                break;
                                            }
                                        #region BoundItems
                                        case 49:
                                            {
                                                dialog.Text("We just found some equipment, and I thought that we should give them to our pupils so they can be less defeatable.");
                                                if (!client.HeadgearClaim)
                                                    dialog.Option("Headgear (Lvl 15).", 50);
                                                if (!client.RingClaim)
                                                    dialog.Option("Ring (Lvl 40).", 51);
                                                if (!client.NecklaceClaim)
                                                    dialog.Option("Necklace (Lvl 50).", 52);
                                                if (!client.ArmorClaim)
                                                    dialog.Option("Armor (Lvl 70).", 53);
                                                dialog.Option("Next.", 48);
                                                dialog.Option("Nothing.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 48:
                                            {
                                                dialog.Text("We just found some equipment, and I thought that we should give them to our pupils so they can be less defeatable.");
                                                if (!client.BootsClaim)
                                                    dialog.Option("Boots (Lvl 80).", 54);
                                                if (!client.TowerClaim)
                                                    dialog.Option("Tower (Lvl 100).", 55);
                                                if (!client.FanClaim)
                                                    dialog.Option("Fan (Lvl 100).", 56);
                                                if (!client.WeaponClaim)
                                                    dialog.Option("Weapon (Lvl 110).", 57);
                                                dialog.Option("Back.", 49);
                                                dialog.Option("Nothing.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 50:
                                            {
                                                uint itemid = 117009;
                                                byte level = 15;
                                                if (!client.HeadgearClaim)
                                                {
                                                    if (client.Entity.Level >= level)
                                                    {
                                                        ConquerItem item = new ConquerItem(true);

                                                        item.ID = itemid; item.Color = PhoenixProject.Game.Enums.Color.White;
                                                        item.Durability = item.MaximDurability = PhoenixProject.Database
                                                            .ConquerItemInformation.BaseInformations[itemid].Durability;
                                                        item.Bound = true;
                                                        item.Plus = 3;
                                                        if (client.Inventory.Add(item, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd))
                                                        {
                                                            client.HeadgearClaim = true;
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You need atleast one free slot in your inventory.");
                                                            dialog.Option("Alright.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You don't have atleast level " + level + ".");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You cannot claim it twice.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 51:
                                            {
                                                uint itemid = 152089;
                                                byte level = 40;
                                                if (!client.RingClaim)
                                                {
                                                    if (client.Entity.Level >= level)
                                                    {
                                                        ConquerItem item = new ConquerItem(true);

                                                        item.ID = itemid; item.Color = PhoenixProject.Game.Enums.Color.White;
                                                        item.Durability = item.MaximDurability = PhoenixProject.Database
                                                            .ConquerItemInformation.BaseInformations[itemid].Durability;
                                                        item.Bound = true;
                                                        item.Plus = 3;
                                                        if (client.Inventory.Add(item, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd))
                                                        {
                                                            client.RingClaim = true;
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You need atleast one free slot in your inventory.");
                                                            dialog.Option("Alright.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You don't have atleast level " + level + ".");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You cannot claim it twice.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 52:
                                            {
                                                uint itemid = 121099;
                                                byte level = 50;
                                                if (!client.NecklaceClaim)
                                                {
                                                    if (client.Entity.Level >= level)
                                                    {
                                                        ConquerItem item = new ConquerItem(true);

                                                        item.ID = itemid; item.Color = PhoenixProject.Game.Enums.Color.White;
                                                        item.Durability = item.MaximDurability = PhoenixProject.Database
                                                            .ConquerItemInformation.BaseInformations[itemid].Durability;
                                                        item.Bound = true;
                                                        item.Plus = 3;
                                                        if (client.Inventory.Add(item, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd))
                                                        {
                                                            client.NecklaceClaim = true;
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You need atleast one free slot in your inventory.");
                                                            dialog.Option("Alright.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You don't have atleast level " + level + ".");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You cannot claim it twice.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 53:
                                            {
                                                uint itemid = 134069;
                                                byte level = 70;
                                                if (!client.ArmorClaim)
                                                {
                                                    if (client.Entity.Level >= level)
                                                    {
                                                        ConquerItem item = new ConquerItem(true);

                                                        item.ID = itemid; item.Color = PhoenixProject.Game.Enums.Color.White;
                                                        item.Durability = item.MaximDurability = PhoenixProject.Database
                                                            .ConquerItemInformation.BaseInformations[itemid].Durability;
                                                        item.Bound = true;
                                                        item.Plus = 3;
                                                        if (client.Inventory.Add(item, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd))
                                                        {
                                                            client.ArmorClaim = true;
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You need atleast one free slot in your inventory.");
                                                            dialog.Option("Alright.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You don't have atleast level " + level + ".");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You cannot claim it twice.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 54:
                                            {
                                                uint itemid = 160159;
                                                byte level = 80;
                                                if (!client.BootsClaim)
                                                {
                                                    if (client.Entity.Level >= level)
                                                    {
                                                        ConquerItem item = new ConquerItem(true);

                                                        item.ID = itemid; item.Color = PhoenixProject.Game.Enums.Color.White;
                                                        item.Durability = item.MaximDurability = PhoenixProject.Database
                                                            .ConquerItemInformation.BaseInformations[itemid].Durability;
                                                        item.Bound = true;
                                                        item.Plus = 3;
                                                        if (client.Inventory.Add(item, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd))
                                                        {
                                                            client.BootsClaim = true;
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You need atleast one free slot in your inventory.");
                                                            dialog.Option("Alright.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You don't have atleast level " + level + ".");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You cannot claim it twice.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 55:
                                            {
                                                uint itemid = 202009;
                                                byte level = 100;
                                                if (!client.TowerClaim)
                                                {
                                                    if (client.Entity.Level >= level)
                                                    {
                                                        ConquerItem item = new ConquerItem(true);

                                                        item.ID = itemid; item.Color = PhoenixProject.Game.Enums.Color.White;
                                                        item.Durability = item.MaximDurability = PhoenixProject.Database
                                                            .ConquerItemInformation.BaseInformations[itemid].Durability;
                                                        item.Bound = true;
                                                        item.Plus = 3;
                                                        if (client.Inventory.Add(item, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd))
                                                        {
                                                            client.TowerClaim = true;
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You need atleast one free slot in your inventory.");
                                                            dialog.Option("Alright.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You don't have atleast level " + level + ".");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You cannot claim it twice.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 56:
                                            {
                                                uint itemid = 201009;
                                                byte level = 100;
                                                if (!client.FanClaim)
                                                {
                                                    if (client.Entity.Level >= level)
                                                    {
                                                        ConquerItem item = new ConquerItem(true);

                                                        item.ID = itemid; item.Color = PhoenixProject.Game.Enums.Color.White;
                                                        item.Durability = item.MaximDurability = PhoenixProject.Database
                                                            .ConquerItemInformation.BaseInformations[itemid].Durability;
                                                        item.Bound = true;
                                                        item.Plus = 3;
                                                        if (client.Inventory.Add(item, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd))
                                                        {
                                                            client.FanClaim = true;
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You need atleast one free slot in your inventory.");
                                                            dialog.Option("Alright.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You don't have atleast level " + level + ".");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You cannot claim it twice.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 57:
                                            {
                                                byte level = 100;
                                                if (!client.WeaponClaim)
                                                {
                                                    IProf proff = null;
                                                    ushort maxlevel = 0;
                                                    foreach (var prof in client.Proficiencies.Values)
                                                    {
                                                        if (maxlevel < prof.Level && prof.ID != 0)
                                                        {
                                                            maxlevel = prof.Level;
                                                            proff = prof;
                                                        }
                                                    }
                                                    if (proff == null)
                                                        return;
                                                    uint itemid = (uint)(proff.ID * 1000 + 219);
                                                    if (!PhoenixProject.Database.ConquerItemInformation.BaseInformations.ContainsKey(itemid))
                                                    {
                                                        Console.WriteLine("invalid claim weapon " + itemid);
                                                        return;
                                                    }
                                                    if (client.Entity.Level >= level)
                                                    {
                                                        ConquerItem item = new ConquerItem(true);

                                                        item.ID = itemid; item.Color = PhoenixProject.Game.Enums.Color.White;
                                                        item.Bound = true;
                                                        item.Durability = item.MaximDurability = PhoenixProject.Database
                                                            .ConquerItemInformation.BaseInformations[itemid].Durability;
                                                        item.Plus = 3;
                                                        item.SocketOne = PhoenixProject.Game.Enums.Gem.EmptySocket;
                                                        if (client.Inventory.Add(item, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd))
                                                        {
                                                            client.WeaponClaim = true;
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You need atleast one free slot in your inventory.");
                                                            dialog.Option("Alright.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You don't have atleast level " + level + ".");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You cannot claim it twice.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        #endregion
                                        case 100:
                                            {
                                                if (client.Entity.Class >= 100 && client.Entity.Class <= 101)
                                                {
                                                    if (client.Entity.Class == 101)
                                                    {
                                                        dialog.Text("Do you want to become a water taoist?");
                                                        dialog.Option("Yes sir.", 254);
                                                        dialog.Option("No thank you master.", 255);
                                                        dialog.Send();
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("To promote now you need" + client.PromoteItemNameNeed + " level " + client.PromoteLevelNeed + ".");
                                                        dialog.Option("Promote me sir.", 254);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 254:
                                            {
                                                if (client.Entity.Class == 100)
                                                {
                                                    client.Entity.Class++;
                                                    dialog.Text("Congratulations! You have been promoted.");
                                                    dialog.Option("Thank you master.", 255);
                                                    dialog.Send();
                                                }
                                                else if (client.Entity.Class == 101)
                                                {
                                                    client.Entity.Class = 132;
                                                    dialog.Text("Congratulations! You have been promoted.");
                                                    dialog.Option("Thank you master.", 255);
                                                    dialog.Send();
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 200:
                                            {
                                                if (client.Entity.Class >= 100)
                                                {
                                                    dialog.Text("Let me know what you want to learn.");
                                                    dialog.Option("Thunder (Lvl 1).", 205);
                                                    dialog.Option("Cure (Lvl 1).", 206);
                                                    dialog.Option("Meditation. (Lvl 40).", 207);
                                                    dialog.Option("Nothing.", 255);
                                                    dialog.Send();
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 205:
                                            {
                                                if (client.Entity.Class >= 100)
                                                {
                                                    if (!client.AddSpell(LearnableSpell(1000)))
                                                    {
                                                        dialog.Text("You already know this skill.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                        break;
                                                    }
                                                    dialog.Text("You have learned thunder.");
                                                    dialog.Option("Thank you.", 255);
                                                    dialog.Send();
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 206:
                                            {
                                                if (client.Entity.Class >= 100)
                                                {
                                                    if (!client.AddSpell(LearnableSpell(1005)))
                                                    {
                                                        dialog.Text("You already know this skill.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                        break;
                                                    }
                                                    dialog.Text("You have learned cure.");
                                                    dialog.Option("Thank you.", 255);
                                                    dialog.Send();
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 207:
                                            {
                                                if (client.Entity.Class >= 100)
                                                {
                                                    if (client.Entity.Level >= 40)
                                                    {
                                                        if (!client.AddSpell(LearnableSpell(1195)))
                                                        {
                                                            dialog.Text("You already know this skill.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                            break;
                                                        }
                                                        dialog.Text("You have learned meditation.");
                                                        dialog.Option("Thank you.", 255);
                                                        dialog.Send();
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 40 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 1:
                                            {
                                                if (client.Entity.Class >= mClass && client.Entity.Class <= MClass)
                                                {
                                                    if (client.Entity.Class == MClass)
                                                    {
                                                        dialog.Text("You cannot be promoted anymore. You have mastered your class.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("To promote now you need" + client.PromoteItemNameNeed + " level " + client.PromoteLevelNeed + ".");
                                                        dialog.Option("Promote me sir.", 3);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 3:
                                            {
                                                if (client.Entity.Class >= mClass && client.Entity.Class <= MClass)
                                                {
                                                    if (client.Entity.Class == MClass)
                                                    {
                                                        dialog.Text("You cannot be promoted anymore. You have mastered your class.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                    }
                                                    else
                                                    {
                                                        if (client.PromoteItemNeed == 721020)
                                                        {
                                                            if (client.Inventory.Remove("moonbox"))
                                                            {
                                                                client.Inventory.Add(client.PromoteItemGain, 0, 1);
                                                                client.Entity.Class++;
                                                                dialog.Text("Congratulations! You have been promoted.");
                                                                dialog.Option("Thank you master.", 255);
                                                                dialog.Send();
                                                            }

                                                            else
                                                            {
                                                                dialog.Text("You don't meet the requierments.");
                                                                dialog.Option("Ahh.", 255);
                                                                dialog.Send();
                                                            }
                                                            return;
                                                        }
                                                        if (client.Inventory.Contains(client.PromoteItemNeed, client.PromoteItemCountNeed) && client.Entity.Level >= client.PromoteLevelNeed)
                                                        {
                                                            client.Inventory.Remove(client.PromoteItemNeed, client.PromoteItemCountNeed);
                                                            client.Inventory.Add(client.PromoteItemGain, 0, 1);
                                                            client.Entity.Class++;
                                                            dialog.Text("Congratulations! You have been promoted.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You don't meet the requierments.");
                                                            dialog.Option("Ahh.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 2:
                                            {
                                                if (client.Entity.Class >= mClass && client.Entity.Class <= MClass)
                                                {
                                                    dialog.Text("Let me know what you want to learn.");
                                                    dialog.Option("XP Revive (Lvl 1).", 5);
                                                    dialog.Option("Volcano (Lvl 1).", 6);
                                                    dialog.Option("Lightning (Lvl 1).", 7);
                                                    dialog.Option("HealingRain. (Lvl 40).", 8);
                                                    dialog.Option("StarOfAccuracy. (Lvl 40).", 9);
                                                    dialog.Option("MagicShield. (Lvl 40).", 10);
                                                    dialog.Option("Next.", 20);
                                                    dialog.Option("Nothing.", 255);
                                                    dialog.Send();
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 20:
                                            {
                                                if (client.Entity.Class >= mClass && client.Entity.Class <= MClass)
                                                {
                                                    dialog.Text("Let me know what you want to learn.");
                                                    dialog.Option("WaterDevil. (Lvl 40).", 21);
                                                    dialog.Option("Stigma. (Lvl 40).", 11);
                                                    dialog.Option("Invisibility. (Lvl 70).", 12);
                                                    dialog.Option("Pray. (Lvl 70).", 13);
                                                    dialog.Option("SpeedLightning (Lvl 70).", 14);
                                                    dialog.Option("AdvancedCure. (Lvl 80).", 15);
                                                    dialog.Option("Nectar. (Lvl 90).", 16);
                                                    dialog.Option("Back.", 2);
                                                    dialog.Send();
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 5:
                                            {
                                                if (client.Entity.Class >= mClass && client.Entity.Class <= MClass)
                                                {
                                                    if (client.Entity.Level >= 1)
                                                    {
                                                        if (!client.AddSpell(LearnableSpell(1050)))
                                                        {
                                                            dialog.Text("You already know this skill.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                            break;
                                                        }
                                                        dialog.Text("You have learned xp revive skill.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 1 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 21:
                                            {
                                                if (client.Entity.Class >= mClass && client.Entity.Class <= MClass)
                                                {
                                                    if (client.Entity.Level >= 40)
                                                    {
                                                        if (!client.AddSpell(LearnableSpell(1280)))
                                                        {
                                                            dialog.Text("You already know this skill.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("You have learned water devil.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 40 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 6:
                                            {
                                                if (client.Entity.Class >= mClass && client.Entity.Class <= MClass)
                                                {
                                                    if (client.Entity.Level >= 1)
                                                    {
                                                        if (!client.AddSpell(LearnableSpell(1125)))
                                                        {
                                                            dialog.Text("You already know this skill.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                            break;
                                                        }
                                                        dialog.Text("You have learned the volcano xp skill.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 1 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 7:
                                            {
                                                if (client.Entity.Class >= mClass && client.Entity.Class <= MClass)
                                                {
                                                    if (client.Entity.Level >= 1)
                                                    {
                                                        if (!client.AddSpell(LearnableSpell(1010)))
                                                        {
                                                            dialog.Text("You already know this skill.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                            break;
                                                        }
                                                        dialog.Text("You have learned the lightning xp skill.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 1 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 8:
                                            {
                                                if (client.Entity.Class >= mClass && client.Entity.Class <= MClass)
                                                {
                                                    if (client.Entity.Level >= 40)
                                                    {
                                                        if (!client.AddSpell(LearnableSpell(1055)))
                                                        {
                                                            dialog.Text("You already know this skill.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                            break;
                                                        }
                                                        dialog.Text("You have learned the fire healing rain.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 40 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 9:
                                            {
                                                if (client.Entity.Class >= mClass && client.Entity.Class <= MClass)
                                                {
                                                    if (client.Entity.Level >= 40)
                                                    {
                                                        if (!client.AddSpell(LearnableSpell(1085)))
                                                        {
                                                            dialog.Text("You already know this skill.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                            break;
                                                        }
                                                        dialog.Text("You have learned the star of acurracy skill.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 40 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 10:
                                            {
                                                if (client.Entity.Class >= mClass && client.Entity.Class <= MClass)
                                                {
                                                    if (client.Entity.Level >= 40)
                                                    {
                                                        if (!client.AddSpell(LearnableSpell(1090)))
                                                        {
                                                            dialog.Text("You already know this skill.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                            break;
                                                        }
                                                        dialog.Text("You have learned the magic shield skill.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 40 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 11:
                                            {
                                                if (client.Entity.Class >= mClass && client.Entity.Class <= MClass)
                                                {
                                                    if (client.Entity.Level >= 40)
                                                    {
                                                        if (!client.AddSpell(LearnableSpell(1095)))
                                                        {
                                                            dialog.Text("You already know this skill.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                            break;
                                                        }
                                                        dialog.Text("You have learned the stigma skill.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 40 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 12:
                                            {
                                                if (client.Entity.Class >= mClass && client.Entity.Class <= MClass)
                                                {
                                                    if (client.Entity.Level >= 70)
                                                    {
                                                        if (!client.AddSpell(LearnableSpell(1075)))
                                                        {
                                                            dialog.Text("You already know this skill.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                            break;
                                                        }
                                                        dialog.Text("You have learned the invisibility skill.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 70 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 13:
                                            {
                                                if (client.Entity.Class >= mClass && client.Entity.Class <= MClass)
                                                {
                                                    if (client.Entity.Level >= 70)
                                                    {
                                                        if (!client.AddSpell(LearnableSpell(1100)))
                                                        {
                                                            dialog.Text("You already know this skill.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                            break;
                                                        }
                                                        dialog.Text("You have learned the pray skill.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 70 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 14:
                                            {
                                                if (client.Entity.Class >= mClass && client.Entity.Class <= MClass)
                                                {
                                                    if (client.Entity.Level >= 70)
                                                    {
                                                        if (!client.AddSpell(LearnableSpell(5001)))
                                                        {
                                                            dialog.Text("You already know this skill.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                            break;
                                                        }
                                                        dialog.Text("You have learned the speed lightning skill.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 70 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 15:
                                            {
                                                if (client.Entity.Class >= mClass && client.Entity.Class <= MClass)
                                                {
                                                    if (client.Entity.Level >= 80)
                                                    {
                                                        if (!client.AddSpell(LearnableSpell(1175)))
                                                        {
                                                            dialog.Text("You already know this skill.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                            break;
                                                        }
                                                        dialog.Text("You have learned the advanced cure skill.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 70 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 16:
                                            {
                                                if (client.Entity.Class >= mClass && client.Entity.Class <= MClass)
                                                {
                                                    if (client.Entity.Level >= 80)
                                                    {
                                                        if (!client.AddSpell(LearnableSpell(1170)))
                                                        {
                                                            dialog.Text("You already know this skill.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                            break;
                                                        }
                                                        dialog.Text("You have learned the nectar skill.");
                                                        dialog.Option("Thank you master.", 255);
                                                        dialog.Send();
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("You need to be level 70 or more.");
                                                        dialog.Option("Alright.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("I will not tell any of the " + Class + " secrets to another class, so, good bye.");
                                                    dialog.Option("Alright.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                    }
                                    break;
                                }
                            #endregion

                            #region MightyTao
                            case 35500:
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                dialog.Text("If you have reborn atleast one time, you can learn some great skills. With them you will be able to summon some misterious monsters. They will help you conquer this world much faster.");
                                                dialog.Option("Summon guard - 1 euxite ore.", 1);
                                                dialog.Option("Summon class monster - 1 gold ore rate5.", 2);
                                                dialog.Send();
                                                break;
                                            }
                                        case 1:
                                            {
                                                if (client.Entity.Reborn > 0)
                                                {
                                                    if (client.Inventory.Contains(1072031, 1))
                                                    {
                                                        client.Inventory.Remove(1072031, 1);
                                                        if (!client.AddSpell(LearnableSpell(4000)))
                                                        {
                                                            dialog.Text("You already know this skill.");
                                                            dialog.Option("Thank you master.", 255);
                                                            dialog.Send();
                                                        }
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You cannot learn those skills until you reborn atleast once.");
                                                    dialog.Option("Alright", 255);
                                                    dialog.Send();
                                                    break;
                                                }
                                                break;
                                            }
                                        case 2:
                                            {
                                                if (client.Entity.Reborn > 0)
                                                {
                                                    if (client.Entity.Class >= 50 && client.Entity.Class <= 55)
                                                    {
                                                        dialog.Text("You cannot learn skills like this one. Ninjas don't need such thing. They are much more stronger than every other class.");
                                                        dialog.Option("Alright", 255);
                                                        dialog.Send();
                                                        break;
                                                    }
                                                    if (client.Inventory.Contains(1072054, 1))
                                                    {
                                                        client.Inventory.Remove(1072054, 1);
                                                        if (client.Entity.Class <= 15)
                                                            client.AddSpell(LearnableSpell(4050));
                                                        else if (client.Entity.Class <= 25)
                                                            client.AddSpell(LearnableSpell(4060));
                                                        else if (client.Entity.Class <= 45)
                                                            client.AddSpell(LearnableSpell(4070));
                                                        else if (client.Entity.Class <= 135)
                                                            client.AddSpell(LearnableSpell(4010));
                                                        else if (client.Entity.Class <= 145)
                                                            client.AddSpell(LearnableSpell(4020));
                                                    }
                                                }
                                                else
                                                {
                                                    dialog.Text("You cannot learn those skills until you reborn atleast once.");
                                                    dialog.Option("Alright", 255);
                                                    dialog.Send();
                                                    break;
                                                }
                                                break;
                                            }
                                    }
                                    break;
                                }
                            #endregion

                            #endregion
                        }
                        break;
                    }
                #endregion
                #region Stables
                case 1006:
                    {
                        switch (client.ActiveNpc)
                        {

                        }
                        break;
                    }
                #endregion
                #region Lottery
                case 700:
                    {
                        switch (client.ActiveNpc)
                        {
                            #region LuckyBox
                            case 925:
                            case 926:
                            case 927:
                            case 928:
                            case 929:
                            case 930:
                            case 931:
                            case 932:
                            case 933:
                            case 934:
                            case 935:
                            case 936:
                            case 937:
                            case 938:
                            case 939:
                            case 940:
                            case 942:
                            case 943:
                            case 944:
                            case 945:
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                Game.Lottery.LuckyBox(client.ActiveNpc, client, false);
                                                break;
                                            }
                                        case 15:
                                            {
                                                Game.Lottery.LuckyBox(client.ActiveNpc, client, false);

                                                break;
                                            }
                                        case 1:
                                            {
                                                if (client.InLottery)
                                                {
                                                    if (client.Inventory.Count == 40)
                                                    {
                                                        client.Send(PhoenixProject.ServerBase.Constants.FullInventory);
                                                        return;
                                                    }
                                                    client.InLottery = false;
                                                tryagain:
                                                    int rand = PhoenixProject.ServerBase.Kernel.Random.Next(PhoenixProject.Database.LotteryTable.LotteryItems.Count);
                                                    var item = PhoenixProject.Database.LotteryTable.LotteryItems[rand];
                                                    var Itemd = PhoenixProject.Database.ConquerItemInformation.BaseInformations[item.ID];
                                                    if (Itemd == null)
                                                        goto tryagain;
                                                    if (PhoenixProject.ServerBase.Kernel.Rate(item.Rank, item.Chance) && PhoenixProject.ServerBase.Kernel.Rate(item.Rank, 35 - item.Rank))
                                                    {
                                                        IConquerItem Item = new ConquerItem(true);
                                                        Item.ID = item.ID;
                                                        Item.Plus = item.Plus;
                                                        Item.Color = PhoenixProject.Game.Enums.Color.Blue;
                                                        if (item.Sockets > 0)
                                                            Item.SocketOne = PhoenixProject.Game.Enums.Gem.EmptySocket;
                                                        if (item.Sockets > 1)
                                                            Item.SocketTwo = PhoenixProject.Game.Enums.Gem.EmptySocket;
                                                        Item.Durability = Item.MaximDurability = Itemd.Durability;
                                                        client.Inventory.Add(Item, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd);
                                                        if (item.Rank <= 4)
                                                        {
                                                            PhoenixProject.ServerBase.Kernel.SendWorldMessage(new Message("Congratulations! " + client.Entity.Name + " won " + item.Name + " in lottery.", System.Drawing.Color.Black, Message.Talk), PhoenixProject.ServerBase.Kernel.GamePool.Values);
                                                        }
                                                        else
                                                        {
                                                            if (PhoenixProject.ServerBase.Kernel.Rate(item.Chance, 100))
                                                            {
                                                                PhoenixProject.ServerBase.Kernel.SendWorldMessage(new Message("Congratulations! " + client.Entity.Name + " won " + item.Name + " in lottery.", System.Drawing.Color.Black, Message.Talk), PhoenixProject.ServerBase.Kernel.GamePool.Values);
                                                            }
                                                        }
                                                    }
                                                    else
                                                    {
                                                        goto tryagain;
                                                    }
                                                }
                                                break;
                                            }
                                    }
                                    break;
                                }
                            #endregion
                            #region CollecterZhao
                            case 3952:
                                {
                                    switch (npcRequest.OptionID)
                                    {
                                        case 0:
                                            {
                                                dialog.Text("Hello mate, i can help you to change Amulets and LifeFruitBasket for 10 cps what you have?.");
                                                dialog.Option("LifeFruitBasket", 1);
                                                dialog.Option("PenitenceAmulet.", 2);
                                                dialog.Option("DisguiseAmulet.", 3);
                                                dialog.Option("Nothing thank you.", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        case 1:
                                            {
                                                if (client.Inventory.Contains(723725, 1))
                                                {
                                                    client.Inventory.Remove(723725, 1);
                                                    client.Entity.ConquerPoints += 10;
                                                }
                                                else
                                                {
                                                    dialog.Text("Sorry you dont Have Any LifeFruitBaskets.");
                                                    dialog.Option("Alright Thanks", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 2:
                                            {
                                                if (client.Inventory.Contains(723727, 1))
                                                {
                                                    client.Inventory.Remove(723727, 1);
                                                    client.Entity.ConquerPoints += 10;
                                                }
                                                else
                                                {
                                                    dialog.Text("Sorry you dont Have Any PenitenceAmulet.");
                                                    dialog.Option("Alright Thanks", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                        case 3:
                                            {
                                                if (client.Inventory.Contains(723724, 1))
                                                {
                                                    client.Inventory.Remove(723724, 1);
                                                    client.Entity.ConquerPoints += 10;
                                                }
                                                else
                                                {
                                                    dialog.Text("Sorry you dont Have Any DisguiseAmulet.");
                                                    dialog.Option("Alright Thanks.", 255);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                    }
                                    break;
                                }
                            #endregion
                        }
                        break;
                    }
                #endregion
            }

            switch (client.ActiveNpc)
            {
                #region  Lunaa
                case 50401:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("What can I do for you?");
                                    dialog.Option("Enter FairyCave.", 1);
                                    dialog.Option("Just passing by.", 255);
                                    dialog.Avatar(51);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    client.Entity.Teleport(1801, 64, 39);
                                    break;
                                }
                        }
                        break;
                    }
                #endregion
                #region  CloudBeast
                case 50402:
                    {
                        client.Send(new Message("You took courage to touch the Cloud Beast, and found this gaint creature is quiet and gentie.", System.Drawing.Color.White, Message.Middle));
                        break;
                    }
                #endregion
                #region  TCWarder
                case 50400:
                    {
                        dialog.Text("I was veteran aides of the DC Captain. My superior officer is very kind to me,");
                        dialog.Text(" as I was promoted to Twin City as a warder here. I was always Keen to repay");
                        dialog.Text(" the faith and confidence the DC Captain has shown in me! The DC Captain");
                        dialog.Text(" likes to make friend with great warriors.com to me after your 2nd");
                        dialog.Text(" reborn and reach level 137, I will introduce you to him, I am sure that he will");
                        dialog.Text(" be happy to make you acquaintance! And you will have chance to meet his");
                        dialog.Text(" extraordinary son, Nezha!");
                        dialog.Option("I will come later!", 255);
                        dialog.Avatar(51);
                        dialog.Send();
                        break;
                    }
                #endregion
                #region Stables

                #region  Breeder
                case 9883:
                case 50406:
                    {
                        Data data = new Data(true);
                        data.ID = Data.OpenWindow;
                        data.UID = client.Entity.UID;
                        data.TimeStamp = Time32.Now;
                        data.dwParam = Data.WindowCommands.Breeding;
                        data.wParam1 = client.Entity.X;
                        data.wParam2 = client.Entity.Y;
                        client.Send(data);
                        break;
                    }
                #endregion
                #region SkillTeacher
                case 9881:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Ready to learn some great skills? Their prices are as good as they are.");
                                    dialog.Option("Riding - 50000 gold.", 1);
                                    dialog.Option("Spook - 100000 gold.", 2);
                                    dialog.Option("WarCry - 1000000 gold.", 3);
                                    dialog.Option("Nothing.", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    if (client.Entity.Money >= 50000)
                                    {
                                        if (!client.AddSpell(LearnableSpell(7001)))
                                        {
                                            dialog.Text("You already know this skill.");
                                            dialog.Option("Thank you master.", 255);
                                            dialog.Send();
                                        }
                                        else
                                        {
                                            client.Entity.Money -= 50000;
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("You don't meet the requierments.");
                                        dialog.Option("Ahh sorry.", 255);
                                    }
                                    break;
                                }
                            case 2:
                                {
                                    if (client.Entity.Money >= 100000)
                                    {
                                        if (!client.AddSpell(LearnableSpell(7002)))
                                        {
                                            dialog.Text("You already know this skill.");
                                            dialog.Option("Thank you master.", 255);
                                            dialog.Send();
                                        }
                                        else
                                        {
                                            client.Entity.Money -= 100000;
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("You don't meet the requierments.");
                                        dialog.Option("Ahh sorry.", 255);
                                    }
                                    break;
                                }
                            case 3:
                                {
                                    if (client.Entity.Money >= 1000000)
                                    {
                                        if (!client.AddSpell(LearnableSpell(7003)))
                                        {
                                            dialog.Text("You already know this skill.");
                                            dialog.Option("Thank you master.", 255);
                                            dialog.Send();
                                        }
                                        else
                                        {
                                            client.Entity.Money -= 1000000;
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("You don't meet the requierments.");
                                        dialog.Option("Ahh sorry.", 255);
                                    }
                                    break;
                                }
                        }
                        break;
                    }
                #endregion
                #endregion
                #region RebirthMaster
                case 59558:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {

                                    dialog.Text("I devote all my life to the research of eternity. And finally I Know the secret of");
                                    dialog.Text(" rebirth! Well, anything I can help you with?");
                                    dialog.Option("1st Rebirth.", 1);
                                    dialog.Option("2nd Rebirth.", 2);
                                    dialog.Option("Reincarnation.", 3);
                                    dialog.Option("Reallot my Attribute Points.", 4);
                                    dialog.Option("Just Passing By.", 255);
                                    dialog.Avatar(51);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    dialog.Text("Hello conqueror. You know, there are ancient stories about a second life and many people chose not to believe it. Even so, there are some people that believe in it, and that inspired me to learn about it. In my study, I found out how to reborn someone. But, in this quest, a CelestialStone may be needed. To get one, talk with Celestine(TwinCity 365, 92).");
                                    dialog.Option("Tell me more about it.", 10);
                                    dialog.Option("Reborm me.", 12);
                                    dialog.Option("Nothing thank you.", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 10:
                                {
                                    dialog.Text("So you want to know more? When you reborn, you can chose what class you want to be the second life. Once you reborn you will start again the journey to conquer this world from level 15. Beware that you may gain some special skills depending on the class you chose to reborn, and you'll be able to get an own pet, that will follow and help you level or fight. The cost is a CelestialStone.");
                                    dialog.Option("Reborm me.", 2);
                                    dialog.Option("Nothing thank you.", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 12:
                                {
                                    if (client.Entity.Reborn == 0)
                                    {
                                        if (client.Entity.Class % 10 == 5 && client.Entity.Level >= (client.Entity.Class == 135 ? 110 : 120))
                                        {
                                            dialog.Text("There are two kinds of reborns. One is the normal one and the second one is blessed. The normal reborn will give you the chance to get a Super Gem and the blessed reborn will set a -1 into one of your equipment that you wear during the reborn. What do you chose?");
                                            dialog.Option("Normal reborn.", 15);
                                            dialog.Option("Blessed reborn.", 13);
                                            dialog.Option("Nothing thank you.", 255);
                                            dialog.Send();
                                        }
                                        else
                                        {
                                            dialog.Text("You cannot reborn if your level is not 110+ for water saints and 120+ for other masters.");
                                            dialog.Option("Ahh.", 255);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("You cannot reborn again here. Alex, an elder who lives in Ape Canyon, will tell you about the third life.");
                                        dialog.Option("Thank you.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 15:
                                {
                                    if (client.Entity.Reborn == 0)
                                    {
                                        if (client.Entity.Class % 10 == 5 && client.Entity.Level >= (client.Entity.Class == 135 ? 110 : 120))
                                        {
                                            dialog.Text("Select the super gem you desire.");
                                            dialog.Option("SuperPhoenixGem.", 203);
                                            dialog.Option("SuperDragonGem.", 213);
                                            dialog.Option("SuperFuryGem.", 223);
                                            dialog.Option("SuperRainbowGem.", 233);
                                            dialog.Option("SuperVioletGem.", 253);
                                            dialog.Option("SuperMoonGem.", 254);
                                            dialog.Option("SuperKylinGem.", 243);
                                            dialog.Option("Nothing thank you.", 255);
                                            dialog.Send();
                                        }
                                        else
                                        {
                                            dialog.Text("You cannot reborn if your level is not 110+ for water saints and 120+ for other masters.");
                                            dialog.Option("Ahh.", 255);
                                            dialog.Send();
                                        }
                                        break;
                                    }
                                    else
                                    {
                                        dialog.Text("You cannot reborn again here. Alex, an elder who lives in Ape Canyon, will tell you about the third life.");
                                        dialog.Option("Thank you.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 13:
                                {
                                    if (client.Entity.Reborn == 0)
                                    {
                                        if (client.Entity.Class % 10 == 5 && client.Entity.Level >= (client.Entity.Class == 135 ? 110 : 120))
                                        {
                                            dialog.Text("Select the class you want to reborn in.");
                                            dialog.Option("Trojan.", (byte)(10 + npcRequest.OptionID));
                                            dialog.Option("Warrior.", (byte)(20 + npcRequest.OptionID));
                                            dialog.Option("Archer.", (byte)(40 + npcRequest.OptionID));
                                            dialog.Option("WaterTaoist.", (byte)(132 + npcRequest.OptionID));
                                            dialog.Option("FireTaoist.", (byte)(142 + npcRequest.OptionID));
                                            dialog.Option("Ninja.", (byte)(50 + npcRequest.OptionID));
                                            dialog.Option("Monk.", (byte)(60 + npcRequest.OptionID));
                                            dialog.Option("Pirate.", (byte)(70 + npcRequest.OptionID));
                                            //dialog.Option("Nothing thank you.", 255);
                                            dialog.Send();
                                        }
                                        else
                                        {
                                            dialog.Text("You cannot reborn if your level is not 110+ for water saints and 120+ for other masters.");
                                            dialog.Option("Ahh.", 255);
                                            dialog.Send();
                                        }
                                        break;
                                    }
                                    else
                                    {
                                        dialog.Text("You cannot reborn again here. Alex, an elder who lives in Ape Canyon, will tell you about the third life.");
                                        dialog.Option("Thank you.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            default:
                                {
                                    if (client.Entity.Reborn == 0)
                                    {
                                        if (client.Entity.Class % 10 == 5 && client.Entity.Level >= (client.Entity.Class == 135 ? 110 : 120))
                                        {
                                            if (npcRequest.OptionID == 255)
                                                return;
                                            if (npcRequest.OptionID >= 200 && npcRequest.OptionID <= 254)
                                            {
                                                client.SelectedGem = (byte)(npcRequest.OptionID % 100);
                                                if (client.SelectedGem == 54)
                                                    client.SelectedGem = 63;
                                                if (client.Entity.Reborn == 0)
                                                {
                                                    byte id = 4;
                                                    dialog.Text("Select the class you want to reborn in.");
                                                    dialog.Option("Trojan.", (byte)(10 + id));
                                                    dialog.Option("Warrior.", (byte)(20 + id));
                                                    dialog.Option("Archer.", (byte)(40 + id));
                                                    dialog.Option("WaterTaoist.", (byte)(132 + id));
                                                    dialog.Option("FireTaoist.", (byte)(142 + id));
                                                    dialog.Option("Ninja.", (byte)(50 + id));
                                                    dialog.Option("Monk.", (byte)(60 + id));
                                                    dialog.Option("Pirate.", (byte)(70 + id));
                                                    //dialog.Option("Nothing thank you.", 255);
                                                    dialog.Send();
                                                    break;
                                                }
                                                else
                                                {
                                                    dialog.Text("You cannot reborn again here. Alex, an elder who lives in Ape Canyon, will tell you about the third life.");
                                                    dialog.Option("Thank you.", 255);
                                                    dialog.Send();
                                                }
                                            }
                                            else
                                            {
                                                if (client.Inventory.Contains(721259, 1))
                                                {
                                                    byte _class = (byte)(npcRequest.OptionID - npcRequest.OptionID % 10);
                                                    if (_class > 100)
                                                        _class += 2;
                                                    byte type = (byte)(npcRequest.OptionID - _class);
                                                    if (_class < 100)
                                                        _class++;
                                                    if (type != 4)
                                                    {
                                                        _class -= 10;
                                                    }
                                                    if (client.Reborn(_class))
                                                    {
                                                        client.Inventory.Remove(721259, 1);
                                                        if (type == 4)
                                                        {
                                                            if (client.SelectedGem != 0)
                                                            {
                                                                uint gemid = (uint)(client.SelectedGem + 700000);
                                                                client.Inventory.Add(gemid, 0, 1);
                                                            }
                                                        }
                                                        else
                                                        {
                                                            int availableshots = 0;
                                                            for (byte count = 0; count < 12; count++)
                                                                if (!client.Equipment.Free(count))
                                                                    if (client.Equipment.TryGetItem(count).Bless == 0)
                                                                        availableshots++;
                                                            if (availableshots != 0)
                                                            {
                                                                byte ex = (byte)PhoenixProject.ServerBase.Kernel.Random.Next(12);
                                                                if (!client.Equipment.Free(ex))
                                                                    if (client.Equipment.TryGetItem(ex).Bless == 0)
                                                                    {
                                                                        var item = client.Equipment.TryGetItem(ex);
                                                                        item.Bless = 1;
                                                                        item.Mode = PhoenixProject.Game.Enums.ItemMode.Update;
                                                                        item.Send(client);
                                                                        PhoenixProject.Database.ConquerItemTable.UpdateBless(item);
                                                                    }
                                                            }
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("Sorry, but you need atleast 2 free spaces in your inventory.");
                                                        dialog.Option("Ohh.", 255);
                                                        dialog.Send();
                                                    }
                                                }
                                            }
                                        }
                                        else
                                        {
                                            dialog.Text("You cannot reborn if your level is not 110+ for water saints and 120+ for other masters.");
                                            dialog.Option("Ahh.", 255);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("You cannot reborn again here. Alex, an elder who lives in Ape Canyon, will tell you about the third life.");
                                        dialog.Option("Thank you.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            #region Riencration to 7
                            case 3:
                                {

                                    if (client.Entity.Reborn == 2 && client.Entity.Level >= 120)
                                    {
                                        dialog.Text("I am the ReincarnationSeer i can help you to change your second reborn Class you need OblivionDew");
                                        dialog.Text(" and " + PhoenixProject.Database.rates.Riencration + " cps in your inventory deal?");
                                        dialog.Option("i want to Change my Class.", 5);
                                        dialog.Option("i want to Buy OblivionDew.", 6);
                                        dialog.Option("Wait a minute.", 255);
                                        dialog.Send();
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry you need to be Seconed Reborn and Lv + 120.");
                                        dialog.Option("Alright.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 5:
                                {

                                    if (client.Entity.ConquerPoints >= PhoenixProject.Database.rates.Riencration)
                                    {
                                        client.Send(new Data(true) { UID = client.Entity.UID, ID = Data.OpenWindow, dwParam = Data.WindowCommands.Reincarnation, wParam1 = client.Entity.X, wParam2 = client.Entity.Y });
                                        //break;
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry you dont have " + PhoenixProject.Database.rates.Riencration + " cps in your inventory.");
                                        dialog.Option("Alright.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 6:
                                {
                                    if (client.Entity.ConquerPoints >= 2000)
                                    {
                                        dialog.Text("Do you Really want to Buy OblivionDew it cost 2,000 cps");
                                        dialog.Option("Yes.", 7);
                                        dialog.Option("Wait a minute.", 255);
                                        dialog.Send();
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry you dont Have 2,000 cps.");
                                        dialog.Option("Alright.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 7:
                                {
                                    if (client.Entity.ConquerPoints >= 2000)
                                    {
                                        client.Entity.ConquerPoints -= 2000;
                                        client.Inventory.Add(711083, 0, 1);
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry you dont Have 2000 cps in your bag.");
                                        dialog.Option("Why!?", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            #endregion

                            #region attribute 8
                            case 4:
                                {
                                    dialog.Text("Hello there brave conqueror, if you have reborn, and you misplaced your atribute points or you want to set them another way, I'll reset your atribute points for one DragonBall. Do you accept?");
                                    dialog.Option("Here is the DragonBall.", 8);
                                    dialog.Option("I'll just leave", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 8:
                                {
                                    if (client.Entity.Reborn > 0)
                                    {
                                        if (client.Inventory.Contains(1088000, 1))
                                        {
                                            client.Inventory.Remove(1088000, 1);
                                            if (client.Entity.Reborn != 0)
                                            {
                                                client.Entity.Agility = 0;
                                                client.Entity.Strength = 0;
                                                client.Entity.Vitality = 1;
                                                client.Entity.Spirit = 0;
                                                if (client.Entity.Reborn == 1)
                                                {
                                                    client.Entity.Atributes = (ushort)(client.ExtraAtributePoints(client.Entity.FirstRebornLevel, client.Entity.FirstRebornLevel)
                                                        + 52 + 3 * (client.Entity.Level - 15));
                                                }
                                                else
                                                {
                                                    client.Entity.Atributes = (ushort)(client.ExtraAtributePoints(client.Entity.FirstRebornLevel, client.Entity.FirstRebornClass) +
                                                        client.ExtraAtributePoints(client.Entity.SecondRebornLevel, client.Entity.SecondRebornClass) + 52 + 3 * (client.Entity.Level - 15));
                                                }
                                            }
                                        }
                                        else
                                        {
                                            dialog.Text("You need a DragonBall.");
                                            dialog.Option("I'll just leave", 255);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("You have to have atleast one rebirth atleast.");
                                        dialog.Option("I'll just leave", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            #endregion

                            #region Alex 2ndreborn 9
                            case 2:
                                {
                                    dialog.Text("You don't worry, it's not gonna hurt you a bit when getting the third life. You just need an exemption token and it's all going to be fine.");
                                    dialog.Option("Here is the ExemptionToken.", 9);
                                    dialog.Option("I'll just leave", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 9:
                                {
                                    if (client.Entity.Reborn == 1)
                                    {
                                        if (client.Entity.Class % 10 == 5 && client.Entity.Level >= (client.Entity.Class == 135 ? 110 : 120))
                                        {
                                            dialog.Text("Select the class you want to reborn in.");
                                            dialog.Option("Trojan.", 11);
                                            dialog.Option("Warrior.", 21);
                                            dialog.Option("Archer.", 41);
                                            dialog.Option("WaterTaoist.", 132);
                                            dialog.Option("FireTaoist.", 142);
                                            dialog.Option("Ninja.", 51);
                                            dialog.Option("Monk.", 61);
                                            dialog.Option("Pirate.", 71);
                                            //dialog.Option("Nothing thank you.", 255);
                                            dialog.Send();
                                        }
                                        else
                                        {
                                            dialog.Text("If you are a water saint you need level 110+, else you need 120+.");
                                            dialog.Option("I'll just leave", 255);
                                            dialog.Send();
                                            break;
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("You need to be in the second life to be able to get the third life.");
                                        dialog.Option("I'll just leave", 255);
                                        dialog.Send();
                                        break;
                                    }
                                    break;
                                }
                            case 11:
                            case 21:
                            case 41:
                            case 51:
                            case 61:
                            case 71:
                            case 132:
                            case 142:
                                {
                                    if (npcRequest.OptionID == 255)
                                        return;
                                    if (client.Entity.Reborn == 1)
                                    {
                                        if (client.Entity.Class % 10 == 5 && client.Entity.Level >= (client.Entity.Class == 135 ? 110 : 120))
                                        {
                                            if (client.Inventory.Contains(723701, 1))
                                            {
                                                if (client.Reborn(npcRequest.OptionID))
                                                {
                                                    client.Inventory.Remove(723701, 1);
                                                }
                                                else
                                                {
                                                    dialog.Text("You need two free slots in your inventory.");
                                                    dialog.Option("I'll just leave", 255);
                                                    dialog.Send();
                                                    break;
                                                }
                                            }
                                        }
                                        else
                                        {
                                            dialog.Text("If you are a water saint you need level 110+, else you need 120+.");
                                            dialog.Option("I'll just leave", 255);
                                            dialog.Send();
                                            break;
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("You need to be in the second life to be able to get the third life.");
                                        dialog.Option("I'll just leave", 255);
                                        dialog.Send();
                                        break;
                                    }
                                    break;
                                }
                            #endregion

                        }
                        break;
                    }
                #endregion
                case 2000://CloudSaintJar
                case 2001:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    if (client.Entity.SubClassLevel == 0 && !client.Inventory.Contains(0xb71b0, 1))
                                    {
                                        dialog.Text("Hello Hero im CouldSaint , i can help you to obtain a good gift but you must give me 200 RedDevils Souls,");
                                        dialog.Text("i will give you A jar will help you in That. after you done come back and change it with A Prize, ");
                                        dialog.Text("you can try this quest 1 time a day");
                                        dialog.Option("Accept!", 1);
                                        dialog.Option("JustPassingBy!", 255);
                                        dialog.Avatar(51);
                                        dialog.Send();
                                    }
                                    else
                                    {
                                        if (client.Entity.Status4 < 200)
                                        {
                                            if (client.Inventory.Contains(0xb71b0, 1))
                                            {
                                                dialog.Text("you have A jar to collect 200 RedDevils Soul in it and you still need [" + (200 - client.Entity.Status4) + "] souls to collect did you lost your way ?");
                                                dialog.Option("Teleport me to RedDevils!", 2);
                                                dialog.Option("JustPassingBy!", 255);
                                                dialog.Avatar(51);
                                                dialog.Send();
                                            }
                                            else
                                            {
                                                dialog.Text("You got your try in DemonQuest Tonight come again tomorrow");
                                                dialog.Option("Thanks!", 255);
                                                dialog.Avatar(51);
                                                dialog.Send();
                                            }
                                        }
                                        else
                                        {
                                            dialog.Text("Congratulation you Collected 200 RedDdevils Soul you want to change the Jar with A Gift?");
                                            dialog.Option("Sure!", 3);
                                            dialog.Avatar(51);
                                            dialog.Send();
                                        }
                                    }
                                    break;
                                }
                            case 1:
                                {
                                    client.Entity.SubClassLevel++;
                                    client.Entity.Status4 = 0;
                                    // client.MonsterHunterStats.QuestGiver = 10;
                                    PhoenixProject.Interfaces.IConquerItem i = new ConquerItem(true);
                                    i.ID = 0xb71b0;
                                    i.Durability = 200;
                                    i.MaximDurability = 58;
                                    client.Entity.kilid = 58;
                                    client.Inventory.Add(i, Game.Enums.ItemUse.CreateAndAdd);
                                    break;
                                }
                            case 2:
                                {

                                    client.Entity.Teleport(1001, 337, 306);
                                    break;
                                }
                            case 3:
                                {
                                    if (client.Inventory.Contains(0xb71b0, 1))
                                    {
                                        client.Inventory.Remove(0xb71b0, 1);
                                        uint randprize = (uint)PhoenixProject.ServerBase.Kernel.Random.Next(1, (int)Database.DROP_SOULS.Count_Jar);

                                        uint ItemID = ServerBase.Kernel.JarItem[randprize].item_id;
                                        client.Inventory.Add(ItemID, 0, 1);
                                        ServerBase.Kernel.SendWorldMessage(new Message("Congratulations, " + client.Entity.Name + " has finished CloudSaint Jar Quest and Obtained " + Database.ConquerItemInformation.BaseInformations[ItemID].Name + "  !", System.Drawing.Color.Red, Network.GamePackets.Message.Talk), ServerBase.Kernel.GamePool.Values);
                                        Data data = new Data(true);
                                        data.ID = Data.OpenCustom;
                                        data.UID = client.Entity.UID;
                                        data.TimeStamp = Time32.Now;
                                        data.dwParam = 3382;
                                        data.wParam1 = client.Entity.X;
                                        data.wParam2 = client.Entity.Y;
                                        client.Send(data);
                                    }
                                    break;
                                }
                        }
                        break;
                    }
                #region RefineryStabilizer
                case 7538:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Hey there! I can channel the power of Permanent Stones and stabilize the Refinery, which means making the temporary Refinery permanent. Permanent Stones have 10 Stabilization Points,");
                                    dialog.Text("~and Big Permanent Stones have 100. Different Refinery levels require different amounts of points. I can only perform the stabilization with enough of them. Are we clear? Good.");
                                    dialog.Text("~Do you want to stabilize the Refinery now?");
                                    dialog.Option("Yup.", 1);
                                    dialog.Option("Nope.", 255);
                                    dialog.Avatar(51);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {

                                    Data Data = new Data(true);
                                    Data.UID = client.Entity.UID;
                                    Data.ID = 126;
                                    Data.dwParam = 448;
                                    Data.wParam1 = client.Entity.X;
                                    Data.wParam2 = client.Entity.Y;
                                    client.Send(Data);
                                    break;

                                }

                        }
                        break;
                    }
                #endregion
                #region +13 +14 +15
                case 420420:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Hey there " + client.Entity.Name + " i can help you to upgrade ur gears to +13 , +14, +15. but you must have the required cps");
                                    dialog.Option("Compose +13", 1);
                                    dialog.Option("Compose +14", 2);
                                    dialog.Option("Compose +15", 3);
                                    dialog.Option("Just Passing By!.", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    dialog.Text("Select which item's details you want to +13?, remember it will coast you " + Database.rates.plus13 + " Cps");
                                    dialog.Option("Headgear.", 4);
                                    dialog.Option("Necklace.", 5);
                                    dialog.Option("Armor.", 6);
                                    dialog.Option("Main Weapon.", 7);
                                    dialog.Option("Left Weapon/Shield.", 8);
                                    dialog.Option("Ring.", 9);
                                    dialog.Option("Boots.", 10);
                                    dialog.Option("I'll just leave", 255);
                                    break;
                                }
                            case 2:
                                {
                                    dialog.Text("Select which item's details you want to +14?, remember it will coast you " + Database.rates.plus14 + " Cps");
                                    dialog.Option("Headgear.", 24);
                                    dialog.Option("Necklace.", 25);
                                    dialog.Option("Armor.", 26);
                                    dialog.Option("Main Weapon.", 27);
                                    dialog.Option("Left Weapon/Shield.", 28);
                                    dialog.Option("Ring.", 29);
                                    dialog.Option("Boots.", 30);
                                    dialog.Option("I'll just leave", 255);
                                    break;
                                }
                            case 3:
                                {
                                    dialog.Text("Select which item's details you want to +15?, remember it will coast you " + Database.rates.plus15 + " Cps");
                                    dialog.Option("Headgear.", 44);
                                    dialog.Option("Necklace.", 45);
                                    dialog.Option("Armor.", 46);
                                    dialog.Option("Main Weapon.", 47);
                                    dialog.Option("Left Weapon/Shield.", 48);
                                    dialog.Option("Ring.", 49);
                                    dialog.Option("Boots.", 50);
                                    dialog.Option("I'll just leave", 255);
                                    break;
                                }
                            #region +13
                            #region boot
                            case 10:
                                {
                                    if (!client.Equipment.Free(8))
                                    {
                                        if (client.Equipment.TryGetItem(8).Plus == 12)
                                        {
                                            if (client.Entity.ConquerPoints >= Database.rates.plus13)
                                            {
                                                client.Entity.ConquerPoints -= Database.rates.plus13;
                                                client.Equipment.TryGetItem(8).Plus++;
                                                Database.ConquerItemTable.UpdatePlus(client.Equipment.TryGetItem(8));
                                                client.Equipment.TryGetItem(8).Mode = PhoenixProject.Game.Enums.ItemMode.Update;
                                                client.Equipment.TryGetItem(8).Send(client);
                                                dialog.Text("Congratulations, Your item is +13 now!");
                                                dialog.Option("Thanks.", 255);
                                            }
                                            else
                                            {
                                                dialog.Text("Sorry you dont have the Required amount of cps , i cant help you");
                                                dialog.Option("sorry.", 255);
                                            }
                                        }
                                        else
                                        {
                                            dialog.Text("sorry your Boot isnt +12 yet i cant help you");
                                            dialog.Option("sorry.", 255);
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("sorry you dont wear any Boot cant help you");
                                        dialog.Option("sorry.", 255);
                                    }
                                    break;
                                }
                            #endregion
                            #region Ring
                            case 9:
                                {
                                    if (!client.Equipment.Free(6))
                                    {
                                        if (client.Equipment.TryGetItem(6).Plus == 12)
                                        {
                                            if (client.Entity.ConquerPoints >= Database.rates.plus13)
                                            {
                                                client.Entity.ConquerPoints -= Database.rates.plus13;
                                                client.Equipment.TryGetItem(6).Plus++;
                                                Database.ConquerItemTable.UpdatePlus(client.Equipment.TryGetItem(6));
                                                client.Equipment.TryGetItem(6).Mode = PhoenixProject.Game.Enums.ItemMode.Update;
                                                client.Equipment.TryGetItem(6).Send(client);
                                                dialog.Text("Congratulations, Your item is +13 now!");
                                                dialog.Option("Thanks.", 255);
                                            }
                                            else
                                            {
                                                dialog.Text("Sorry you dont have the Required amount of cps , i cant help you");
                                                dialog.Option("sorry.", 255);
                                            }
                                        }
                                        else
                                        {
                                            dialog.Text("sorry your Ring/Bracelet isnt +12 yet i cant help you");
                                            dialog.Option("sorry.", 255);
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("sorry you dont wear any Rings/Bracelet cant help you");
                                        dialog.Option("sorry.", 255);
                                    }
                                    break;
                                }
                            #endregion
                            #region LeftWeapons
                            case 8:
                                {
                                    if (!client.Equipment.Free(5))
                                    {
                                        if (client.Equipment.TryGetItem(5).Plus == 12)
                                        {
                                            if (client.Entity.ConquerPoints >= Database.rates.plus13)
                                            {
                                                client.Entity.ConquerPoints -= Database.rates.plus13;
                                                client.Equipment.TryGetItem(5).Plus++;
                                                Database.ConquerItemTable.UpdatePlus(client.Equipment.TryGetItem(5));
                                                client.Equipment.TryGetItem(5).Mode = PhoenixProject.Game.Enums.ItemMode.Update;
                                                client.Equipment.TryGetItem(5).Send(client);
                                                dialog.Text("Congratulations, Your item is +13 now!");
                                                dialog.Option("Thanks.", 255);
                                            }
                                            else
                                            {
                                                dialog.Text("Sorry you dont have the Required amount of cps , i cant help you");
                                                dialog.Option("sorry.", 255);
                                            }
                                        }
                                        else
                                        {
                                            dialog.Text("sorry your LeftWeapon isnt +12 yet i cant help you");
                                            dialog.Option("sorry.", 255);
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("sorry you dont wear any LeftWeapons cant help you");
                                        dialog.Option("sorry.", 255);
                                    }
                                    break;
                                }
                            #endregion
                            #region RightWeapon
                            case 7:
                                {
                                    if (!client.Equipment.Free(4))
                                    {
                                        if (client.Equipment.TryGetItem(4).Plus == 12)
                                        {
                                            if (client.Entity.ConquerPoints >= Database.rates.plus13)
                                            {
                                                client.Entity.ConquerPoints -= Database.rates.plus13;
                                                client.Equipment.TryGetItem(4).Plus++;
                                                Database.ConquerItemTable.UpdatePlus(client.Equipment.TryGetItem(4));
                                                client.Equipment.TryGetItem(4).Mode = PhoenixProject.Game.Enums.ItemMode.Update;
                                                client.Equipment.TryGetItem(4).Send(client);
                                                dialog.Text("Congratulations, Your item is +13 now!");
                                                dialog.Option("Thanks.", 255);
                                            }
                                            else
                                            {
                                                dialog.Text("Sorry you dont have the Required amount of cps , i cant help you");
                                                dialog.Option("sorry.", 255);
                                            }
                                        }
                                        else
                                        {
                                            dialog.Text("sorry your RightWeapon isnt +12 yet i cant help you");
                                            dialog.Option("sorry.", 255);
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("sorry you dont wear any RightWeapons cant help you");
                                        dialog.Option("sorry.", 255);
                                    }
                                    break;
                                }
                            #endregion
                            #region Armor
                            case 6:
                                {
                                    if (!client.Equipment.Free(3))
                                    {
                                        if (client.Equipment.TryGetItem(3).Plus == 12)
                                        {
                                            if (client.Entity.ConquerPoints >= Database.rates.plus13)
                                            {
                                                client.Entity.ConquerPoints -= Database.rates.plus13;
                                                client.Equipment.TryGetItem(3).Plus++;
                                                Database.ConquerItemTable.UpdatePlus(client.Equipment.TryGetItem(3));
                                                client.Equipment.TryGetItem(3).Mode = PhoenixProject.Game.Enums.ItemMode.Update;
                                                client.Equipment.TryGetItem(3).Send(client);
                                                dialog.Text("Congratulations, Your item is +13 now!");
                                                dialog.Option("Thanks.", 255);
                                            }
                                            else
                                            {
                                                dialog.Text("Sorry you dont have the Required amount of cps , i cant help you");
                                                dialog.Option("sorry.", 255);
                                            }
                                        }
                                        else
                                        {
                                            dialog.Text("sorry your Armor isnt +12 yet i cant help you");
                                            dialog.Option("sorry.", 255);
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("sorry you dont wear any Armor cant help you");
                                        dialog.Option("sorry.", 255);
                                    }
                                    break;
                                }
                            #endregion
                            #region Necklace
                            case 5:
                                {
                                    if (!client.Equipment.Free(2))
                                    {
                                        if (client.Equipment.TryGetItem(2).Plus == 12)
                                        {
                                            if (client.Entity.ConquerPoints >= Database.rates.plus13)
                                            {
                                                client.Entity.ConquerPoints -= Database.rates.plus13;
                                                client.Equipment.TryGetItem(2).Plus++;
                                                Database.ConquerItemTable.UpdatePlus(client.Equipment.TryGetItem(2));
                                                client.Equipment.TryGetItem(2).Mode = PhoenixProject.Game.Enums.ItemMode.Update;
                                                client.Equipment.TryGetItem(2).Send(client);
                                                dialog.Text("Congratulations, Your item is +13 now!");
                                                dialog.Option("Thanks.", 255);
                                            }
                                            else
                                            {
                                                dialog.Text("Sorry you dont have the Required amount of cps , i cant help you");
                                                dialog.Option("sorry.", 255);
                                            }
                                        }
                                        else
                                        {
                                            dialog.Text("sorry your Necklace isnt +12 yet i cant help you");
                                            dialog.Option("sorry.", 255);
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("sorry you dont wear any Necklace cant help you");
                                        dialog.Option("sorry.", 255);
                                    }
                                    break;
                                }
                            #endregion
                            #region HeadGear
                            case 4:
                                {
                                    if (!client.Equipment.Free(1))
                                    {
                                        if (client.Equipment.TryGetItem(1).Plus == 12)
                                        {
                                            if (client.Entity.ConquerPoints >= Database.rates.plus13)
                                            {
                                                client.Entity.ConquerPoints -= Database.rates.plus13;
                                                client.Equipment.TryGetItem(1).Plus++;
                                                Database.ConquerItemTable.UpdatePlus(client.Equipment.TryGetItem(1));
                                                client.Equipment.TryGetItem(1).Mode = PhoenixProject.Game.Enums.ItemMode.Update;
                                                client.Equipment.TryGetItem(1).Send(client);
                                                dialog.Text("Congratulations, Your item is +13 now!");
                                                dialog.Option("Thanks.", 255);
                                            }
                                            else
                                            {
                                                dialog.Text("Sorry you dont have the Required amount of cps , i cant help you");
                                                dialog.Option("sorry.", 255);
                                            }
                                        }
                                        else
                                        {
                                            dialog.Text("sorry your Headgear isnt +12 yet i cant help you");
                                            dialog.Option("sorry.", 255);
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("sorry you dont wear any HeadGear cant help you");
                                        dialog.Option("sorry.", 255);
                                    }
                                    break;
                                }
                            #endregion
                            #endregion
                            #region +14
                            #region boot
                            case 30:
                                {
                                    if (!client.Equipment.Free(8))
                                    {
                                        if (client.Equipment.TryGetItem(8).Plus == 13)
                                        {
                                            if (client.Entity.ConquerPoints >= Database.rates.plus14)
                                            {
                                                client.Entity.ConquerPoints -= Database.rates.plus14;
                                                client.Equipment.TryGetItem(8).Plus++;
                                                Database.ConquerItemTable.UpdatePlus(client.Equipment.TryGetItem(8));
                                                client.Equipment.TryGetItem(8).Mode = PhoenixProject.Game.Enums.ItemMode.Update;
                                                client.Equipment.TryGetItem(8).Send(client);
                                                dialog.Text("Congratulations, Your item is +14 now!");
                                                dialog.Option("Thanks.", 255);
                                            }
                                            else
                                            {
                                                dialog.Text("Sorry you dont have the Required amount of cps , i cant help you");
                                                dialog.Option("sorry.", 255);
                                            }
                                        }
                                        else
                                        {
                                            dialog.Text("sorry your Boot isnt +13 i cant help you");
                                            dialog.Option("sorry.", 255);
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("sorry you dont wear any Boot cant help you");
                                        dialog.Option("sorry.", 255);
                                    }
                                    break;
                                }
                            #endregion
                            #region Ring
                            case 29:
                                {
                                    if (!client.Equipment.Free(6))
                                    {
                                        if (client.Equipment.TryGetItem(6).Plus == 13)
                                        {
                                            if (client.Entity.ConquerPoints >= Database.rates.plus14)
                                            {
                                                client.Entity.ConquerPoints -= Database.rates.plus14;
                                                client.Equipment.TryGetItem(6).Plus++;
                                                Database.ConquerItemTable.UpdatePlus(client.Equipment.TryGetItem(6));
                                                client.Equipment.TryGetItem(6).Mode = PhoenixProject.Game.Enums.ItemMode.Update;
                                                client.Equipment.TryGetItem(6).Send(client);
                                                dialog.Text("Congratulations, Your item is +14 now!");
                                                dialog.Option("Thanks.", 255);
                                            }
                                            else
                                            {
                                                dialog.Text("Sorry you dont have the Required amount of cps , i cant help you");
                                                dialog.Option("sorry.", 255);
                                            }
                                        }
                                        else
                                        {
                                            dialog.Text("sorry your Ring/Bracelet isnt +13 i cant help you");
                                            dialog.Option("sorry.", 255);
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("sorry you dont wear any Rings/Bracelet cant help you");
                                        dialog.Option("sorry.", 255);
                                    }
                                    break;
                                }
                            #endregion
                            #region LeftWeapons
                            case 28:
                                {
                                    if (!client.Equipment.Free(5))
                                    {
                                        if (client.Equipment.TryGetItem(5).Plus == 13)
                                        {
                                            if (client.Entity.ConquerPoints >= Database.rates.plus14)
                                            {
                                                client.Entity.ConquerPoints -= Database.rates.plus14;
                                                client.Equipment.TryGetItem(5).Plus++;
                                                Database.ConquerItemTable.UpdatePlus(client.Equipment.TryGetItem(5));
                                                client.Equipment.TryGetItem(5).Mode = PhoenixProject.Game.Enums.ItemMode.Update;
                                                client.Equipment.TryGetItem(5).Send(client);
                                                dialog.Text("Congratulations, Your item is +14 now!");
                                                dialog.Option("Thanks.", 255);
                                            }
                                            else
                                            {
                                                dialog.Text("Sorry you dont have the Required amount of cps , i cant help you");
                                                dialog.Option("sorry.", 255);
                                            }
                                        }
                                        else
                                        {
                                            dialog.Text("sorry your LeftWeapon isnt +13 i cant help you");
                                            dialog.Option("sorry.", 255);
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("sorry you dont wear any LeftWeapons cant help you");
                                        dialog.Option("sorry.", 255);
                                    }
                                    break;
                                }
                            #endregion
                            #region RightWeapon
                            case 27:
                                {
                                    if (!client.Equipment.Free(4))
                                    {
                                        if (client.Equipment.TryGetItem(4).Plus == 13)
                                        {
                                            if (client.Entity.ConquerPoints >= Database.rates.plus14)
                                            {
                                                client.Entity.ConquerPoints -= Database.rates.plus14;
                                                client.Equipment.TryGetItem(4).Plus++;
                                                Database.ConquerItemTable.UpdatePlus(client.Equipment.TryGetItem(4));
                                                client.Equipment.TryGetItem(4).Mode = PhoenixProject.Game.Enums.ItemMode.Update;
                                                client.Equipment.TryGetItem(4).Send(client);
                                                dialog.Text("Congratulations, Your item is +14 now!");
                                                dialog.Option("Thanks.", 255);
                                            }
                                            else
                                            {
                                                dialog.Text("Sorry you dont have the Required amount of cps , i cant help you");
                                                dialog.Option("sorry.", 255);
                                            }
                                        }
                                        else
                                        {
                                            dialog.Text("sorry your RightWeapon isnt +13 i cant help you");
                                            dialog.Option("sorry.", 255);
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("sorry you dont wear any RightWeapons cant help you");
                                        dialog.Option("sorry.", 255);
                                    }
                                    break;
                                }
                            #endregion
                            #region Armor
                            case 26:
                                {
                                    if (!client.Equipment.Free(3))
                                    {
                                        if (client.Equipment.TryGetItem(3).Plus == 13)
                                        {
                                            if (client.Entity.ConquerPoints >= Database.rates.plus14)
                                            {
                                                client.Entity.ConquerPoints -= Database.rates.plus14;
                                                client.Equipment.TryGetItem(3).Plus++;
                                                Database.ConquerItemTable.UpdatePlus(client.Equipment.TryGetItem(3));
                                                client.Equipment.TryGetItem(3).Mode = PhoenixProject.Game.Enums.ItemMode.Update;
                                                client.Equipment.TryGetItem(3).Send(client);
                                                dialog.Text("Congratulations, Your item is +14 now!");
                                                dialog.Option("Thanks.", 255);
                                            }
                                            else
                                            {
                                                dialog.Text("Sorry you dont have the Required amount of cps , i cant help you");
                                                dialog.Option("sorry.", 255);
                                            }
                                        }
                                        else
                                        {
                                            dialog.Text("sorry your Armor isnt +13 i cant help you");
                                            dialog.Option("sorry.", 255);
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("sorry you dont wear any Armor cant help you");
                                        dialog.Option("sorry.", 255);
                                    }
                                    break;
                                }
                            #endregion
                            #region Necklace
                            case 25:
                                {
                                    if (!client.Equipment.Free(2))
                                    {
                                        if (client.Equipment.TryGetItem(2).Plus == 13)
                                        {
                                            if (client.Entity.ConquerPoints >= Database.rates.plus14)
                                            {
                                                client.Entity.ConquerPoints -= Database.rates.plus14;
                                                client.Equipment.TryGetItem(2).Plus++;
                                                Database.ConquerItemTable.UpdatePlus(client.Equipment.TryGetItem(2));
                                                client.Equipment.TryGetItem(2).Mode = PhoenixProject.Game.Enums.ItemMode.Update;
                                                client.Equipment.TryGetItem(2).Send(client);
                                                dialog.Text("Congratulations, Your item is +14 now!");
                                                dialog.Option("Thanks.", 255);
                                            }
                                            else
                                            {
                                                dialog.Text("Sorry you dont have the Required amount of cps , i cant help you");
                                                dialog.Option("sorry.", 255);
                                            }
                                        }
                                        else
                                        {
                                            dialog.Text("sorry your Necklace isnt +13 i cant help you");
                                            dialog.Option("sorry.", 255);
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("sorry you dont wear any Necklace cant help you");
                                        dialog.Option("sorry.", 255);
                                    }
                                    break;
                                }
                            #endregion
                            #region HeadGear
                            case 24:
                                {
                                    if (!client.Equipment.Free(1))
                                    {
                                        if (client.Equipment.TryGetItem(1).Plus == 13)
                                        {
                                            if (client.Entity.ConquerPoints >= Database.rates.plus14)
                                            {
                                                client.Entity.ConquerPoints -= Database.rates.plus14;
                                                client.Equipment.TryGetItem(1).Plus++;
                                                Database.ConquerItemTable.UpdatePlus(client.Equipment.TryGetItem(1));
                                                client.Equipment.TryGetItem(1).Mode = PhoenixProject.Game.Enums.ItemMode.Update;
                                                client.Equipment.TryGetItem(1).Send(client);
                                                dialog.Text("Congratulations, Your item is +14 now!");
                                                dialog.Option("Thanks.", 255);
                                            }
                                            else
                                            {
                                                dialog.Text("Sorry you dont have the Required amount of cps , i cant help you");
                                                dialog.Option("sorry.", 255);
                                            }
                                        }
                                        else
                                        {
                                            dialog.Text("sorry your Headgear isnt +13 i cant help you");
                                            dialog.Option("sorry.", 255);
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("sorry you dont wear any HeadGear cant help you");
                                        dialog.Option("sorry.", 255);
                                    }
                                    break;
                                }
                            #endregion
                            #endregion
                            #region +15
                            #region boot
                            case 50:
                                {
                                    if (!client.Equipment.Free(8))
                                    {
                                        if (client.Equipment.TryGetItem(8).Plus == 14)
                                        {
                                            if (client.Entity.ConquerPoints >= Database.rates.plus15)
                                            {
                                                client.Entity.ConquerPoints -= Database.rates.plus15;
                                                client.Equipment.TryGetItem(8).Plus++;
                                                Database.ConquerItemTable.UpdatePlus(client.Equipment.TryGetItem(8));
                                                client.Equipment.TryGetItem(8).Mode = PhoenixProject.Game.Enums.ItemMode.Update;
                                                client.Equipment.TryGetItem(8).Send(client);
                                                dialog.Text("Congratulations, Your item is +15 now!");
                                                dialog.Option("Thanks.", 255);
                                            }
                                            else
                                            {
                                                dialog.Text("Sorry you dont have the Required amount of cps , i cant help you");
                                                dialog.Option("Sorry.", 255);
                                            }
                                        }
                                        else
                                        {
                                            dialog.Text("Sorry your Boot isnt +14, i cant help you");
                                            dialog.Option("Sorry.", 255);
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry you dont wear any Boots, cant help you");
                                        dialog.Option("Sorry.", 255);
                                    }
                                    break;
                                }
                            #endregion
                            #region Ring
                            case 49:
                                {
                                    if (!client.Equipment.Free(6))
                                    {
                                        if (client.Equipment.TryGetItem(6).Plus == 14)
                                        {
                                            if (client.Entity.ConquerPoints >= Database.rates.plus15)
                                            {
                                                client.Entity.ConquerPoints -= Database.rates.plus15;
                                                client.Equipment.TryGetItem(6).Plus++;
                                                Database.ConquerItemTable.UpdatePlus(client.Equipment.TryGetItem(6));
                                                client.Equipment.TryGetItem(6).Mode = PhoenixProject.Game.Enums.ItemMode.Update;
                                                client.Equipment.TryGetItem(6).Send(client);
                                                dialog.Text("Congratulations, Your item is +15 now!");
                                                dialog.Option("Thanks.", 255);
                                            }
                                            else
                                            {
                                                dialog.Text("Sorry you dont have the Required amount of cps , i cant help you");
                                                dialog.Option("Sorry.", 255);
                                            }
                                        }
                                        else
                                        {
                                            dialog.Text("Sorry your Ring/Bracelet isnt +14, i cant help you");
                                            dialog.Option("Sorry.", 255);
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry you dont wear any Rings/Bracelets, cant help you");
                                        dialog.Option("Sorry.", 255);
                                    }
                                    break;
                                }
                            #endregion
                            #region LeftWeapons
                            case 48:
                                {
                                    if (!client.Equipment.Free(5))
                                    {
                                        if (client.Equipment.TryGetItem(5).Plus == 14)
                                        {
                                            if (client.Entity.ConquerPoints >= Database.rates.plus15)
                                            {
                                                client.Entity.ConquerPoints -= Database.rates.plus15;
                                                client.Equipment.TryGetItem(5).Plus++;
                                                Database.ConquerItemTable.UpdatePlus(client.Equipment.TryGetItem(5));
                                                client.Equipment.TryGetItem(5).Mode = PhoenixProject.Game.Enums.ItemMode.Update;
                                                client.Equipment.TryGetItem(5).Send(client);
                                                dialog.Text("Congratulations, Your item is +15 now!");
                                                dialog.Option("Thanks.", 255);
                                            }
                                            else
                                            {
                                                dialog.Text("Sorry you dont have the Required amount of cps , i cant help you");
                                                dialog.Option("Sorry.", 255);
                                            }
                                        }
                                        else
                                        {
                                            dialog.Text("Sorry your LeftWeapon isnt +14, i cant help you");
                                            dialog.Option("Sorry.", 255);
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry you dont wear any LeftWeapons, cant help you");
                                        dialog.Option("Sorry.", 255);
                                    }
                                    break;
                                }
                            #endregion
                            #region RightWeapon
                            case 47:
                                {
                                    if (!client.Equipment.Free(4))
                                    {
                                        if (client.Equipment.TryGetItem(4).Plus == 14)
                                        {
                                            if (client.Entity.ConquerPoints >= Database.rates.plus15)
                                            {
                                                client.Entity.ConquerPoints -= Database.rates.plus15;
                                                client.Equipment.TryGetItem(4).Plus++;
                                                Database.ConquerItemTable.UpdatePlus(client.Equipment.TryGetItem(4));
                                                client.Equipment.TryGetItem(4).Mode = PhoenixProject.Game.Enums.ItemMode.Update;
                                                client.Equipment.TryGetItem(4).Send(client);
                                                dialog.Text("Congratulations, Your item is +15 now!");
                                                dialog.Option("Thanks.", 255);
                                            }
                                            else
                                            {
                                                dialog.Text("Sorry you dont have the Required amount of cps , i cant help you");
                                                dialog.Option("Sorry.", 255);
                                            }
                                        }
                                        else
                                        {
                                            dialog.Text("Sorry your RightWeapon isnt +14, i cant help you");
                                            dialog.Option("Sorry.", 255);
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry you dont wear any RightWeapons, cant help you");
                                        dialog.Option("Sorry.", 255);
                                    }
                                    break;
                                }
                            #endregion
                            #region Armor
                            case 46:
                                {
                                    if (!client.Equipment.Free(3))
                                    {
                                        if (client.Equipment.TryGetItem(3).Plus == 14)
                                        {
                                            if (client.Entity.ConquerPoints >= Database.rates.plus15)
                                            {
                                                client.Entity.ConquerPoints -= Database.rates.plus15;
                                                client.Equipment.TryGetItem(3).Plus++;
                                                Database.ConquerItemTable.UpdatePlus(client.Equipment.TryGetItem(3));
                                                client.Equipment.TryGetItem(3).Mode = PhoenixProject.Game.Enums.ItemMode.Update;
                                                client.Equipment.TryGetItem(3).Send(client);
                                                dialog.Text("Congratulations, Your item is +15 now!");
                                                dialog.Option("Thanks.", 255);
                                            }
                                            else
                                            {
                                                dialog.Text("Sorry you dont have the Required amount of cps , i cant help you");
                                                dialog.Option("Sorry.", 255);
                                            }
                                        }
                                        else
                                        {
                                            dialog.Text("Sorry your Armor isnt +14, i cant help you");
                                            dialog.Option("Sorry.", 255);
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry you dont wear any Armors, cant help you");
                                        dialog.Option("Sorry.", 255);
                                    }
                                    break;
                                }
                            #endregion
                            #region Necklace
                            case 45:
                                {
                                    if (!client.Equipment.Free(2))
                                    {
                                        if (client.Equipment.TryGetItem(2).Plus == 14)
                                        {
                                            if (client.Entity.ConquerPoints >= Database.rates.plus15)
                                            {
                                                client.Entity.ConquerPoints -= Database.rates.plus15;
                                                client.Equipment.TryGetItem(2).Plus++;
                                                Database.ConquerItemTable.UpdatePlus(client.Equipment.TryGetItem(2));
                                                client.Equipment.TryGetItem(2).Mode = PhoenixProject.Game.Enums.ItemMode.Update;
                                                client.Equipment.TryGetItem(2).Send(client);
                                                dialog.Text("Congratulations, Your item is +15 now!");
                                                dialog.Option("Thanks.", 255);
                                            }
                                            else
                                            {
                                                dialog.Text("Sorry you dont have the Required amount of cps , i cant help you");
                                                dialog.Option("Sorry.", 255);
                                            }
                                        }
                                        else
                                        {
                                            dialog.Text("Sorry your Necklace isnt +14, i cant help you");
                                            dialog.Option("Sorry.", 255);
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry you dont wear any Necklace, cant help you");
                                        dialog.Option("Sorry.", 255);
                                    }
                                    break;
                                }
                            #endregion
                            #region HeadGear
                            case 44:
                                {
                                    if (!client.Equipment.Free(1))
                                    {
                                        if (client.Equipment.TryGetItem(1).Plus == 14)
                                        {
                                            if (client.Entity.ConquerPoints >= Database.rates.plus15)
                                            {
                                                client.Entity.ConquerPoints -= Database.rates.plus15;
                                                client.Equipment.TryGetItem(1).Plus++;
                                                Database.ConquerItemTable.UpdatePlus(client.Equipment.TryGetItem(1));
                                                client.Equipment.TryGetItem(1).Mode = PhoenixProject.Game.Enums.ItemMode.Update;
                                                client.Equipment.TryGetItem(1).Send(client);
                                                dialog.Text("Congratulations, Your item is +15 now!");
                                                dialog.Option("Thanks.", 255);
                                            }
                                            else
                                            {
                                                dialog.Text("Sorry you dont have the Required amount of cps , i cant help you");
                                                dialog.Option("Sorry.", 255);
                                            }
                                        }
                                        else
                                        {
                                            dialog.Text("Sorry your Headgear isnt +14, i cant help you");
                                            dialog.Option("Sorry.", 255);
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry you dont wear any HeadGears, cant help you");
                                        dialog.Option("Sorry.", 255);
                                    }
                                    break;
                                }
                            #endregion
                            #endregion

                        }
                        break;
                    }
                #endregion
                #region ClassPkEscort
                #region ClassPkEscort
                case 706:
                case 4500:
                case 4501:
                case 4502:
                case 4503:
                case 4504:
                case 4505:
                case 4506:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    PhoenixProject.Game.ConquerStructures.ClassPk.CheackAlive(client.Entity.MapID);
                                    dialog.Text("Hello there,do you want to claim ClassPk Prize you must be the only one Here to Claim It.");
                                    dialog.Option("ClaimPrize.", 1);
                                    dialog.Option("Just Passing By!", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    if (PhoenixProject.Game.ConquerStructures.ClassPk.howmanyinmap == 1)
                                    {
                                        dialog.Text("would you like to Claim the prize for ClassPk Tourment?");
                                        dialog.Option("yes,please.", 2);
                                        dialog.Option("Wait a minute.", 255);
                                        dialog.Send();
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry you must be the only one in the Map to claim the Prize");
                                        dialog.Option("oh,Sorry.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 2:
                                {
                                    if (client.Entity.Class >= 10 && client.Entity.Class <= 15 && DateTime.Now.Minute >= 05 && DateTime.Now.Minute <= 59 && DateTime.Now.Hour >= Game.KimoEvents.ClassHour && DateTime.Now.Hour < Game.KimoEvents.ClassEndHour)
                                    {
                                        dialog.Text("You have won Trojan ClassPk would You like to ClaimPrize and Back to TwinCity?");
                                        dialog.Option("Gimme My Prize.", 3);
                                        dialog.Send();
                                    }
                                    else if (client.Entity.Class >= 20 && client.Entity.Class <= 25 && DateTime.Now.Minute >= 05 && DateTime.Now.Minute <= 59 && DateTime.Now.Hour >= Game.KimoEvents.ClassHour && DateTime.Now.Hour < Game.KimoEvents.ClassEndHour)
                                    {
                                        dialog.Text("You have won Warrior ClassPk would You like to ClaimPrize and Back to TwinCity?");
                                        dialog.Option("Gimme My Prize.", 4);
                                        dialog.Send();
                                    }
                                    else if (client.Entity.Class >= 40 && client.Entity.Class <= 45 && DateTime.Now.Minute >= 05 && DateTime.Now.Minute <= 59 && DateTime.Now.Hour >= Game.KimoEvents.ClassHour && DateTime.Now.Hour < Game.KimoEvents.ClassEndHour)
                                    {
                                        dialog.Text("You have won Archer ClassPk would You like to ClaimPrize and Back to TwinCity?");
                                        dialog.Option("Gimme My Prize.", 5);
                                        dialog.Send();
                                    }
                                    else if (client.Entity.Class >= 50 && client.Entity.Class <= 55 && DateTime.Now.Minute >= 05 && DateTime.Now.Minute <= 59 && DateTime.Now.Hour >= Game.KimoEvents.ClassHour && DateTime.Now.Hour < Game.KimoEvents.ClassEndHour)
                                    {
                                        dialog.Text("You have won Ninja ClassPk would You like to ClaimPrize and Back to TwinCity?");
                                        dialog.Option("Gimme My Prize.", 6);
                                        dialog.Send();
                                    }
                                    else if (client.Entity.Class >= 60 && client.Entity.Class <= 65 && DateTime.Now.Minute >= 05 && DateTime.Now.Minute <= 59 && DateTime.Now.Hour >= Game.KimoEvents.ClassHour && DateTime.Now.Hour < Game.KimoEvents.ClassEndHour)
                                    {
                                        dialog.Text("You have won Monk ClassPk would You like to ClaimPrize and Back to TwinCity?");
                                        dialog.Option("Gimme My Prize.", 7);
                                        dialog.Send();
                                    }
                                    else if (client.Entity.Class >= 130 && client.Entity.Class <= 135 && DateTime.Now.Minute >= 05 && DateTime.Now.Minute <= 59 && DateTime.Now.Hour >= Game.KimoEvents.ClassHour && DateTime.Now.Hour < Game.KimoEvents.ClassEndHour)
                                    {
                                        dialog.Text("You have won Water ClassPk would You like to ClaimPrize and Back to TwinCity?");
                                        dialog.Option("Gimme My Prize.", 8);
                                        dialog.Send();
                                    }
                                    else if (client.Entity.Class >= 140 && client.Entity.Class <= 145 && DateTime.Now.Minute >= 05 && DateTime.Now.Minute <= 59 && DateTime.Now.Hour >= Game.KimoEvents.ClassHour && DateTime.Now.Hour < Game.KimoEvents.ClassEndHour)
                                    {
                                        dialog.Text("You have won Fire ClassPk would You like to ClaimPrize and Back to TwinCity?");
                                        dialog.Option("Gimme My Prize.", 9);
                                        dialog.Send();
                                    }
                                    else if (client.Entity.Class >= 70 && client.Entity.Class <= 75 && DateTime.Now.Minute >= 05 && DateTime.Now.Minute <= 59 && DateTime.Now.Hour >= Game.KimoEvents.ClassHour && DateTime.Now.Hour < Game.KimoEvents.ClassEndHour)
                                    {
                                        dialog.Text("You have won Pirates ClassPk would You like to ClaimPrize and Back to TwinCity?");
                                        dialog.Option("Gimme My Prize.", 10);
                                        dialog.Send();
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry you can claim the Prize Btween " + Game.KimoEvents.ClassHour + ":05 to " + Game.KimoEvents.ClassHour + ":59 and must be the only Alive player Here");
                                        dialog.Option("ok Sorry.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 3:
                                {
                                    PhoenixProject.Game.ConquerStructures.ClassPk.ClassPks = false;
                                    client.Entity.Teleport(1002, 439, 387);
                                    client.Entity.ConquerPoints += PhoenixProject.Database.rates.classpk;
                                    Game.Flags.AddTopTrojan(client);
                                    client.Entity.AddFlag(PhoenixProject.Network.GamePackets.Update.Flags.TopTrojan);
                                    PhoenixProject.ServerBase.Kernel.SendWorldMessage(new Message("Congratulations, " + client.Entity.Name + " has won TrojanPk War and  Claimed " + PhoenixProject.Database.rates.classpk + " cps!", System.Drawing.Color.White, Message.TopLeft), PhoenixProject.ServerBase.Kernel.GamePool.Values);
                                    break;
                                }
                            case 4:
                                {
                                    PhoenixProject.Game.ConquerStructures.ClassPk.ClassPks = false;
                                    client.Entity.Teleport(1002, 439, 387);
                                    client.Entity.ConquerPoints += PhoenixProject.Database.rates.classpk;
                                    Game.Flags.AddTopWarrior(client);
                                    client.Entity.AddFlag(PhoenixProject.Network.GamePackets.Update.Flags.TopWarrior);
                                    PhoenixProject.ServerBase.Kernel.SendWorldMessage(new Message("Congratulations, " + client.Entity.Name + " has won WarriorPk War and  Claimed " + PhoenixProject.Database.rates.classpk + " cps!", System.Drawing.Color.White, Message.TopLeft), PhoenixProject.ServerBase.Kernel.GamePool.Values);
                                    break;
                                }
                            case 5:
                                {
                                    PhoenixProject.Game.ConquerStructures.ClassPk.ClassPks = false;
                                    client.Entity.Teleport(1002, 439, 387);
                                    client.Entity.ConquerPoints += PhoenixProject.Database.rates.classpk;
                                    Game.Flags.AddTopArcher(client);
                                    client.Entity.AddFlag(PhoenixProject.Network.GamePackets.Update.Flags.TopArcher);
                                    PhoenixProject.ServerBase.Kernel.SendWorldMessage(new Message("Congratulations, " + client.Entity.Name + " has won ArcherPk War and  Claimed " + PhoenixProject.Database.rates.classpk + " cps!", System.Drawing.Color.White, Message.TopLeft), PhoenixProject.ServerBase.Kernel.GamePool.Values);
                                    break;
                                }
                            case 6:
                                {
                                    PhoenixProject.Game.ConquerStructures.ClassPk.ClassPks = false;
                                    client.Entity.Teleport(1002, 439, 387);
                                    client.Entity.ConquerPoints += PhoenixProject.Database.rates.classpk;
                                    Game.Flags.AddTopNinja(client);
                                    client.Entity.AddFlag(PhoenixProject.Network.GamePackets.Update.Flags.TopNinja);
                                    PhoenixProject.ServerBase.Kernel.SendWorldMessage(new Message("Congratulations, " + client.Entity.Name + " has won NinjaPk War and  Claimed " + PhoenixProject.Database.rates.classpk + " cps!", System.Drawing.Color.White, Message.TopLeft), PhoenixProject.ServerBase.Kernel.GamePool.Values);
                                    break;
                                }
                            case 7:
                                {
                                    PhoenixProject.Game.ConquerStructures.ClassPk.ClassPks = false;
                                    client.Entity.Teleport(1002, 439, 387);
                                    client.Entity.ConquerPoints += PhoenixProject.Database.rates.classpk;
                                    Game.Flags.AddTopMonk(client);
                                    client.Entity.AddFlag(PhoenixProject.Network.GamePackets.Update.Flags.TopMonk);
                                    PhoenixProject.ServerBase.Kernel.SendWorldMessage(new Message("Congratulations, " + client.Entity.Name + " has won MonkPk War and  Claimed " + PhoenixProject.Database.rates.classpk + " cps!", System.Drawing.Color.White, Message.TopLeft), PhoenixProject.ServerBase.Kernel.GamePool.Values);
                                    break;
                                }
                            case 8:
                                {
                                    PhoenixProject.Game.ConquerStructures.ClassPk.ClassPks = false;
                                    client.Entity.Teleport(1002, 439, 387);
                                    client.Entity.ConquerPoints += PhoenixProject.Database.rates.classpk;
                                    Game.Flags.AddTopWater(client);
                                    client.Entity.AddFlag(PhoenixProject.Network.GamePackets.Update.Flags.TopWaterTaoist);
                                    PhoenixProject.ServerBase.Kernel.SendWorldMessage(new Message("Congratulations, " + client.Entity.Name + " has won WaterTao Pk War and  Claimed " + PhoenixProject.Database.rates.classpk + " cps!", System.Drawing.Color.White, Message.TopLeft), PhoenixProject.ServerBase.Kernel.GamePool.Values);
                                    break;
                                }
                            case 9:
                                {
                                    PhoenixProject.Game.ConquerStructures.ClassPk.ClassPks = false;
                                    client.Entity.Teleport(1002, 439, 387);
                                    client.Entity.ConquerPoints += PhoenixProject.Database.rates.classpk;
                                    Game.Flags.AddTopFire(client);
                                    client.Entity.AddFlag(PhoenixProject.Network.GamePackets.Update.Flags.TopFireTaoist);
                                    PhoenixProject.ServerBase.Kernel.SendWorldMessage(new Message("Congratulations, " + client.Entity.Name + " has won FireTao Pk War and  Claimed " + PhoenixProject.Database.rates.classpk + " cps!", System.Drawing.Color.White, Message.TopLeft), PhoenixProject.ServerBase.Kernel.GamePool.Values);
                                    break;
                                }
                            case 10:
                                {
                                    PhoenixProject.Game.ConquerStructures.ClassPk.ClassPks = false;
                                    client.Entity.Teleport(1002, 439, 387);
                                    client.Entity.ConquerPoints += PhoenixProject.Database.rates.classpk;
                                    Game.Flags.AddTopPirate(client);
                                    client.Entity.AddFlag2(PhoenixProject.Network.GamePackets.Update.Flags2.TopPirate);
                                    PhoenixProject.ServerBase.Kernel.SendWorldMessage(new Message("Congratulations, " + client.Entity.Name + " has won TopPirate Pk War and  Claimed " + PhoenixProject.Database.rates.classpk + " cps!", System.Drawing.Color.White, Message.TopLeft), PhoenixProject.ServerBase.Kernel.GamePool.Values);
                                    break;
                                }

                        }
                        break;
                    }
                #endregion
                #endregion
                #region SpecialGarments-Deer Npc
                case 442566://and this id
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    //800254 SufferingScythe ninja soul wep
                                    //800804 TimePistol 
                                    //800809 DestinyRapier
                                    //
                                    dialog.Text("hello, i can help you to Buy new Special Garment and MountDeer and souls  for " + Database.rates.Garment + " Cps");
                                    dialog.Text("and new flowers for 5k cps choose what you want to buy?");
                                    dialog.Option("NewGarments.", 1);//200418
                                    dialog.Option("NewDeer", 2);
                                    dialog.Option("Pirate[P6] WeaponSoul", 20);
                                    dialog.Option("Ninja[P6] WeaponSoul", 40);
                                    dialog.Option("NewFlowers", 50);
                                    dialog.Option("Just Passing By!", 0);
                                    dialog.Send();
                                    break;
                                }
                            case 50:
                                {
                                    dialog.Text("hello, i can help you to Buy new Special Flowers that u can send for Male Charchter you must be female to send it");
                                    dialog.Text(" it coast 5k cps each, choose what you want to buy?");
                                    dialog.Option("999Jades.", 51);//758999 999Jades
                                    dialog.Option("999TinsOfBeer", 52);//757999 999TinsOfBeer
                                    dialog.Option("999LoveLetters.", 53);//999LoveLetters  756999 
                                    dialog.Option("999Kisses.", 54);//999Kisses  755999
                                    dialog.Send();
                                    break;
                                }
                            case 54:
                                {
                                    if (client.Entity.ConquerPoints >= 5000)
                                    {
                                        if (client.Entity.ConquerPoints >= 5000)
                                        {
                                            client.Entity.ConquerPoints -= 5000;
                                            client.Inventory.Add(755999, 0, 1);
                                            dialog.Text("Congratulations you got 999Kisses");
                                            dialog.Option("Thanks.", 255);
                                            dialog.Send();
                                        }
                                        else
                                        {
                                            dialog.Text("Please come back to me with 5000 Conquer Points.");
                                            dialog.Option("Ahh sorry.", 255);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Please come back to me with 5000 Conquer Points..");
                                        dialog.Option("Ahh sorry.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 53:
                                {
                                    if (client.Entity.ConquerPoints >= 5000)
                                    {
                                        if (client.Entity.ConquerPoints >= 5000)
                                        {
                                            client.Entity.ConquerPoints -= 5000;
                                            client.Inventory.Add(756999, 0, 1);
                                            dialog.Text("Congratulations you got 999LoveLetters");
                                            dialog.Option("Thanks.", 255);
                                            dialog.Send();
                                        }
                                        else
                                        {
                                            dialog.Text("Please come back to me with 5000 Conquer Points.");
                                            dialog.Option("Ahh sorry.", 255);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Please come back to me with 5000 Conquer Points..");
                                        dialog.Option("Ahh sorry.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 52:
                                {
                                    if (client.Entity.ConquerPoints >= 5000)
                                    {
                                        if (client.Entity.ConquerPoints >= 5000)
                                        {
                                            client.Entity.ConquerPoints -= 5000;
                                            client.Inventory.Add(757999, 0, 1);
                                            dialog.Text("Congratulations you got 999TinsOfBeer");
                                            dialog.Option("Thanks.", 255);
                                            dialog.Send();
                                        }
                                        else
                                        {
                                            dialog.Text("Please come back to me with 5000 Conquer Points.");
                                            dialog.Option("Ahh sorry.", 255);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Please come back to me with 5000 Conquer Points..");
                                        dialog.Option("Ahh sorry.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 51:
                                {
                                    if (client.Entity.ConquerPoints >= 5000)
                                    {
                                        if (client.Entity.ConquerPoints >= 5000)
                                        {
                                            client.Entity.ConquerPoints -= 5000;
                                            client.Inventory.Add(758999, 0, 1);
                                            dialog.Text("Congratulations you got 999Jades");
                                            dialog.Option("Thanks.", 255);
                                            dialog.Send();
                                        }
                                        else
                                        {
                                            dialog.Text("Please come back to me with 5000 Conquer Points.");
                                            dialog.Option("Ahh sorry.", 255);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Please come back to me with 5000 Conquer Points..");
                                        dialog.Option("Ahh sorry.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 40:
                                {
                                    dialog.Text("hello, i can help you to Buy new Special Ninja[P6] Weapon Soul for " + Database.rates.Garment + " Cps");
                                    dialog.Text(" choose what you want to buy?");
                                    dialog.Option("SufferingScythe[P6].", 41);//200421 SaintDragon
                                    dialog.Option("StealthKatana[P6]", 42);//200426 800017 

                                    dialog.Send();
                                    break;
                                }
                            case 41:
                                {
                                    if (client.Entity.ConquerPoints >= Database.rates.Garment)
                                    {
                                        if (client.Entity.ConquerPoints >= Database.rates.Garment)
                                        {
                                            client.Entity.ConquerPoints -= Database.rates.Garment;
                                            client.Inventory.Add(800254, 0, 1);
                                            dialog.Text("Congratulations you got new Special Ninja[P6] Weapon Soul");
                                            dialog.Option("Thanks.", 255);
                                            dialog.Send();
                                        }
                                        else
                                        {
                                            dialog.Text("Please come back to me with " + Database.rates.Garment + " Conquer Points.");
                                            dialog.Option("Ahh sorry.", 255);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Please come back to me with " + Database.rates.Garment + " Conquer Points..");
                                        dialog.Option("Ahh sorry.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 42:
                                {
                                    if (client.Entity.ConquerPoints >= Database.rates.Garment)
                                    {
                                        if (client.Entity.ConquerPoints >= Database.rates.Garment)
                                        {
                                            client.Entity.ConquerPoints -= Database.rates.Garment;
                                            client.Inventory.Add(800017, 0, 1);
                                            dialog.Text("Congratulations you got new Special Ninja[P6] Weapon Soul");
                                            dialog.Option("Thanks.", 255);
                                            dialog.Send();
                                        }
                                        else
                                        {
                                            dialog.Text("Please come back to me with " + Database.rates.Garment + " Conquer Points.");
                                            dialog.Option("Ahh sorry.", 255);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Please come back to me with " + Database.rates.Garment + " Conquer Points..");
                                        dialog.Option("Ahh sorry.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 20:
                                {
                                    dialog.Text("hello, i can help you to Buy new Special Pirate[P6] Weapon Soul for " + Database.rates.Garment + " Cps");
                                    dialog.Text(" choose what you want to buy?");
                                    dialog.Option("TimePistol[P6].", 21);//200421 SaintDragon
                                    dialog.Option("DestinyRapier[P6]", 22);//200426 RoaringChow

                                    dialog.Send();
                                    break;
                                }
                            case 22:
                                {
                                    if (client.Entity.ConquerPoints >= Database.rates.Garment)
                                    {
                                        if (client.Entity.ConquerPoints >= Database.rates.Garment)
                                        {
                                            client.Entity.ConquerPoints -= Database.rates.Garment;
                                            client.Inventory.Add(800809, 0, 1);
                                            dialog.Text("Congratulations you got new Special Pirate[P6] Weapon Soul");
                                            dialog.Option("Thanks.", 255);
                                            dialog.Send();
                                        }
                                        else
                                        {
                                            dialog.Text("Please come back to me with " + Database.rates.Garment + " Conquer Points.");
                                            dialog.Option("Ahh sorry.", 255);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Please come back to me with " + Database.rates.Garment + " Conquer Points..");
                                        dialog.Option("Ahh sorry.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 21:
                                {
                                    if (client.Entity.ConquerPoints >= Database.rates.Garment)
                                    {
                                        if (client.Entity.ConquerPoints >= Database.rates.Garment)
                                        {
                                            client.Entity.ConquerPoints -= Database.rates.Garment;
                                            client.Inventory.Add(800804, 0, 1);
                                            dialog.Text("Congratulations you got new Special Pirate[P6] Weapon Soul");
                                            dialog.Option("Thanks.", 255);
                                            dialog.Send();
                                        }
                                        else
                                        {
                                            dialog.Text("Please come back to me with " + Database.rates.Garment + " Conquer Points.");
                                            dialog.Option("Ahh sorry.", 255);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Please come back to me with " + Database.rates.Garment + " Conquer Points..");
                                        dialog.Option("Ahh sorry.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 2:
                                {
                                    dialog.Text("hello, i can help you to Buy new Special MountDeer for " + Database.rates.Garment + " Cps");
                                    dialog.Text(" choose what you want to buy?");
                                    dialog.Option("SaintDragon.", 3);//200421 SaintDragon
                                    dialog.Option("RoaringChow", 4);//200426 RoaringChow
                                    dialog.Option("WinebibberPanda", 5);//200427 WinebibberPanda
                                    dialog.Option("SomesaultCloud", 6);//200428 Somesault~Cloud
                                    dialog.Option("WildCamel", 7);//200431 WildCamel
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    dialog.Text("hello, i can help you to Buy new Special Garment for " + Database.rates.Garment + " Cps");
                                    dialog.Text(" choose what you want to buy?");
                                    dialog.Option("GracefulBeauty[Female].", 8);//187605 GracefulBeauty
                                    dialog.Option("CherryRose", 9);//187675 CherryRose
                                    dialog.Option("SoberDark", 10);//187665 SoberDark
                                    dialog.Option("AssassinSuit(Male)", 11);//192185 AssassinSuit
                                    dialog.Option("AnniversarySuit(Male)", 12);//192195@@AnniversarySuit(Male)
                                    dialog.Option("AnniversarySuit(Female)", 13);//187635 AnniversarySuit(Female)
                                    dialog.Send();
                                    break;
                                }
                            case 13:
                                {
                                    if (client.Entity.ConquerPoints >= Database.rates.Garment)
                                    {
                                        if (client.Entity.ConquerPoints >= Database.rates.Garment)
                                        {
                                            client.Entity.ConquerPoints -= Database.rates.Garment;
                                            client.Inventory.Add(187635, 0, 1);
                                            dialog.Text("Congratulations you got new Special Garment");
                                            dialog.Option("Thanks.", 255);
                                            dialog.Send();
                                        }
                                        else
                                        {
                                            dialog.Text("Please come back to me with " + Database.rates.Garment + " Conquer Points.");
                                            dialog.Option("Ahh sorry.", 255);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Please come back to me with " + Database.rates.Garment + " Conquer Points..");
                                        dialog.Option("Ahh sorry.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 12:
                                {
                                    if (client.Entity.ConquerPoints >= Database.rates.Garment)
                                    {
                                        if (client.Entity.ConquerPoints >= Database.rates.Garment)
                                        {
                                            client.Entity.ConquerPoints -= Database.rates.Garment;
                                            client.Inventory.Add(192195, 0, 1);
                                            dialog.Text("Congratulations you got new Special Garment");
                                            dialog.Option("Thanks.", 255);
                                            dialog.Send();
                                        }
                                        else
                                        {
                                            dialog.Text("Please come back to me with " + Database.rates.Garment + " Conquer Points.");
                                            dialog.Option("Ahh sorry.", 255);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Please come back to me with " + Database.rates.Garment + " Conquer Points..");
                                        dialog.Option("Ahh sorry.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 11:
                                {
                                    if (client.Entity.ConquerPoints >= Database.rates.Garment)
                                    {
                                        if (client.Entity.ConquerPoints >= Database.rates.Garment)
                                        {
                                            client.Entity.ConquerPoints -= Database.rates.Garment;
                                            client.Inventory.Add(192185, 0, 1);
                                            dialog.Text("Congratulations you got new Special Garment");
                                            dialog.Option("Thanks.", 255);
                                            dialog.Send();
                                        }
                                        else
                                        {
                                            dialog.Text("Please come back to me with " + Database.rates.Garment + " Conquer Points.");
                                            dialog.Option("Ahh sorry.", 255);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Please come back to me with " + Database.rates.Garment + " Conquer Points..");
                                        dialog.Option("Ahh sorry.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 10:
                                {
                                    if (client.Entity.ConquerPoints >= Database.rates.Garment)
                                    {
                                        if (client.Entity.ConquerPoints >= Database.rates.Garment)
                                        {
                                            client.Entity.ConquerPoints -= Database.rates.Garment;
                                            client.Inventory.Add(187665, 0, 1);
                                            dialog.Text("Congratulations you got new Special Garment");
                                            dialog.Option("Thanks.", 255);
                                            dialog.Send();
                                        }
                                        else
                                        {
                                            dialog.Text("Please come back to me with " + Database.rates.Garment + " Conquer Points.");
                                            dialog.Option("Ahh sorry.", 255);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Please come back to me with " + Database.rates.Garment + " Conquer Points..");
                                        dialog.Option("Ahh sorry.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 9:
                                {
                                    if (client.Entity.ConquerPoints >= Database.rates.Garment)
                                    {
                                        if (client.Entity.ConquerPoints >= Database.rates.Garment)
                                        {
                                            client.Entity.ConquerPoints -= Database.rates.Garment;
                                            client.Inventory.Add(187675, 0, 1);
                                            dialog.Text("Congratulations you got new Special Garment");
                                            dialog.Option("Thanks.", 255);
                                            dialog.Send();
                                        }
                                        else
                                        {
                                            dialog.Text("Please come back to me with " + Database.rates.Garment + " Conquer Points.");
                                            dialog.Option("Ahh sorry.", 255);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Please come back to me with " + Database.rates.Garment + " Conquer Points..");
                                        dialog.Option("Ahh sorry.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 8:
                                {
                                    if (client.Entity.ConquerPoints >= Database.rates.Garment)
                                    {
                                        if (client.Entity.ConquerPoints >= Database.rates.Garment)
                                        {
                                            client.Entity.ConquerPoints -= Database.rates.Garment;
                                            client.Inventory.Add(187605, 0, 1);
                                            dialog.Text("Congratulations you got new Special Garment");
                                            dialog.Option("Thanks.", 255);
                                            dialog.Send();
                                        }
                                        else
                                        {
                                            dialog.Text("Please come back to me with " + Database.rates.Garment + " Conquer Points.");
                                            dialog.Option("Ahh sorry.", 255);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Please come back to me with " + Database.rates.Garment + " Conquer Points..");
                                        dialog.Option("Ahh sorry.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 7:
                                {
                                    if (client.Entity.ConquerPoints >= Database.rates.Garment)
                                    {
                                        if (client.Entity.ConquerPoints >= Database.rates.Garment)
                                        {
                                            client.Entity.ConquerPoints -= Database.rates.Garment;
                                            client.Inventory.Add(200431, 0, 1);
                                            dialog.Text("Congratulations you got new Special MountArmor");
                                            dialog.Option("Thanks.", 255);
                                            dialog.Send();
                                        }
                                        else
                                        {
                                            dialog.Text("Please come back to me with " + Database.rates.Garment + " Conquer Points.");
                                            dialog.Option("Ahh sorry.", 255);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Please come back to me with " + Database.rates.Garment + " Conquer Points..");
                                        dialog.Option("Ahh sorry.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 6:
                                {
                                    if (client.Entity.ConquerPoints >= Database.rates.Garment)
                                    {
                                        if (client.Entity.ConquerPoints >= Database.rates.Garment)
                                        {
                                            client.Entity.ConquerPoints -= Database.rates.Garment;
                                            client.Inventory.Add(200428, 0, 1);
                                            dialog.Text("Congratulations you got new Special MountArmor");
                                            dialog.Option("Thanks.", 255);
                                            dialog.Send();
                                        }
                                        else
                                        {
                                            dialog.Text("Please come back to me with " + Database.rates.Garment + " Conquer Points.");
                                            dialog.Option("Ahh sorry.", 255);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Please come back to me with " + Database.rates.Garment + " Conquer Points..");
                                        dialog.Option("Ahh sorry.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 5:
                                {
                                    if (client.Entity.ConquerPoints >= Database.rates.Garment)
                                    {
                                        if (client.Entity.ConquerPoints >= Database.rates.Garment)
                                        {
                                            client.Entity.ConquerPoints -= Database.rates.Garment;
                                            client.Inventory.Add(200427, 0, 1);
                                            dialog.Text("Congratulations you got new Special MountArmor");
                                            dialog.Option("Thanks.", 255);
                                            dialog.Send();
                                        }
                                        else
                                        {
                                            dialog.Text("Please come back to me with " + Database.rates.Garment + " Conquer Points.");
                                            dialog.Option("Ahh sorry.", 255);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Please come back to me with " + Database.rates.Garment + " Conquer Points..");
                                        dialog.Option("Ahh sorry.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 4:
                                {
                                    if (client.Entity.ConquerPoints >= Database.rates.Garment)
                                    {
                                        if (client.Entity.ConquerPoints >= Database.rates.Garment)
                                        {
                                            client.Entity.ConquerPoints -= Database.rates.Garment;
                                            client.Inventory.Add(200426, 0, 1);
                                            dialog.Text("Congratulations you got new Special MountArmor");
                                            dialog.Option("Thanks.", 255);
                                            dialog.Send();
                                        }
                                        else
                                        {
                                            dialog.Text("Please come back to me with " + Database.rates.Garment + " Conquer Points.");
                                            dialog.Option("Ahh sorry.", 255);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Please come back to me with " + Database.rates.Garment + " Conquer Points..");
                                        dialog.Option("Ahh sorry.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 3:
                                {
                                    if (client.Entity.ConquerPoints >= Database.rates.Garment)
                                    {
                                        if (client.Entity.ConquerPoints >= Database.rates.Garment)
                                        {
                                            client.Entity.ConquerPoints -= Database.rates.Garment;
                                            client.Inventory.Add(200421, 0, 1);
                                            dialog.Text("Congratulations you got new Special MountArmor");
                                            dialog.Option("Thanks.", 255);
                                            dialog.Send();
                                        }
                                        else
                                        {
                                            dialog.Text("Please come back to me with " + Database.rates.Garment + " Conquer Points.");
                                            dialog.Option("Ahh sorry.", 255);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Please come back to me with " + Database.rates.Garment + " Conquer Points..");
                                        dialog.Option("Ahh sorry.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }



                        }
                        break;
                    }
                #endregion
                #region Octopus npc//3071 60 128
                case 42251:
                    {

                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Hello " + client.Entity.Name + " I'm The Sea Guard i can teleport you to Sea Area where u can fidn and kill .");
                                    dialog.Text(" GoldenOctopus and CoinsStealer and get rar items , wana go to Sear Area");
                                    dialog.Option("Leme Join.", 1);
                                    dialog.Option("Just Passing By!.", 255);
                                    dialog.Avatar(116);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    client.Entity.Teleport(3071, 60, 128);
                                    break;
                                }
                        }
                        break;
                    }
                #endregion
                #region LordsWar
                case 4152:
                    {

                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Hello " + client.Entity.Name + " I'm The WarLord i can let you Join the LordsWar Event 1 time .");
                                    dialog.Text("Everyday u can signup and enjoy the event for 30 Minutes at this time[" + Game.KimoEvents.LordsWarHour + ":00 " + Game.KimoEvents.LordsWarHour + ":30].");
                                    dialog.Text("you need to have atleast 100k cps in your inventory if you killed any player u will drop 20k from him also if u died u will lose cps ");
                                    dialog.Option("Leme Join.", 1);
                                    dialog.Option("Just Passing By!.", 255);
                                    dialog.Avatar(116);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    if (DateTime.Now.Hour == Game.KimoEvents.LordsWarHour && DateTime.Now.Minute >= 00 && DateTime.Now.Minute < 30)
                                    {
                                        if (client.Entity.ConquerPoints >= 100000)
                                        {
                                            client.Entity.Teleport(3031, 39, 35);
                                            dialog.Text("Defeat other players to gain cps and be carefull if u died u will lose 20k cps GoodLuck!.");
                                            dialog.Option("Thanks.", 255);
                                            dialog.Avatar(116);
                                            dialog.Send();
                                        }
                                        else
                                        {
                                            dialog.Text("Sorry you dont have 100k cps i cant let u join LordsWar Tourment");
                                            dialog.Option("Okay sorry.", 255);
                                            dialog.Avatar(116);
                                            dialog.Send();
                                        }
                                        break;
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry i cant let you join the event now come again later at the event times.");
                                        dialog.Option("Okay sorry.", 255);
                                        dialog.Avatar(116);
                                        dialog.Send();
                                    }
                                    break;
                                }
                        }
                        break;
                    }
                #endregion
                #region Kimo Disco
                case 55224:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Hey there " + client.Entity.Name + " Would you like to Dance in " + Database.rates.servername + " Disco? its free.");
                                    //dialog.Text("is start everyday btw " + Game.KimoEvents.DemonHour + ":00 to " + Game.KimoEvents.DemonHour + ":30.");
                                    // dialog.Text(" it 3 steps kill / 100 - 200 - 400 in 3 maps first one will get " + Database.rates.DemonCave + " cps and next players will get " + (Database.rates.DemonCave / 2) + " cps.");
                                    dialog.Option("Lets Dance!", 1);
                                    dialog.Option("Just Passing By!.", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    client.Entity.Teleport(701, 51, 51);

                                    break;
                                }

                        }
                        break;
                    }
                #endregion
                #region CaptureTheFlag
                case 442778:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Hey there " + client.Entity.Name + " Would you like to Join CaptureTheFlag?.");
                                    dialog.Text("you can but Btw " + Game.KimoEvents.CFHour + ":00 to " + Game.KimoEvents.CFHour + ":30, Every day there is 4 teams Red/Yellow/black/White with 1 Round");
                                    dialog.Text(" all teams will play toghter first team get 10 Points will win and  other will lose");
                                    dialog.Text(" and winner team will stay in the map and when it end winners will gain " + Database.rates.CaptureFlag + " CPS");
                                    dialog.Option("Let me Join", 1);
                                    dialog.Option("Just Passing By!", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    if (DateTime.Now.Hour == Game.KimoEvents.CFHour && DateTime.Now.Minute >= 00 && DateTime.Now.Minute < 30)
                                    {
                                        if (Game.Team.IsWar == true)
                                        {
                                            if (client.CaptureTeamJoin != true)
                                            {

                                                uint UID = 1;
                                                // red 181625  blue 181825 white 181325 black 181525
                                                if (Game.Team.GarmID == 181525)// black to red
                                                {
                                                    #region Equip
                                                    //GarmID = 181325;
                                                    Game.Team.GarmID = 181625;
                                                    PhoenixProject.Interfaces.IConquerItem newItem = new PhoenixProject.Network.GamePackets.ConquerItem(true);
                                                    newItem.ID = Game.Team.GarmID;
                                                    newItem.UID = UID;
                                                    newItem.Durability = 1000;
                                                    newItem.MaximDurability = 1000;
                                                    newItem.Position = 9;
                                                    client.Equipment.Remove(9);
                                                    if (client.Equipment.Objects[8] != null)
                                                        client.Equipment.Objects[8] = null;
                                                    client.Equipment.Add(newItem);
                                                    newItem.Mode = PhoenixProject.Game.Enums.ItemMode.Update;
                                                    newItem.Send(client);
                                                    #endregion
                                                    ClientEquip equips = new ClientEquip();
                                                    equips.DoEquips(client);
                                                    client.Send(equips);
                                                    if (!client.AlternateEquipment)
                                                    {
                                                        client.Equipment.UpdateEntityPacket();
                                                    }
                                                    else
                                                    {
                                                        client.Equipment.UpdateEntityPacket2();
                                                    }
                                                    client.CaptureTeamJoin = true;
                                                    client.Entity.Teleport(2060, 63, 68);
                                                    client.CaptureR = true;
                                                    client.Entity.AddFlag(Network.GamePackets.Update.Flags2.IceBlock);
                                                    client.Entity.FreezeTime = 10;
                                                    client.Entity.FreezeStamp = Time32.Now;
                                                    dialog.Text("You have been signed up for <CaptureTheFlag> <Team Red>");
                                                    dialog.Option("Thanks!", 255);
                                                    dialog.Send();
                                                    break;
                                                }
                                                // red 181625  blue 181825 white 181325 black 181525
                                                if (Game.Team.GarmID == 181625)//red to blue
                                                {
                                                    #region Equip
                                                    Game.Team.GarmID = 181825;
                                                    PhoenixProject.Interfaces.IConquerItem newItem = new PhoenixProject.Network.GamePackets.ConquerItem(true);
                                                    newItem.ID = Game.Team.GarmID;
                                                    newItem.UID = UID;
                                                    newItem.Durability = 1000;
                                                    newItem.MaximDurability = 1000;
                                                    newItem.Position = 9;
                                                    //client.Inventory.Add(newItem, Game.Enums.ItemUse.CreateAndAdd);
                                                    client.Equipment.Remove(9);
                                                    if (client.Equipment.Objects[8] != null)
                                                        client.Equipment.Objects[8] = null;
                                                    client.Equipment.Add(newItem);
                                                    newItem.Mode = PhoenixProject.Game.Enums.ItemMode.Update;
                                                    newItem.Send(client);
                                                    #endregion
                                                    ClientEquip equips = new ClientEquip();
                                                    equips.DoEquips(client);
                                                    client.Send(equips);
                                                    if (!client.AlternateEquipment)
                                                    {
                                                        client.Equipment.UpdateEntityPacket();
                                                    }
                                                    else
                                                    {
                                                        client.Equipment.UpdateEntityPacket2();
                                                    }
                                                    client.CaptureTeamJoin = true;
                                                    client.Entity.Teleport(2060, 187, 205);
                                                    client.CaptureB = true;
                                                    client.Entity.AddFlag(Network.GamePackets.Update.Flags2.IceBlock);
                                                    client.Entity.FreezeTime = 10;
                                                    client.Entity.FreezeStamp = Time32.Now;
                                                    dialog.Text("You have been signed up for <CaptureTheFlag> <Team Blue>");
                                                    dialog.Option("Thanks!", 255);
                                                    dialog.Send();
                                                    break;
                                                }
                                                // red 181625  blue 181825 white 181325 black 181525
                                                if (Game.Team.GarmID == 181825)//Blue to white
                                                {
                                                    #region Equip
                                                    Game.Team.GarmID = 181325;
                                                    PhoenixProject.Interfaces.IConquerItem newItem = new PhoenixProject.Network.GamePackets.ConquerItem(true);
                                                    newItem.ID = Game.Team.GarmID;
                                                    newItem.UID = UID;
                                                    newItem.Durability = 1000;
                                                    newItem.MaximDurability = 1000;
                                                    newItem.Position = 9;
                                                    client.Equipment.Remove(9);
                                                    if (client.Equipment.Objects[8] != null)
                                                        client.Equipment.Objects[8] = null;
                                                    client.Equipment.Add(newItem);
                                                    newItem.Mode = PhoenixProject.Game.Enums.ItemMode.Update;
                                                    newItem.Send(client);
                                                    #endregion
                                                    ClientEquip equips = new ClientEquip();
                                                    equips.DoEquips(client);
                                                    client.Send(equips);
                                                    if (!client.AlternateEquipment)
                                                    {
                                                        client.Equipment.UpdateEntityPacket();
                                                    }
                                                    else
                                                    {
                                                        client.Equipment.UpdateEntityPacket2();
                                                    }
                                                    client.CaptureTeamJoin = true;
                                                    client.Entity.Teleport(2060, 91, 176);
                                                    client.CaptureW = true;
                                                    client.Entity.AddFlag(Network.GamePackets.Update.Flags2.IceBlock);
                                                    client.Entity.FreezeTime = 10;
                                                    client.Entity.FreezeStamp = Time32.Now;
                                                    dialog.Text("You have been signed up for <CaptureTheFlag> <Team White>");
                                                    dialog.Option("Thanks!", 255);
                                                    dialog.Send();
                                                    break;
                                                }
                                                if (Game.Team.GarmID == 181325)//White to black
                                                {
                                                    #region Equip
                                                    Game.Team.GarmID = 181525;
                                                    PhoenixProject.Interfaces.IConquerItem newItem = new PhoenixProject.Network.GamePackets.ConquerItem(true);
                                                    newItem.ID = Game.Team.GarmID;
                                                    newItem.UID = UID;
                                                    newItem.Durability = 1000;
                                                    newItem.MaximDurability = 1000;
                                                    newItem.Position = 9;
                                                    client.Equipment.Remove(9);
                                                    if (client.Equipment.Objects[8] != null)
                                                        client.Equipment.Objects[8] = null;
                                                    client.Equipment.Add(newItem);
                                                    newItem.Mode = PhoenixProject.Game.Enums.ItemMode.Update;
                                                    newItem.Send(client);
                                                    #endregion
                                                    ClientEquip equips = new ClientEquip();
                                                    equips.DoEquips(client);
                                                    client.Send(equips);
                                                    if (!client.AlternateEquipment)
                                                    {
                                                        client.Equipment.UpdateEntityPacket();
                                                    }
                                                    else
                                                    {
                                                        client.Equipment.UpdateEntityPacket2();
                                                    }
                                                    client.CaptureTeamJoin = true;
                                                    client.Entity.Teleport(2060, 177, 92);
                                                    client.CaptureBL = true;
                                                    client.Entity.AddFlag(Network.GamePackets.Update.Flags2.IceBlock);
                                                    client.Entity.FreezeTime = 10;
                                                    client.Entity.FreezeStamp = Time32.Now;
                                                    dialog.Text("You have been signed up for <CaptureTheFlag> <Team Black>");
                                                    dialog.Option("Thanks!", 255);
                                                    dialog.Send();
                                                    break;
                                                }
                                            }
                                            else
                                            {
                                                dialog.Text("You already Joined CaptureTheFlag once Cant join again");
                                                dialog.Option("Thanks!", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        }
                                        else
                                        {
                                            dialog.Text("Sorry CaptureThe flag will not run today come again tomorrow ;)");
                                            dialog.Option("Thanks!", 255);
                                            dialog.Send();
                                            break;
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("You need to wait until time become " + Game.KimoEvents.CFHour + ":00 to Signup");
                                        dialog.Option("Thanks!", 255);
                                        dialog.Send();
                                        break;
                                    }
                                    break;
                                }
                        }
                        break;
                    }
                #endregion
                #region DemonCaveLast
                case 66951:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("would you like to claim DemonCave Prize? , you should kill 200 monster here first.");
                                    dialog.Text("is start everyday btw " + Game.KimoEvents.DemonHour + ":00 to " + Game.KimoEvents.DemonHour + ":30.");
                                    dialog.Text(" it 3 steps kill / 100 - 200 - 400 in 3 maps first one will get " + Database.rates.DemonCave + " cps and next players will get " + (Database.rates.DemonCave / 2) + " cps.");
                                    dialog.Option("Next Step!", 1);
                                    dialog.Option("Just Passing By!.", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    if (DateTime.Now.Hour == Game.KimoEvents.DemonHour && DateTime.Now.Minute < 30)
                                    {
                                        if (client.Entity.DemonCave3 >= 400)
                                        {
                                            if (Program.DemonCave3 == 0)
                                            {
                                                Program.DemonCave3 = 1;
                                                client.Entity.DemonCave1 = 0;
                                                client.Entity.DemonCave2 = 0;
                                                client.Entity.DemonCave3 = 0;
                                                client.Entity.Teleport(1002, 429, 379);
                                                ServerBase.Kernel.SendWorldMessage(new PhoenixProject.Network.GamePackets.Message("Congratulations, " + client.Entity.Name + " is the  winner of DemonCave and won " + Database.rates.DemonCave + " cps", System.Drawing.Color.Red, Message.Center), ServerBase.Kernel.GamePool.Values);
                                                client.Entity.ConquerPoints += Database.rates.DemonCave;
                                            }
                                            else
                                            {
                                                client.Entity.DemonCave1 = 0;
                                                client.Entity.DemonCave2 = 0;
                                                client.Entity.DemonCave3 = 0;
                                                client.Entity.Teleport(1002, 429, 379);
                                                ServerBase.Kernel.SendWorldMessage(new PhoenixProject.Network.GamePackets.Message("" + client.Entity.Name + ": has Finished DemonCave Stage [3] and claimed " + (Database.rates.DemonCave / 2) + " cps as a reward", System.Drawing.Color.Red, Message.World), ServerBase.Kernel.GamePool.Values);
                                                client.Entity.ConquerPoints += (Database.rates.DemonCave / 2);
                                            }
                                        }
                                        else
                                        {
                                            dialog.Text("Sorry you can only join DemonCave once");
                                            dialog.Option("okay", 255);
                                            dialog.Send();
                                            break;
                                        }
                                    }
                                    else
                                    {
                                        client.Entity.Teleport(1002, 450, 350);
                                        dialog.Text("Hey there " + client.Entity.Name + " DemonCave not running now come again later");
                                        dialog.Option("okay", 255);
                                        dialog.Send();
                                        break;
                                    }
                                    break;
                                }

                        }
                        break;
                    }
                #endregion
                #region DemonCave Step 2
                case 66952:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("would you like to go to step [3] in DemonCave? , you should kill 200 monster here first.");
                                    dialog.Text("is start everyday btw " + Game.KimoEvents.DemonHour + ":00 to " + Game.KimoEvents.DemonHour + ":30.");
                                    //dialog.Text(" it 3 steps kill / 100 - 200 - 400 in 3 maps first one will get 200k cps and next players will get 100k cps.");
                                    dialog.Option("Next Step!", 1);
                                    dialog.Option("Just Passing By!.", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    if (DateTime.Now.Hour == Game.KimoEvents.DemonHour && DateTime.Now.Minute < 30)
                                    {
                                        if (client.Entity.DemonCave2 >= 200)
                                        {
                                            if (Program.DemonCave2 == 0)
                                            {
                                                Program.DemonCave2 = 1;
                                                client.Entity.DemonCave1 = 0;
                                                client.Entity.DemonCave2 = 0;
                                                client.Entity.DemonCave3 = 0;
                                                client.Entity.Teleport(3, 77, 69);
                                                ServerBase.Kernel.SendWorldMessage(new PhoenixProject.Network.GamePackets.Message("Congratulations, " + client.Entity.Name + " is the first one to join DemonCave Stage [3]", System.Drawing.Color.Red, Message.Center), ServerBase.Kernel.GamePool.Values);
                                            }
                                            else
                                            {
                                                client.Entity.DemonCave1 = 0;
                                                client.Entity.DemonCave2 = 0;
                                                client.Entity.DemonCave3 = 0;
                                                client.Entity.Teleport(3, 77, 69);
                                                ServerBase.Kernel.SendWorldMessage(new PhoenixProject.Network.GamePackets.Message("" + client.Entity.Name + ": has joined DemonCave Stage [3]", System.Drawing.Color.Red, Message.TopLeft), ServerBase.Kernel.GamePool.Values);
                                            }
                                        }
                                        else
                                        {
                                            dialog.Text("Sorry you can only join DemonCave once");
                                            dialog.Option("okay", 255);
                                            dialog.Send();
                                            break;
                                        }
                                    }
                                    else
                                    {
                                        client.Entity.Teleport(1002, 450, 350);
                                        dialog.Text("Hey there " + client.Entity.Name + " DemonCave not running now come again later");
                                        dialog.Option("okay", 255);
                                        dialog.Send();
                                        break;
                                    }
                                    break;
                                }

                        }
                        break;
                    }
                #endregion
                #region DemonCave Step 1
                case 66953:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("would you like to go to step [2] in DemonCave? , you should kill 100 monster here first.");
                                    dialog.Text("is start everyday btw " + Game.KimoEvents.DemonHour + ":00 to " + Game.KimoEvents.DemonHour + ":30.");
                                    //dialog.Text(" it 3 steps kill / 100 - 200 - 400 in 3 maps first one will get 200k cps and next players will get 100k cps.");
                                    dialog.Option("Next Step!", 1);
                                    dialog.Option("Just Passing By!.", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    if (DateTime.Now.Hour == Game.KimoEvents.DemonHour && DateTime.Now.Minute < 30)
                                    {
                                        if (client.Entity.DemonCave1 >= 100)
                                        {
                                            if (Program.DemonCave1 == 0)
                                            {
                                                Program.DemonCave1 = 1;
                                                client.Entity.DemonCave1 = 0;
                                                client.Entity.DemonCave2 = 0;
                                                client.Entity.DemonCave3 = 0;
                                                client.Entity.Teleport(2, 77, 69);
                                                ServerBase.Kernel.SendWorldMessage(new PhoenixProject.Network.GamePackets.Message("Congratulations, " + client.Entity.Name + " is the first one to join DemonCave Stage [2]", System.Drawing.Color.Red, Message.Center), ServerBase.Kernel.GamePool.Values);
                                            }
                                            else
                                            {
                                                client.Entity.DemonCave1 = 0;
                                                client.Entity.DemonCave2 = 0;
                                                client.Entity.DemonCave3 = 0;
                                                client.Entity.Teleport(2, 77, 69);
                                                ServerBase.Kernel.SendWorldMessage(new PhoenixProject.Network.GamePackets.Message("" + client.Entity.Name + ": has joined DemonCave Stage [2]", System.Drawing.Color.Red, Message.TopLeft), ServerBase.Kernel.GamePool.Values);
                                            }
                                        }
                                        else
                                        {
                                            dialog.Text("Sorry you can only join DemonCave once");
                                            dialog.Option("okay", 255);
                                            dialog.Send();
                                            break;
                                        }
                                    }
                                    else
                                    {
                                        client.Entity.Teleport(1002, 450, 350);
                                        dialog.Text("Hey there " + client.Entity.Name + " DemonCave not running now come again later");
                                        dialog.Option("okay", 255);
                                        dialog.Send();
                                        break;
                                    }
                                    break;
                                }

                        }
                        break;
                    }
                #endregion
                #region DemonCave log
                case 66957:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Hey there " + client.Entity.Name + " Would you like to Join DemonCave?.");
                                    dialog.Text("is start everyday btw " + Game.KimoEvents.DemonHour + ":00 to " + Game.KimoEvents.DemonHour + ":30.");
                                    dialog.Text(" it 3 steps kill / 100 - 200 - 400 in 3 maps first one will get " + Database.rates.DemonCave + " cps and next players will get " + (Database.rates.DemonCave / 2) + " cps.");
                                    dialog.Option("Join DemonCave!", 1);
                                    dialog.Option("Just Passing By!.", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    if (DateTime.Now.Hour == Game.KimoEvents.DemonHour && DateTime.Now.Minute < 5)
                                    {
                                        if (!client.DemonCave)
                                        {
                                            client.DemonCave = true;
                                            client.Entity.Teleport(1, 77, 69);
                                            client.Entity.DemonCave1 = 0;
                                            client.Entity.DemonCave2 = 0;
                                            client.Entity.DemonCave3 = 0;
                                        }
                                        else
                                        {
                                            dialog.Text("Sorry you can only join DemonCave once");
                                            dialog.Option("okay", 255);
                                            dialog.Send();
                                            break;
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Hey there " + client.Entity.Name + " DemonCave not running now come again later");
                                        dialog.Option("okay", 255);
                                        dialog.Send();
                                        break;
                                    }
                                    break;
                                }

                        }
                        break;
                    }
                #endregion
                #region SkillTeamWar
                case 442777:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Hey there " + client.Entity.Name + " Would you like to Join SkillTeam War?.");
                                    dialog.Text("you can but Btw " + Game.KimoEvents.SKHour + ":05 to " + Game.KimoEvents.SKHour + ":30, Every day there is 2 teams Red/Yellow with 3 Rounds ");
                                    dialog.Text("10 from each team will play toghter best team in Points will win and other will join");
                                    dialog.Text(" and winner team will stay in the map and when it end winners will gain " + Database.rates.SkillTeam + " Cps!");
                                    dialog.Option("Let me Join", 1);
                                    dialog.Option("Just Passing By!", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    if (DateTime.Now.Hour == Game.KimoEvents.SKHour && DateTime.Now.Minute >= 00 && DateTime.Now.Minute < 30)
                                    {

                                        if (Game.KimoSkillWar.Started == true && Game.KimoSkillWar.SignUP == true)
                                        {
                                            if (client.SkillTeamJoin != true)
                                            {
                                                if (Game.KimoSkillWar.YTeamNum == 10 && Game.KimoSkillWar.RTeamNum == 10)
                                                {
                                                    Game.KimoSkillWar.SignUP = false;
                                                    //Game.KimoSkillWar.Round += 1;
                                                    Game.KimoSkillWar.StartAt = Time32.Now;
                                                    Game.KimoSkillWar.EndAt = Time32.Now.AddMinutes(10);
                                                    ServerBase.Kernel.SendWorldMessage(new PhoenixProject.Network.GamePackets.Message("SkillTeam PkWar Round [" + Game.KimoSkillWar.Round + "] Started Wait next round!", System.Drawing.Color.Red, Message.Center), ServerBase.Kernel.GamePool.Values);

                                                }
                                                else
                                                {
                                                    uint UID = 1;
                                                    // uint GarmID = 191305;
                                                    if (Game.KimoSkillWar.GarmID == 191305 && Game.KimoSkillWar.YTeamNum < 10)//YTeam
                                                    {
                                                        #region Equip
                                                        //GarmID = 181325;
                                                        Game.KimoSkillWar.GarmID = 191405;
                                                        PhoenixProject.Interfaces.IConquerItem newItem = new PhoenixProject.Network.GamePackets.ConquerItem(true);
                                                        newItem.ID = Game.KimoSkillWar.GarmID;
                                                        newItem.UID = UID;
                                                        newItem.Durability = 1000;
                                                        newItem.MaximDurability = 1000;
                                                        newItem.Position = 9;
                                                        //client.Inventory.Add(newItem, Game.Enums.ItemUse.CreateAndAdd);
                                                        client.Equipment.Remove(9);
                                                        if (client.Equipment.Objects[8] != null)
                                                            client.Equipment.Objects[8] = null;
                                                        client.Equipment.Add(newItem);
                                                        newItem.Mode = PhoenixProject.Game.Enums.ItemMode.Update;
                                                        newItem.Send(client);
                                                        #endregion
                                                        ClientEquip equips = new ClientEquip();
                                                        equips.DoEquips(client);
                                                        client.Send(equips);
                                                        if (!client.AlternateEquipment)
                                                        {
                                                            client.Equipment.UpdateEntityPacket();
                                                        }
                                                        else
                                                        {
                                                            client.Equipment.UpdateEntityPacket2();
                                                        }

                                                        Game.KimoSkillWar.YTeamNum += 1;
                                                        client.SkillTeamJoin = true;
                                                        client.Entity.Teleport((ushort)Game.KimoSkillWar.MapID, 44, 49);
                                                        client.YellowOn = true;
                                                        dialog.Text("You have been signed up for <SkillTeamWar> <Team Yellow>");
                                                        dialog.Send();
                                                        break;
                                                    }
                                                    if (Game.KimoSkillWar.GarmID == 191405 && Game.KimoSkillWar.RTeamNum < 10)//YTeam
                                                    {
                                                        #region Equip
                                                        //Item Garment = client.Entity.Equips.Get(9);
                                                        //Garment.ID = 181325;
                                                        Game.KimoSkillWar.GarmID = 191305;
                                                        PhoenixProject.Interfaces.IConquerItem newItem = new PhoenixProject.Network.GamePackets.ConquerItem(true);
                                                        newItem.ID = Game.KimoSkillWar.GarmID;
                                                        newItem.UID = UID;
                                                        newItem.Durability = 1000;
                                                        newItem.MaximDurability = 1000;
                                                        newItem.Position = 9;
                                                        //client.Inventory.Add(newItem, Game.Enums.ItemUse.CreateAndAdd);
                                                        client.Equipment.Remove(9);
                                                        if (client.Equipment.Objects[8] != null)
                                                            client.Equipment.Objects[8] = null;
                                                        client.Equipment.Add(newItem);
                                                        newItem.Mode = PhoenixProject.Game.Enums.ItemMode.Update;
                                                        newItem.Send(client);
                                                        #endregion
                                                        ClientEquip equips = new ClientEquip();
                                                        equips.DoEquips(client);
                                                        client.Send(equips);
                                                        if (!client.AlternateEquipment)
                                                        {
                                                            client.Equipment.UpdateEntityPacket();
                                                        }
                                                        else
                                                        {
                                                            client.Equipment.UpdateEntityPacket2();
                                                        }

                                                        Game.KimoSkillWar.RTeamNum += 1;
                                                        client.SkillTeamJoin = true;
                                                        client.Entity.Teleport(7009, 44, 49);
                                                        client.RedOn = true;
                                                        dialog.Text("You have been signed up for <SkillTeamWar> <Team Red>");
                                                        dialog.Send();
                                                        break;
                                                    }
                                                }
                                            }
                                            else
                                            {
                                                dialog.Text("You already Joined skill team war once Cant join again");
                                                dialog.Send();
                                                break;
                                            }
                                        }
                                        else
                                        {
                                            dialog.Text("Sorry there is already 2 teams in the map wait next signup time ;)");
                                            dialog.Option("Thanks!", 255);
                                            dialog.Send();
                                            break;
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("You need to wait until time become " + Game.KimoEvents.SKHour + ":00 to signup");
                                        dialog.Option("Thanks!", 255);
                                        dialog.Send();
                                        break;
                                    }
                                    break;
                                }
                        }
                        break;
                    }
                #endregion
                #region CpsDonationWarOutTop
                case 442564:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Hey there " + client.Entity.Name + " Would you like to Claim DonationCpsWar?.");
                                    dialog.Text("you can Claim it Btw " + Game.KimoEvents.DWHour + ":05 to " + Game.KimoEvents.DWHour + ":30, Total Cps u will win is ");
                                    dialog.Text("" + Game.CpsWar.LowCps + " ConquerPoints wana claim prize?");
                                    dialog.Option("ClaimPrize", 1);
                                    dialog.Option("Just Passing By!", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    if (DateTime.Now.Hour == Game.KimoEvents.DWHour && DateTime.Now.Minute >= 05 && DateTime.Now.Minute <= 30)
                                    {
                                        Game.CpsWar.CheackLowAlive();
                                        if (Game.CpsWar.howmanyinmap3 == 1)
                                        {
                                            Game.CpsWar.ClaimLowCps(client);
                                            client.Entity.Teleport(1002, 450, 350);
                                        }
                                        else
                                        {
                                            dialog.Text("Sorry you need to Defeat all players in the Arena first!");
                                            dialog.Option("Sorry", 255);
                                            dialog.Send();
                                            break;
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("You need to wait until time become " + Game.KimoEvents.DWHour + ":05 to claim your prize");
                                        dialog.Option("Thanks!", 255);
                                        dialog.Send();
                                        break;
                                    }
                                    break;
                                }
                        }
                        break;
                    }
                #endregion
                #region CpsDonationWarOutMin
                case 442563:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Hey there " + client.Entity.Name + " Would you like to Claim DonationCpsWar?.");
                                    dialog.Text("you can Claim it Btw " + Game.KimoEvents.DWHour + ":05 to " + Game.KimoEvents.DWHour + ":30, Total Cps u will win is ");
                                    dialog.Text("" + Game.CpsWar.MinCps + " ConquerPoints wana claim prize?");
                                    dialog.Option("ClaimPrize", 1);
                                    dialog.Option("Just Passing By!", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    if (DateTime.Now.Hour == Game.KimoEvents.DWHour && DateTime.Now.Minute >= 05 && DateTime.Now.Minute <= 30)
                                    {
                                        Game.CpsWar.CheackMinAlive();
                                        if (Game.CpsWar.howmanyinmap2 == 1)
                                        {
                                            Game.CpsWar.ClaimMinCps(client);
                                            client.Entity.Teleport(1002, 450, 350);
                                        }
                                        else
                                        {
                                            dialog.Text("Sorry you need to Defeat all players in the Arena first!");
                                            dialog.Option("Sorry", 255);
                                            dialog.Send();
                                            break;
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("You need to wait until time become " + Game.KimoEvents.DWHour + ":05 to claim your prize");
                                        dialog.Option("Thanks!", 255);
                                        dialog.Send();
                                        break;
                                    }
                                    break;
                                }
                        }
                        break;
                    }
                #endregion
                #region CpsDonationWarOutTop
                case 442562:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Hey there " + client.Entity.Name + " Would you like to Claim DonationCpsWar?.");
                                    dialog.Text("you can Claim it Btw " + Game.KimoEvents.DWHour + ":05 to " + Game.KimoEvents.DWHour + ":30, Total Cps u will win is ");
                                    dialog.Text("" + Game.CpsWar.TopCps + " ConquerPoints wana claim prize?");
                                    dialog.Option("ClaimPrize", 1);
                                    dialog.Option("Just Passing By!", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    if (DateTime.Now.Hour == Game.KimoEvents.DWHour && DateTime.Now.Minute >= 05 && DateTime.Now.Minute <= 30)
                                    {
                                        Game.CpsWar.CheackTopAlive();
                                        if (Game.CpsWar.howmanyinmap == 1)
                                        {
                                            Game.CpsWar.ClaimTopCps(client);
                                            client.Entity.Teleport(1002, 450, 350);
                                        }
                                        else
                                        {
                                            dialog.Text("Sorry you need to Defeat all players in the Arena first!");
                                            dialog.Option("Sorry", 255);
                                            dialog.Send();
                                            break;
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("You need to wait until time become " + Game.KimoEvents.DWHour + ":05 to claim your prize");
                                        dialog.Option("Thanks!", 255);
                                        dialog.Send();
                                        break;
                                    }
                                    break;
                                }
                        }
                        break;
                    }
                #endregion
                #region CpsDonationWarIn
                case 442561:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Hey there " + client.Entity.Name + " Would you like to Join DonationCpsWar?.");
                                    dialog.Text("you can join Every day At " + Game.KimoEvents.DWHour + ":00 to " + Game.KimoEvents.DWHour + ":30, but you must pay cps so u can join it all players do.");
                                    dialog.Text("and the winner will win all players cps you have 3 Choise to pay Choose?");
                                    dialog.Option("TopCps Arena[3000]", 1);
                                    dialog.Option("MinCps Arena[2000]", 2);
                                    dialog.Option("LowCps Arena[1000]", 3);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    if (Game.CpsWar.IsWar)
                                    {
                                        if (client.Entity.ConquerPoints >= 3000)
                                        {
                                            Game.CpsWar.SignUpTop(client);
                                            client.Entity.Teleport(7005, 25, 40);
                                        }
                                        else
                                        {
                                            dialog.Text("Sorry you dont have 3k cps to join TopCps Arena Try another Arena!");
                                            dialog.Option("Sorry", 255);
                                            dialog.Send();
                                            break;
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Hey there " + client.Entity.Name + " DonationsCps War not running ATM come again later");
                                        dialog.Option("Thanks!", 255);
                                        dialog.Send();
                                        break;
                                    }
                                    break;
                                }
                            case 2:
                                {
                                    if (Game.CpsWar.IsWar2)
                                    {
                                        if (client.Entity.ConquerPoints >= 2000)
                                        {
                                            Game.CpsWar.SignUpMin(client);
                                            client.Entity.Teleport(7006, 25, 40);
                                        }
                                        else
                                        {
                                            dialog.Text("Sorry you dont have 2k cps to join MinCps Arena Try another Arena!");
                                            dialog.Option("Sorry", 255);
                                            dialog.Send();
                                            break;
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Hey there " + client.Entity.Name + " DonationsCps War not running ATM come again later");
                                        dialog.Option("Thanks!", 255);
                                        dialog.Send();
                                        break;
                                    }
                                    break;
                                }
                            case 3:
                                {
                                    if (Game.CpsWar.IsWar3)
                                    {
                                        if (client.Entity.ConquerPoints >= 1000)
                                        {
                                            Game.CpsWar.SignUpLow(client);
                                            client.Entity.Teleport(7008, 25, 40);
                                        }
                                        else
                                        {
                                            dialog.Text("Sorry you dont have 1k cps to join LowCps Arena Try another Arena!");
                                            dialog.Option("Sorry", 255);
                                            dialog.Send();
                                            break;
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Hey there " + client.Entity.Name + " DonationsCps War not running ATM come again later");
                                        dialog.Option("Thanks!", 255);
                                        dialog.Send();
                                        break;
                                    }
                                    break;
                                }

                        }
                        break;
                    }
                #endregion
                #region ClanWARout
                case 442560:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Hey there " + client.Entity.Name + " Would you like to back to TwinCity?.");
                                    //dialog.Text("or claim the Prize?, you can join Every day expect Saturday and Sunday At 19:00 to 20:00.");
                                    //dialog.Text("and the winner Clan Leader will get " + PhoenixProject.Database.rates.EliteGw + " cps after it finish u have 5 minutes to claim?.");
                                    dialog.Option("Yes!", 1);
                                    dialog.Option("Just Passing By!", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    client.Entity.Teleport(1002, 429, 378);

                                    break;
                                }

                        }
                        break;
                    }
                #endregion
                #region ClanWAR
                case 442559:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Hey there " + client.Entity.Name + " Would you like to Join ClanWar?.");
                                    dialog.Text("or claim the Prize?, you can join Every day expect Saturday and Sunday At " + Game.KimoEvents.ClanHour + ":00 to " + Game.KimoEvents.ClanEndHour + ":00.");
                                    dialog.Text("and the winner Clan Leader will get " + PhoenixProject.Database.rates.EliteGw + " cps after it finish u have 5 minutes to claim?.");
                                    dialog.Option("Join ClanWar!", 1);
                                    dialog.Option("Claim Prize.", 5);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    if (DateTime.Now.DayOfWeek != DayOfWeek.Saturday && DateTime.Now.DayOfWeek != DayOfWeek.Sunday)
                                    {
                                        if (DateTime.Now.Hour >= Game.KimoEvents.ClanHour && DateTime.Now.Hour < Game.KimoEvents.ClanEndHour)
                                        {
                                            client.Entity.Teleport(1509, 82, 119);
                                        }
                                        else
                                        {
                                            dialog.Text("Sorry you can only join Btw " + Game.KimoEvents.ClanHour + ":00 to " + Game.KimoEvents.ClanHour + ":59!");
                                            dialog.Option("okay", 255);
                                            dialog.Send();
                                            break;
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Hey there " + client.Entity.Name + " ClanWar not running in Saturday or Sunday");
                                        dialog.Option("okay", 255);
                                        dialog.Send();
                                        break;
                                    }
                                    break;
                                }
                            case 5:
                                {
                                    //Daily.CheackAlive();
                                    if (DateTime.Now.Hour == Game.KimoEvents.ClanEndHour && DateTime.Now.Minute >= 00 && DateTime.Now.Minute <= 30)
                                    {
                                        if (client.Entity.Myclan != null)
                                        {
                                            if (Game.ClanWar.ClanFlag.Name == client.Entity.Myclan.ClanName && Game.ClanWar.Claim == 0 && client.Entity.Myclan.ClanLider == client.Entity.Name && Game.ClanWar.Claim == 0)
                                            {
                                                Game.ClanWar.Claim += 1;
                                                PhoenixProject.ServerBase.Kernel.SendWorldMessage(new Message("Congratulations! " + client.Entity.Name + " claimed the prize " + PhoenixProject.Database.rates.EliteGw + " ConquerPoints for winning the ClanWar.", System.Drawing.Color.Black, Message.Center), PhoenixProject.ServerBase.Kernel.GamePool.Values);
                                                client.Entity.ConquerPoints += PhoenixProject.Database.rates.EliteGw;
                                            }
                                            else
                                            {
                                                dialog.Text("sorry u dont have any prize to claim....");
                                                dialog.Option("okay", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        }
                                        else
                                        {
                                            dialog.Text("sorry u dont have any prize to claim");
                                            dialog.Option("okay", 255);
                                            dialog.Send();
                                            break;
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Hey there " + client.Entity.Name + " You can only claim the prize btw " + Game.KimoEvents.ClanEndHour + ":00 to " + Game.KimoEvents.ClanEndHour + ":30 Expect Saturday and Sunday");
                                        dialog.Option("okay", 255);
                                        dialog.Send();
                                        break;
                                    }
                                    break;
                                }
                        }
                        break;
                    }
                #endregion
                #region ClanFlag
                case 812:
                    {
                        dialog.Text("Welcome in ClanWar HaveFun!.");
                        dialog.Option("Thanks.", 255);
                        dialog.Send();
                        break;
                    }
                #endregion
                #region Garment Npc
                case 442558://and this id
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("hello, i can help you to Buy new Special Garment for " + Database.rates.Garment + " Cps");
                                    dialog.Text(" choose what you want to buy?");
                                    dialog.Option("HolyArmor.", 1);//200418
                                    dialog.Option("WarriorArmor", 2);
                                    dialog.Option("Thanks!", 0);
                                    dialog.Send();
                                    break;
                                }

                            case 2:
                                {
                                    if (client.Entity.ConquerPoints >= Database.rates.Garment)
                                    {
                                        if (client.Entity.ConquerPoints >= Database.rates.Garment)
                                        {
                                            client.Entity.ConquerPoints -= Database.rates.Garment;
                                            client.Inventory.Add(187415, 0, 1);
                                            dialog.Text("Congratulations you got new Special Garment");
                                            dialog.Option("Thanks.", 255);
                                            dialog.Send();
                                        }
                                        else
                                        {
                                            dialog.Text("Please come back to me with " + Database.rates.Garment + " Conquer Points.");
                                            dialog.Option("Ahh sorry.", 255);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Please come back to me with " + Database.rates.Garment + " Conquer Points..");
                                        dialog.Option("Ahh sorry.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 1:
                                {
                                    if (client.Entity.ConquerPoints >= Database.rates.Garment)
                                    {
                                        if (client.Entity.ConquerPoints >= Database.rates.Garment)
                                        {
                                            client.Entity.ConquerPoints -= Database.rates.Garment;
                                            client.Inventory.Add(187405, 0, 1);
                                            dialog.Text("Congratulations you got new Special Garment");
                                            dialog.Option("Thanks.", 255);
                                            dialog.Send();
                                        }
                                        else
                                        {
                                            dialog.Text("Please come back to me with " + Database.rates.Garment + " Conquer Points.");
                                            dialog.Option("Ahh sorry.", 255);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Please come back to me with " + Database.rates.Garment + " Conquer Points..");
                                        dialog.Option("Ahh sorry.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }


                        }
                        break;
                    }
                #endregion
                #region SteedSeller Npc
                case 442557://and this id
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("hello, i can help you to Buy new Special Steed for " + Database.rates.Steed + " Cps");
                                    dialog.Text(" choose what you want to buy?");
                                    dialog.Option("NightMare Steed.", 1);//200418
                                    dialog.Option("FrostBite Steed", 2);//200420 
                                    dialog.Option("Spotted Steed", 3);//200413 
                                    dialog.Option("BlazeHoof Steed ", 4);//200412 
                                    dialog.Option("Zebra Steed", 5);//200410 
                                    dialog.Option("Thanks!", 0);
                                    dialog.Send();
                                    break;
                                }
                            case 5:
                                {
                                    if (client.Entity.ConquerPoints >= Database.rates.Steed)
                                    {
                                        if (client.Entity.ConquerPoints >= Database.rates.Steed)
                                        {
                                            client.Entity.ConquerPoints -= Database.rates.Steed;
                                            PacketHandler.CheckCommand2(new Message("@lastmankimo Steed Fixed 12 0 0 0 0 142 39 46", System.Drawing.Color.Red, 2001), client);
                                            dialog.Text("Congratulations you got new Special Steed");
                                            dialog.Option("Thanks.", 255);
                                            dialog.Send();
                                        }
                                        else
                                        {
                                            dialog.Text("Please come back to me with " + Database.rates.Steed + " Conquer Points.");
                                            dialog.Option("Ahh sorry.", 255);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Please come back to me with " + Database.rates.Steed + " Conquer Points..");
                                        dialog.Option("Ahh sorry.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 4:
                                {
                                    if (client.Entity.ConquerPoints >= Database.rates.Steed)
                                    {
                                        if (client.Entity.ConquerPoints >= Database.rates.Steed)
                                        {
                                            client.Entity.ConquerPoints -= Database.rates.Steed;
                                            PacketHandler.CheckCommand2(new Message("@lastmankimo Steed Fixed 12 0 0 0 0 148 156 137", System.Drawing.Color.Red, 2001), client);
                                            dialog.Text("Congratulations you got new Special Steed");
                                            dialog.Option("Thanks.", 255);
                                            dialog.Send();
                                        }
                                        else
                                        {
                                            dialog.Text("Please come back to me with " + Database.rates.Steed + " Conquer Points.");
                                            dialog.Option("Ahh sorry.", 255);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Please come back to me with " + Database.rates.Steed + " Conquer Points..");
                                        dialog.Option("Ahh sorry.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 3:
                                {
                                    if (client.Entity.ConquerPoints >= Database.rates.Steed)
                                    {
                                        if (client.Entity.ConquerPoints >= Database.rates.Steed)
                                        {
                                            client.Entity.ConquerPoints -= Database.rates.Steed;
                                            PacketHandler.CheckCommand2(new Message("@lastmankimo Steed Fixed 12 0 0 0 0 147 134 122", System.Drawing.Color.Red, 2001), client);
                                            dialog.Text("Congratulations you got new Special Steed");
                                            dialog.Option("Thanks.", 255);
                                            dialog.Send();
                                        }
                                        else
                                        {
                                            dialog.Text("Please come back to me with " + Database.rates.Steed + " Conquer Points.");
                                            dialog.Option("Ahh sorry.", 255);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Please come back to me with " + Database.rates.Steed + " Conquer Points..");
                                        dialog.Option("Ahh sorry.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 2:
                                {
                                    if (client.Entity.ConquerPoints >= Database.rates.Steed)
                                    {
                                        if (client.Entity.ConquerPoints >= Database.rates.Steed)
                                        {
                                            client.Entity.ConquerPoints -= Database.rates.Steed;
                                            PacketHandler.CheckCommand2(new Message("@lastmankimo Steed Fixed 12 0 0 0 0 62 63 184", System.Drawing.Color.Red, 2001), client);
                                            dialog.Text("Congratulations you got new Special Steed");
                                            dialog.Option("Thanks.", 255);
                                            dialog.Send();
                                        }
                                        else
                                        {
                                            dialog.Text("Please come back to me with " + Database.rates.Steed + " Conquer Points.");
                                            dialog.Option("Ahh sorry.", 255);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Please come back to me with " + Database.rates.Steed + " Conquer Points..");
                                        dialog.Option("Ahh sorry.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 1:
                                {
                                    if (client.Entity.ConquerPoints >= Database.rates.Steed)
                                    {
                                        if (client.Entity.ConquerPoints >= Database.rates.Steed)
                                        {
                                            client.Entity.ConquerPoints -= Database.rates.Steed;
                                            PacketHandler.CheckCommand2(new Message("@lastmankimo Steed Fixed 12 0 0 0 0 150 150 50", System.Drawing.Color.Red, 2001), client);
                                            dialog.Text("Congratulations you got new Special Steed");
                                            dialog.Option("Thanks.", 255);
                                            dialog.Send();
                                        }
                                        else
                                        {
                                            dialog.Text("Please come back to me with " + Database.rates.Steed + " Conquer Points.");
                                            dialog.Option("Ahh sorry.", 255);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Please come back to me with " + Database.rates.Steed + " Conquer Points..");
                                        dialog.Option("Ahh sorry.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }

                        }
                        break;
                    }
                #endregion
                #region MountArmor Npc
                case 442556://and this id
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("hello, i can help you to Buy new MountArmor for " + Database.rates.Mount + " Cps");
                                    dialog.Text(" choose what you want to buy?");
                                    dialog.Option("AncientElephant.", 1);//200418
                                    dialog.Option("CelestialBird", 2);//200420 
                                    dialog.Option("GreenEyedBeast", 3);//200413 
                                    dialog.Option("SilverBeast ", 4);//200412 
                                    dialog.Option("Somesault Cloud", 5);//200410 
                                    dialog.Option("Thanks!", 0);
                                    dialog.Send();
                                    break;
                                }
                            case 5:
                                {
                                    if (client.Entity.ConquerPoints >= Database.rates.Mount)
                                    {
                                        if (client.Entity.ConquerPoints >= Database.rates.Mount)
                                        {
                                            client.Entity.ConquerPoints -= Database.rates.Mount;
                                            client.Inventory.Add(200410, 0, 1);
                                            dialog.Text("Congratulations you got new MountArmor");
                                            dialog.Option("Thanks.", 255);
                                            dialog.Send();
                                        }
                                        else
                                        {
                                            dialog.Text("Please come back to me with " + Database.rates.Mount + " Conquer Points.");
                                            dialog.Option("Ahh sorry.", 255);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Please come back to me with " + Database.rates.Mount + " Conquer Points..");
                                        dialog.Option("Ahh sorry.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 4:
                                {
                                    if (client.Entity.ConquerPoints >= Database.rates.Mount)
                                    {
                                        if (client.Entity.ConquerPoints >= Database.rates.Mount)
                                        {
                                            client.Entity.ConquerPoints -= Database.rates.Mount;
                                            client.Inventory.Add(200412, 0, 1);
                                            dialog.Text("Congratulations you got new MountArmor");
                                            dialog.Option("Thanks.", 255);
                                            dialog.Send();
                                        }
                                        else
                                        {
                                            dialog.Text("Please come back to me with " + Database.rates.Mount + " Conquer Points.");
                                            dialog.Option("Ahh sorry.", 255);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Please come back to me with " + Database.rates.Mount + " Conquer Points..");
                                        dialog.Option("Ahh sorry.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 3:
                                {
                                    if (client.Entity.ConquerPoints >= Database.rates.Mount)
                                    {
                                        if (client.Entity.ConquerPoints >= Database.rates.Mount)
                                        {
                                            client.Entity.ConquerPoints -= Database.rates.Mount;
                                            client.Inventory.Add(200413, 0, 1);
                                            dialog.Text("Congratulations you got new MountArmor");
                                            dialog.Option("Thanks.", 255);
                                            dialog.Send();
                                        }
                                        else
                                        {
                                            dialog.Text("Please come back to me with " + Database.rates.Mount + " Conquer Points.");
                                            dialog.Option("Ahh sorry.", 255);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Please come back to me with " + Database.rates.Mount + " Conquer Points..");
                                        dialog.Option("Ahh sorry.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 2:
                                {
                                    if (client.Entity.ConquerPoints >= Database.rates.Mount)
                                    {
                                        if (client.Entity.ConquerPoints >= Database.rates.Mount)
                                        {
                                            client.Entity.ConquerPoints -= Database.rates.Mount;
                                            client.Inventory.Add(200420, 0, 1);
                                            dialog.Text("Congratulations you got new MountArmor");
                                            dialog.Option("Thanks.", 255);
                                            dialog.Send();
                                        }
                                        else
                                        {
                                            dialog.Text("Please come back to me with " + Database.rates.Mount + " Conquer Points.");
                                            dialog.Option("Ahh sorry.", 255);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Please come back to me with " + Database.rates.Mount + " Conquer Points..");
                                        dialog.Option("Ahh sorry.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 1:
                                {
                                    if (client.Entity.ConquerPoints >= Database.rates.Mount)
                                    {
                                        if (client.Entity.ConquerPoints >= Database.rates.Mount)
                                        {
                                            client.Entity.ConquerPoints -= Database.rates.Mount;
                                            client.Inventory.Add(200418, 0, 1);
                                            dialog.Text("Congratulations you got new MountArmor");
                                            dialog.Option("Thanks.", 255);
                                            dialog.Send();
                                        }
                                        else
                                        {
                                            dialog.Text("Please come back to me with " + Database.rates.Mount + " Conquer Points.");
                                            dialog.Option("Ahh sorry.", 255);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Please come back to me with " + Database.rates.Mount + " Conquer Points..");
                                        dialog.Option("Ahh sorry.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }

                        }
                        break;
                    }
                #endregion
                #region HELP DESK
                case 10065:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Welcome to the HelpDesk. Is there anything you require below?");
                                    dialog.Option("Register", 1);
                                    dialog.Option("Vote", 2);
                                    dialog.Option("ChatBox", 3);
                                    dialog.Option("Purchase", 4);
                                    dialog.Option("Facebook Page", 5);
                                    dialog.Option("ChangePassword", 6);
                                    //dialog.Option("Im good thanks", 255);
                                    dialog.Avatar(95);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    client.Send(new PhoenixProject.Network.GamePackets.Message("" + Database.HelpDesk.Register + "", System.Drawing.Color.Yellow, 2105));
                                    break;
                                }
                            case 2:
                                {
                                    client.Send(new PhoenixProject.Network.GamePackets.Message("" + Database.HelpDesk.Vote + "", System.Drawing.Color.Yellow, 2105));
                                    break;
                                }
                            case 3:
                                {
                                    client.Send(new PhoenixProject.Network.GamePackets.Message("" + Database.HelpDesk.ChatBox + "", System.Drawing.Color.Yellow, 2105));
                                    break;
                                }
                            case 4:
                                {
                                    client.Send(new PhoenixProject.Network.GamePackets.Message("" + Database.HelpDesk.Purchase + "", System.Drawing.Color.Yellow, 2105));
                                    break;
                                }
                            case 5:
                                {
                                    client.Send(new PhoenixProject.Network.GamePackets.Message("" + Database.HelpDesk.Facebook + "", System.Drawing.Color.Yellow, 2105));
                                    break;

                                }
                            case 6:
                                {
                                    client.Send(new PhoenixProject.Network.GamePackets.Message("" + Database.HelpDesk.ChangePass + "", System.Drawing.Color.Yellow, 2105));
                                    break;
                                }

                        }
                        break;
                    }
                #endregion
                #region BossTeleport
                case 30065054:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Do you think you are ready to take down these powerful beasts? If yes, I can teleport you.");
                                    dialog.Option("Terato Dragon.", 1);
                                    dialog.Option("Lava Beast.", 2);
                                    dialog.Option("Snow Banchee.", 3);
                                    dialog.Option("Sword Master.", 4);
                                    dialog.Option("Thrilling Spook.", 5);
                                    dialog.Option("I will Train more.", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    client.Entity.Teleport(1002, 565, 793);
                                    break;
                                }
                            case 2:
                                {
                                    client.Entity.Teleport(2056, 467, 740);
                                    break;
                                }
                            case 3:
                                {
                                    client.Entity.Teleport(7007, 347, 370);
                                    break;
                                }
                            case 4:
                                {
                                    client.Entity.Teleport(1090, 076, 051);
                                    break;
                                }
                            case 5:
                                {
                                    client.Entity.Teleport(1068, 055, 055);
                                    break;
                                }
                        }
                        break;
                    }
                #endregion
                #region FrozenGrotto
                case 278374:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("There is a dangeous frozen cavern south of nowhere! It's too dangerous for you to enter! Even Leroy Jenkins died there!");
                                    dialog.Option("FrozenGrotto 1", 1);
                                    dialog.Option("FrozenGrotto 2", 2);
                                    dialog.Option("FrozenGrotto 3", 3);
                                    dialog.Option("FrozenGrotto 4", 4);
                                    dialog.Option("FrozenGrotto 5", 5);
                                    dialog.Option("FrozenGrotto 6", 6);
                                    dialog.Option("Met Zone 250 CP Drops!!!!!", 7);
                                    dialog.Option("Blah, boring.", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 6:
                                {
                                    client.Entity.Teleport(2056, 478, 755);
                                    break;
                                }
                            case 1:
                                {
                                    client.Entity.Teleport(1762, 61, 257);
                                    break;
                                }
                            case 2:
                                {
                                    client.Entity.Teleport(7007, 61, 257);
                                    break;
                                }
                            case 4:
                                {
                                    client.Entity.Teleport(2054, 392, 586);
                                    break;
                                }
                            case 3:
                                {
                                    client.Entity.Teleport(1999, 407, 486);
                                    break;
                                }
                            case 5:
                                {
                                    client.Entity.Teleport(2055, 544, 574);
                                    break;
                                }
                            case 7:
                                {
                                    client.Entity.Teleport(1210, 1029, 714);
                                    break;
                                }
                        }
                        break;
                    }
                #endregion
                #region SoulP6 Npc
                case 442554://and this id
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("hello, i can help you to Buy P6 DragonSoul for " + Database.rates.SoulP6 + " Cps");
                                    dialog.Text(" for Ring-Boot-Necklace-Bracelet-Bag-HeadGear-GrimHammer and other what you want?");
                                    dialog.Option("P6 Ring.", 1);
                                    dialog.Option("P6 Boot.", 2);
                                    dialog.Option("P6 Necklace.", 3);
                                    dialog.Option("P6 Bracelet.", 4);
                                    dialog.Option("P6 Bag.", 5);
                                    dialog.Option("Next.", 6);
                                    dialog.Send();
                                    break;
                                }
                            case 6:
                                {
                                    dialog.Text("hello, i can help you to Buy P6 DragonSoul for " + Database.rates.SoulP6 + " Cps");
                                    dialog.Text(" for Ring-Boot-Necklace-Bracelet-Bag-HeadGear-GrimHammer and other what you want?");
                                    dialog.Option("P6 HeadGear.", 7);
                                    dialog.Option("P6 GrimHammer.", 8);
                                    dialog.Option("P6 MonkBeads.", 9);
                                    dialog.Option("P6 NinjaKatana.", 10);
                                    dialog.Option("P6 BackSword.", 11);
                                    dialog.Option("Next.", 12);
                                    dialog.Send();
                                    break;
                                }
                            case 12:
                                {
                                    dialog.Text("hello, i can help you to Buy P6 DragonSoul for " + Database.rates.SoulP6 + " Cps");
                                    dialog.Text(" for Ring-Boot-Necklace-Bracelet-Bag-HeadGear-GrimHammer and other what you want?");
                                    dialog.Option("P6 WhirlpoolArmor.", 13);
                                    dialog.Option("P6 WaterflowArmor.", 14);
                                    dialog.Option("Just Passing By!", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 14://WaterflowArmor 
                                {
                                    if (client.Entity.ConquerPoints >= Database.rates.SoulP6)
                                    {
                                        if (client.Entity.ConquerPoints >= Database.rates.SoulP6)
                                        {
                                            client.Entity.ConquerPoints -= Database.rates.SoulP6;
                                            client.Inventory.Add(822055, 0, 1);
                                            dialog.Text("Congratulations you got P6 WaterflowArmor");
                                            dialog.Option("Thanks.", 255);
                                            dialog.Send();
                                        }
                                        else
                                        {
                                            dialog.Text("Please come back to me with " + Database.rates.SoulP6 + " Conquer Points.");
                                            dialog.Option("Ahh sorry.", 255);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Please come back to me with " + Database.rates.SoulP6 + " Conquer Points..");
                                        dialog.Option("Ahh sorry.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 13://WhirlpoolArmor
                                {
                                    if (client.Entity.ConquerPoints >= Database.rates.SoulP6)
                                    {
                                        if (client.Entity.ConquerPoints >= Database.rates.SoulP6)
                                        {
                                            client.Entity.ConquerPoints -= Database.rates.SoulP6;
                                            client.Inventory.Add(822053, 0, 1);
                                            dialog.Text("Congratulations you got P6 WhirlpoolArmor");
                                            dialog.Option("Thanks.", 255);
                                            dialog.Send();
                                        }
                                        else
                                        {
                                            dialog.Text("Please come back to me with " + Database.rates.SoulP6 + " Conquer Points.");
                                            dialog.Option("Ahh sorry.", 255);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Please come back to me with " + Database.rates.SoulP6 + " Conquer Points..");
                                        dialog.Option("Ahh sorry.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 11://BackSword
                                {
                                    if (client.Entity.ConquerPoints >= Database.rates.SoulP6)
                                    {
                                        if (client.Entity.ConquerPoints >= Database.rates.SoulP6)
                                        {
                                            client.Entity.ConquerPoints -= Database.rates.SoulP6;
                                            client.Inventory.Add(800513, 0, 1);
                                            dialog.Text("Congratulations you got P6 BackSword");
                                            dialog.Option("Thanks.", 255);
                                            dialog.Send();
                                        }
                                        else
                                        {
                                            dialog.Text("Please come back to me with " + Database.rates.SoulP6 + " Conquer Points.");
                                            dialog.Option("Ahh sorry.", 255);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Please come back to me with " + Database.rates.SoulP6 + " Conquer Points..");
                                        dialog.Option("Ahh sorry.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 10://NinjaKatanas
                                {
                                    if (client.Entity.ConquerPoints >= Database.rates.SoulP6)
                                    {
                                        if (client.Entity.ConquerPoints >= Database.rates.SoulP6)
                                        {
                                            client.Entity.ConquerPoints -= Database.rates.SoulP6;
                                            client.Inventory.Add(800017, 0, 1);
                                            dialog.Text("Congratulations you got P6 NinjaKatana");
                                            dialog.Option("Thanks.", 255);
                                            dialog.Send();
                                        }
                                        else
                                        {
                                            dialog.Text("Please come back to me with " + Database.rates.SoulP6 + " Conquer Points.");
                                            dialog.Option("Ahh sorry.", 255);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Please come back to me with " + Database.rates.SoulP6 + " Conquer Points..");
                                        dialog.Option("Ahh sorry.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 9://MonkBeads
                                {
                                    if (client.Entity.ConquerPoints >= Database.rates.SoulP6)
                                    {
                                        if (client.Entity.ConquerPoints >= Database.rates.SoulP6)
                                        {
                                            client.Entity.ConquerPoints -= Database.rates.SoulP6;
                                            client.Inventory.Add(800722, 0, 1);
                                            dialog.Text("Congratulations you got P6 Ring");
                                            dialog.Option("Thanks.", 255);
                                            dialog.Send();
                                        }
                                        else
                                        {
                                            dialog.Text("Please come back to me with " + Database.rates.SoulP6 + " Conquer Points.");
                                            dialog.Option("Ahh sorry.", 255);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Please come back to me with " + Database.rates.SoulP6 + " Conquer Points..");
                                        dialog.Option("Ahh sorry.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 8://GrimHammer
                                {
                                    if (client.Entity.ConquerPoints >= Database.rates.SoulP6)
                                    {
                                        if (client.Entity.ConquerPoints >= Database.rates.SoulP6)
                                        {
                                            client.Entity.ConquerPoints -= Database.rates.SoulP6;
                                            client.Inventory.Add(800110, 0, 1);
                                            dialog.Text("Congratulations you got P6 GrimHammer");
                                            dialog.Option("Thanks.", 255);
                                            dialog.Send();
                                        }
                                        else
                                        {
                                            dialog.Text("Please come back to me with " + Database.rates.SoulP6 + " Conquer Points.");
                                            dialog.Option("Ahh sorry.", 255);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Please come back to me with " + Database.rates.SoulP6 + " Conquer Points..");
                                        dialog.Option("Ahh sorry.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 7://HeadGear
                                {
                                    if (client.Entity.ConquerPoints >= Database.rates.SoulP6)
                                    {
                                        if (client.Entity.ConquerPoints >= Database.rates.SoulP6)
                                        {
                                            client.Entity.ConquerPoints -= Database.rates.SoulP6;
                                            client.Inventory.Add(820071, 0, 1);
                                            dialog.Text("Congratulations you got P6 HeadGear");
                                            dialog.Option("Thanks.", 255);
                                            dialog.Send();
                                        }
                                        else
                                        {
                                            dialog.Text("Please come back to me with " + Database.rates.SoulP6 + " Conquer Points.");
                                            dialog.Option("Ahh sorry.", 255);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Please come back to me with " + Database.rates.SoulP6 + " Conquer Points..");
                                        dialog.Option("Ahh sorry.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 5://Bag
                                {
                                    if (client.Entity.ConquerPoints >= Database.rates.SoulP6)
                                    {
                                        if (client.Entity.ConquerPoints >= Database.rates.SoulP6)
                                        {
                                            client.Entity.ConquerPoints -= Database.rates.SoulP6;
                                            client.Inventory.Add(821032, 0, 1);
                                            dialog.Text("Congratulations you got P6 Bag");
                                            dialog.Option("Thanks.", 255);
                                            dialog.Send();
                                        }
                                        else
                                        {
                                            dialog.Text("Please come back to me with " + Database.rates.SoulP6 + " Conquer Points.");
                                            dialog.Option("Ahh sorry.", 255);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Please come back to me with " + Database.rates.SoulP6 + " Conquer Points..");
                                        dialog.Option("Ahh sorry.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 4://Bracelet
                                {
                                    if (client.Entity.ConquerPoints >= Database.rates.SoulP6)
                                    {
                                        if (client.Entity.ConquerPoints >= Database.rates.SoulP6)
                                        {
                                            client.Entity.ConquerPoints -= Database.rates.SoulP6;
                                            client.Inventory.Add(823056, 0, 1);
                                            dialog.Text("Congratulations you got P6 Bracelet");
                                            dialog.Option("Thanks.", 255);
                                            dialog.Send();
                                        }
                                        else
                                        {
                                            dialog.Text("Please come back to me with " + Database.rates.SoulP6 + " Conquer Points.");
                                            dialog.Option("Ahh sorry.", 255);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Please come back to me with " + Database.rates.SoulP6 + " Conquer Points..");
                                        dialog.Option("Ahh sorry.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 1://ring
                                {
                                    if (client.Entity.ConquerPoints >= Database.rates.SoulP6)
                                    {
                                        if (client.Entity.ConquerPoints >= Database.rates.SoulP6)
                                        {
                                            client.Entity.ConquerPoints -= Database.rates.SoulP6;
                                            client.Inventory.Add(823055, 0, 1);
                                            dialog.Text("Congratulations you got P6 Ring");
                                            dialog.Option("Thanks.", 255);
                                            dialog.Send();
                                        }
                                        else
                                        {
                                            dialog.Text("Please come back to me with " + Database.rates.SoulP6 + " Conquer Points.");
                                            dialog.Option("Ahh sorry.", 255);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Please come back to me with " + Database.rates.SoulP6 + " Conquer Points..");
                                        dialog.Option("Ahh sorry.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 3://Necklace
                                {
                                    if (client.Entity.ConquerPoints >= Database.rates.SoulP6)
                                    {
                                        if (client.Entity.ConquerPoints >= Database.rates.SoulP6)
                                        {
                                            client.Entity.ConquerPoints -= Database.rates.SoulP6;
                                            client.Inventory.Add(821031, 0, 1);
                                            dialog.Text("Congratulations you got P6 Necklace");
                                            dialog.Option("Thanks.", 255);
                                            dialog.Send();
                                        }
                                        else
                                        {
                                            dialog.Text("Please come back to me with " + Database.rates.SoulP6 + " Conquer Points.");
                                            dialog.Option("Ahh sorry.", 255);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Please come back to me with " + Database.rates.SoulP6 + " Conquer Points..");
                                        dialog.Option("Ahh sorry.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 2://Boot
                                {
                                    if (client.Entity.ConquerPoints >= Database.rates.SoulP6)
                                    {
                                        if (client.Entity.ConquerPoints >= Database.rates.SoulP6)
                                        {
                                            client.Entity.ConquerPoints -= Database.rates.SoulP6;
                                            client.Inventory.Add(824017, 0, 1);
                                            dialog.Text("Congratulations you got P6 Boot");
                                            dialog.Option("Thanks.", 255);
                                            dialog.Send();
                                        }
                                        else
                                        {
                                            dialog.Text("Please come back to me with " + Database.rates.SoulP6 + " Conquer Points.");
                                            dialog.Option("Ahh sorry.", 255);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Please come back to me with " + Database.rates.SoulP6 + " Conquer Points..");
                                        dialog.Option("Ahh sorry.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                        }
                        break;
                    }
                #endregion
                #region New Level UP NPC
                case 801://and this id
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("if Your level 130+ I Can Give you 1 Level for just " + Database.rates.LevelUp + " Cps");
                                    dialog.Option("Level Me Up Please.", 1);
                                    dialog.Option("Have a good day.", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    if (client.Entity.Level >= 130 && client.Entity.Level < 140)
                                    {
                                        if (client.Entity.ConquerPoints >= Database.rates.LevelUp)
                                        {
                                            client.Entity.ConquerPoints -= Database.rates.LevelUp;

                                            client.Entity.Level++;
                                            client.Entity.Experience = 0;
                                            if (client.Entity.Reborn == 0)
                                            {
                                                Database.DataHolder.GetStats(client.Entity.Class, client.Entity.Level, client);
                                                client.CalculateStatBonus();
                                                client.CalculateHPBonus();
                                                client.GemAlgorithm();
                                            }
                                        }
                                        else
                                        {
                                            dialog.Text("Please come back to me with " + Database.rates.LevelUp + " Conquer Points.");
                                            dialog.Option("Ahh sorry.", 255);
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Please come back When you are past 130 And lower than 140.");
                                        dialog.Option("Ahh sorry.", 255);
                                    }
                                    break;
                                }
                        }
                        break;
                    }
                #endregion
                #region New Garments/Talis
                case 802:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Hey there im the new master upgrading your Garment for " + Database.rates.DamageGarment + " CPS and Talismans for " + Database.rates.DamageTails + " Cps each Talisman, What would you want?");
                                    dialog.Text("They will be Enchanted with 255, and blessed -7.");
                                    dialog.Option("Garment.", 1);
                                    dialog.Option("HeavenFan.", 2);
                                    dialog.Option("StarTower.", 3);
                                    dialog.Option("Nothing, Have a good day.", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    if (client.Entity.ConquerPoints >= Database.rates.DamageGarment)
                                    {
                                        IConquerItem i = client.Equipment.TryGetItem(ConquerItem.Garment);
                                        if (i != null)
                                        {
                                            if (i.Bless != 7)
                                            {
                                                client.Entity.ConquerPoints -= Database.rates.DamageGarment;

                                                i.Bless = 7;
                                                i.Enchant = 255;
                                                ConquerItemTable.UpdateBless(i);
                                                ConquerItemTable.UpdateEnchant(i);

                                                i.Send(client);
                                                dialog.Text("Sucess your item is now -7 255 HP Check for your self.");
                                                dialog.Option("Thanks.", 255);
                                            }
                                            else
                                            {
                                                dialog.Text("your item already -7 Hp 255");
                                                dialog.Option("Ahh sorry.", 255);
                                            }
                                        }
                                        else
                                        {
                                            dialog.Text("Please Equip Your Garment First");
                                            dialog.Option("Ahh sorry.", 255);
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Please come back to me with " + Database.rates.DamageGarment + " Conquer Points.");
                                        dialog.Option("Ahh sorry.", 255);
                                    }
                                    break;
                                }
                            case 2:
                            case 3:
                                {
                                    if (client.Entity.ConquerPoints >= Database.rates.DamageTails)
                                    {
                                        IConquerItem i = client.Equipment.TryGetItem(npcRequest.OptionID == 2 ? ConquerItem.Fan : ConquerItem.Tower);
                                        if (i != null)
                                        {
                                            if (i.Bless != 7)
                                            {
                                                client.Entity.ConquerPoints -= Database.rates.DamageTails;

                                                i.Bless = 7;
                                                i.Enchant = 255;
                                                ConquerItemTable.UpdateBless(i);
                                                ConquerItemTable.UpdateEnchant(i);

                                                i.Send(client);
                                                dialog.Text("Sucess your item is now -7 255 HP Check for your self.");
                                                dialog.Option("Thanks.", 255);
                                            }
                                            else
                                            {
                                                dialog.Text("your item already -7 Hp 255");
                                                dialog.Option("Ahh sorry.", 255);
                                            }
                                        }
                                        else
                                        {
                                            dialog.Text(npcRequest.OptionID == 2 ? "Please Equip Your HeavenFan First." : "Please Equip your StarTower First.");
                                            dialog.Option("Ahh sorry.", 255);
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Please come back to me with " + Database.rates.DamageTails + " Conquer Points.");
                                        dialog.Option("Ahh sorry.", 255);
                                    }
                                    break;
                                }
                        }
                        break;
                    }
                #endregion
                #region PrizeNPC
                case 47:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Hey im PrizeNpc i can help you to claim any Donation item if you Donated to our Server.");
                                    dialog.Text(" " + Database.rates.servername + " be sure your donation Keep our server alive and be the best ");
                                    dialog.Text("server in all Conquer Private Servers!");
                                    dialog.Option("Claim Prize", 1);
                                    dialog.Option("I don't care.", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    if (Game.PrizeNPC.PrizeNpcInformations.ContainsKey(client.Entity.UID))
                                    {
                                        if (Game.PrizeNPC.PrizeNpcInformations[client.Entity.UID].type == 1)
                                        {
                                            dialog.Text("Congratulations, you claimed your donation pack " + Game.PrizeNPC.PrizeNpcInformations[client.Entity.UID].amount + " CPS");
                                            dialog.Option("Woow thanks!", 255);
                                            dialog.Send();

                                            client.Entity.ConquerPoints += Game.PrizeNPC.PrizeNpcInformations[client.Entity.UID].amount;
                                            Game.PrizeNPC.RemoveCps(client);

                                        }
                                        else
                                        {
                                            dialog.Text("Congratulations, you claimed your donation item");
                                            dialog.Option("Woow thanks!", 255);
                                            dialog.Send();

                                            client.Inventory.Add(Game.PrizeNPC.PrizeNpcInformations[client.Entity.UID].itemid, 0, 1);
                                            Game.PrizeNPC.RemoveItem(client);
                                        }
                                        break;
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry you dont have any prize to claim Atm ");
                                        dialog.Option("I don't care.", 255);
                                        dialog.Send();
                                        //break;
                                    }
                                    break;
                                }
                        }
                        break;
                    }
                #endregion
                #region HouseAdmin
                case 30156:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    if (ServerBase.Kernel.Maps.ContainsKey(client.Entity.UID))
                                    {
                                        dialog.Text("Hey there " + client.Entity.Name + " i'm HouseAdmin Would you like to Enter your");
                                        dialog.Text(" House, or maybe wana upgrade ur house by using UpgradeCert?");
                                        dialog.Text(", or buy Tokens and Furniture?");
                                        dialog.Option("Enter House", 2);
                                        //dialog.Option("Create House", 1);
                                        // dialog.Option("House Upgrade", 3);
                                        dialog.Option("Tokens,Furniture", 4);
                                        dialog.Option("Just Passing By!.", 255);
                                        dialog.Send();
                                    }
                                    else
                                    {
                                        dialog.Text("Hey there " + client.Entity.Name + " i'm HouseAdmin Would you like to create your");
                                        dialog.Text(" House you need to get an HousePermit so i can help you or u can go inside ur house if");
                                        dialog.Text(" you have one already , or maybe wana upgrade ur house by using UpgradeCert?");
                                        //dialog.Option("go to House", 2);
                                        dialog.Option("Create House", 1);
                                        //dialog.Option("House Upgrade", 3);
                                        dialog.Option("Buy Tokens,Furniture", 4);
                                        dialog.Option("Just Passing By!.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            #region tokens
                            case 4:
                                {
                                    dialog.Text("Hey there " + client.Entity.Name + " i'm HouseAdmin Would you like to buy house Tokens?");
                                    dialog.Text(" HousePermit Coast " + PhoenixProject.Database.rates.housepromete + " cps and HouseUpgrade Coast " + PhoenixProject.Database.rates.houseupgrade + " cps,");
                                    dialog.Text("ItemBox " + PhoenixProject.Database.rates.itembox + " cps what u want to buy?");
                                    dialog.Option("HousePermit", 5);
                                    //dialog.Option("UpgradeCert", 6);
                                    dialog.Option("ItemBox", 7);
                                    dialog.Option("Just Passing By!.", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 5:
                                {
                                    if (client.Entity.ConquerPoints > PhoenixProject.Database.rates.housepromete)
                                    {
                                        client.Inventory.Add(721170, 0, 1);
                                        client.Entity.ConquerPoints -= PhoenixProject.Database.rates.housepromete;
                                        dialog.Text("Congratulations you got HousePermit Token");
                                        dialog.Option("Thanks!", 255);
                                        dialog.Send();
                                    }
                                    else
                                    {
                                        dialog.Text("sorry you dont have Enough cps to get HousePermit");
                                        dialog.Option("Sorry!", 255);
                                        dialog.Send();
                                        //break;
                                    }
                                    break;
                                }
                            case 6:
                                {
                                    if (client.Entity.ConquerPoints > PhoenixProject.Database.rates.houseupgrade)
                                    {
                                        client.Inventory.Add(721174, 0, 1);
                                        client.Entity.ConquerPoints -= PhoenixProject.Database.rates.houseupgrade;
                                        dialog.Text("Congratulations you got UpgradeCert Token");
                                        dialog.Option("Thanks!", 255);
                                        dialog.Send();
                                    }
                                    else
                                    {
                                        dialog.Text("sorry you dont have Enough cps to get UpgradeCert Token");
                                        dialog.Option("Sorry!", 255);
                                        dialog.Send();
                                        //break;
                                    }
                                    break;
                                }
                            case 7:
                                {
                                    if (client.Entity.ConquerPoints > PhoenixProject.Database.rates.itembox)
                                    {
                                        client.Inventory.Add(721189, 0, 1);
                                        client.Entity.ConquerPoints -= PhoenixProject.Database.rates.itembox;
                                        dialog.Text("Congratulations you got ItemBox");
                                        dialog.Option("Thanks!", 255);
                                        dialog.Send();
                                    }
                                    else
                                    {
                                        dialog.Text("sorry you dont have Enough cps to get ItemBox");
                                        dialog.Option("Sorry!", 255);
                                        dialog.Send();
                                        //break;
                                    }
                                    break;
                                }
                            #endregion
                            #region Create
                            case 1:
                                {
                                    if (ServerBase.Kernel.Maps.ContainsKey(client.Entity.UID))
                                    {
                                        dialog.Text("Sorry you already have House cant help you");
                                        dialog.Option("Oh Sorry!.", 255);
                                        dialog.Send();
                                    }
                                    else
                                    {
                                        if (client.Inventory.Contains(721170, 1))
                                        {
                                            client.Inventory.Remove(721170, 1);
                                            Game.House.createhouse(client);
                                            dialog.Text("Congratulations you got New House Goodluck in " + PhoenixProject.Database.rates.servername + "");
                                            dialog.Option("Thanks!", 255);
                                            dialog.Send();
                                        }
                                        else
                                        {
                                            dialog.Text("sorry you dont have HousePermit come again later ");
                                            dialog.Option("sorry!", 255);
                                            dialog.Send();
                                        }
                                    }
                                    break;
                                }
                            #endregion
                            #region Upgrade
                            case 3:
                                {
                                    if (!ServerBase.Kernel.Maps.ContainsKey((ushort)client.Entity.UID))
                                    {
                                        dialog.Text("Sorry you dont have House come again later");
                                        dialog.Option("Oh Sorry!.", 255);
                                        dialog.Send();
                                    }
                                    else
                                    {
                                        if (ServerBase.Kernel.Maps[(ushort)client.Entity.UID].Level == 1)
                                        {
                                            if (client.Inventory.Contains(721174, 1))
                                            {
                                                client.Inventory.Remove(721174, 1);
                                                Game.House.UpgradeHouse(client);
                                                dialog.Text("Congratulations your House now Level [2] Goodluck in " + PhoenixProject.Database.rates.servername + "");
                                                dialog.Option("Thanks!", 255);
                                                dialog.Send();
                                            }
                                            else
                                            {
                                                dialog.Text("Sorry you dont have UpgradeCert come again later ");
                                                dialog.Option("sorry!", 255);
                                                dialog.Send();
                                            }
                                        }
                                        else
                                        {
                                            dialog.Text("Sorry your House Already Level 2 Cant upgrade it any more ");
                                            dialog.Option("sorry!", 255);
                                            dialog.Send();
                                        }
                                    }
                                    break;
                                }
                            #endregion
                            #region House Teleport
                            case 2:
                                {
                                    if (!ServerBase.Kernel.Maps.ContainsKey(client.Entity.UID))
                                    {
                                        dialog.Text("Sorry you dont have House you need to create one first");
                                        dialog.Option("Oh Sorry!.", 255);
                                        dialog.Send();
                                    }
                                    else
                                    {

                                        if (client != null)
                                        {
                                            if (client.Team != null && client.Team.TeamLeader)
                                            {
                                                foreach (Client.GameState Teammate in client.Team.Teammates)
                                                {
                                                    if (Teammate != null)
                                                    {
                                                        if (Teammate != null)
                                                        {

                                                            Game.Entity entity;
                                                            if (client.Screen.TryGetValue(Teammate.Entity.UID, out entity))
                                                            {
                                                                Teammate.Entity.Teleport(3024, client.Entity.UID, 89, 77);
                                                                //client.Entity.Teleport(1765, client.Entity.UID, 79, 58);
                                                            }

                                                        }
                                                    }
                                                }
                                                client.Entity.Teleport(3024, client.Entity.UID, 89, 77);
                                            }
                                            else
                                            {
                                                client.Entity.Teleport(3024, client.Entity.UID, 89, 77);

                                                //client.Entity.Teleport((ushort)client.Entity.UID, 79, 58);
                                            }
                                        }

                                    }
                                    break;
                                }
                            #endregion
                        }
                        break;
                    }
                #endregion
                #region ElitePkWinner
                case 5016:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Hey there " + client.Entity.Name + " Would you like to Claim Elite PKWar Prize?.");
                                    dialog.Text("You Should Have 20 ElitePoints so u can be in the top 8Th Champion.");
                                    //dialog.Text("faster than any player else will be in the Top8Champions and obtain Rewards GoodLuck!");
                                    dialog.Option("Yes Please", 1);
                                    dialog.Option("I don't care.", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    if (DateTime.Now.Hour == Game.KimoEvents.EBHour && DateTime.Now.Minute >= 5 && DateTime.Now.Minute < 20)
                                    {
                                        if (client.elitepoints >= 20)
                                        {
                                            if (Program.EliteRank < 8)
                                            {
                                                Program.EliteRank++;
                                                Game.Tournaments.EliteTournament.ObtinedReward(client);
                                                client.Entity.Teleport(1002, 391, 371);
                                            }
                                            else
                                            {
                                                client.Entity.ConquerPoints += 2000;
                                                client.Entity.Teleport(1002, 391, 371);
                                                dialog.Text("Sorry you late there was Top8Champions Already but u got 2k cps as gift ");
                                                dialog.Option("Thanks.", 255);
                                                dialog.Send();
                                            }

                                        }
                                        else
                                        {
                                            dialog.Text("Sorry you dont have 20 Elite Points yet come again later ");
                                            dialog.Option("sorry.", 255);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("sorry you can only claim prize btw " + Game.KimoEvents.EBHour + ":05 to " + Game.KimoEvents.EBHour + ":20 ");
                                        dialog.Option("I don't care.", 255);
                                        dialog.Send();
                                        break;
                                    }
                                    break;
                                }
                        }
                        break;
                    }
                #endregion
                #region ElitePk
                case 5015:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Hey there " + client.Entity.Name + " Would you like to join Elite PKWar?.");
                                    dialog.Text("you can SignUp during " + Game.KimoEvents.EBHour + ":05 to " + Game.KimoEvents.EBHour + ":20 and first 8 Players will get 20 Points.");
                                    dialog.Text("faster than any player else will be in the Top8Champions and obtain Rewards GoodLuck!");
                                    dialog.Option("Yes Please", 1);
                                    dialog.Option("I don't care.", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    if (DateTime.Now.Hour == Game.KimoEvents.EBHour && DateTime.Now.Minute >= 5 && DateTime.Now.Minute < 20)
                                    {
                                        if (!Game.Tournaments.EliteTournament.Top8.ContainsKey(client.Entity.UID))
                                        {
                                            Game.Tournaments.EliteTournament.AddMap(client);
                                        }
                                        else
                                        {
                                            dialog.Text("SORRY you cant signup again you already in top8 List ");
                                            dialog.Option("Woow thanks!", 255);
                                            dialog.Send();
                                            break;
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Elite Pk War is held during " + Game.KimoEvents.EBHour + ":05 to " + Game.KimoEvents.EBHour + ":20 you have 15 min to signup ");
                                        dialog.Option("I don't care.", 255);
                                        dialog.Send();
                                        break;
                                    }
                                    break;
                                }
                        }
                        break;
                    }
                #endregion
                #region BotJail
                case 5014:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Hello " + client.Entity.Name + " you in BotJail for using any bot or Spamming or Saying Shit .");
                                    dialog.Text("or using any speedhack or break the rules so i cant let u out till you pay " + Database.rates.BotJail + " CPS.");
                                    dialog.Option("wana Pay!", 1);
                                    dialog.Option("Just Passing By!.", 255);
                                    dialog.Avatar(116);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    if (client.Entity.ConquerPoints >= Database.rates.BotJail)
                                    {
                                        if (client.Entity.ConquerPoints >= Database.rates.BotJail)
                                        {
                                            client.Entity.ConquerPoints -= Database.rates.BotJail;
                                            client.Entity.Teleport(1002, 428, 243);
                                            dialog.Text("Take care and dont use  any aimbot or any programe and respect game rules!.");
                                            dialog.Option("Thanks.", 255);
                                            dialog.Avatar(116);
                                            dialog.Send();
                                        }
                                        break;
                                    }

                                    else
                                    {
                                        dialog.Text("Sorry i cant let you out you dont have " + Database.rates.BotJail + " cps in your inventory.");
                                        dialog.Option("Okay sorry.", 255);
                                        dialog.Avatar(116);
                                        dialog.Send();
                                    }
                                    break;
                                }
                        }
                        break;
                    }
                #endregion

                #region mal3'e
                /* #region TreasureBoxIn
                case 5013:
                    {
                        //TreasureBox
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Hello " + client.Entity.Name + " I'm TreasureBox i can let you Join the TreasureBox Event 1 time .");
                                    dialog.Text("Everyday u can signup and enjoy the event for 15 Minutes at this time["+Game.KimoEvents.THour+":30 "+Game.KimoEvents.THour+":45].");
                                    dialog.Option("Leme Join.", 1);
                                    dialog.Option("Just Passing By!.", 255);
                                    dialog.Avatar(116);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    if (DateTime.Now.Hour == Game.KimoEvents.THour && DateTime.Now.Minute >= 30 && DateTime.Now.Minute < 45)
                                    {
                                        if (DateTime.Now.Hour == Game.KimoEvents.THour && DateTime.Now.Minute >= 30 && DateTime.Now.Minute < 45)
                                        {
                                            client.Entity.Teleport(1225, 20, 16);
                                            dialog.Text("Found the Box and Click on it and get your prize GoodLuck!.");
                                            dialog.Option("Thanks.", 255);
                                            dialog.Avatar(116);
                                            dialog.Send();
                                        }
                                        break;
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry i cant let you join the event now come again later at the event times.");
                                        dialog.Option("Okay sorry.", 255);
                                        dialog.Avatar(116);
                                        dialog.Send();
                                    }
                                    break;
                                }
                        }
                        break;
                    }
                #endregion*/
                /* #region TreasureBox
                 case 5012:
                     {
                         //TreasureBox
                         switch (npcRequest.OptionID)
                         {
                             case 0:
                                 {
                                     if (ServerBase.Kernel.Rate(10))
                                     {
                                         client.Entity.Die(client.Entity);
                                         PhoenixProject.ServerBase.Kernel.SendWorldMessage(new Network.GamePackets.Message(" " + client.Entity.Name + " has found the  Wrong Box and Died!", System.Drawing.Color.White, Network.GamePackets.Message.World), PhoenixProject.ServerBase.Kernel.GamePool.Values);

                                         INpc npc2 = new Network.GamePackets.NpcSpawn();
                                         npc2.UID = 5012;
                                         npc2.Mesh = 9307;
                                         npc2.Type = Game.Enums.NpcType.Talker;
                                         npc2.X = (ushort)Program.BoxX;
                                         npc2.Y = (ushort)Program.BoxY;
                                         npc2.MapID = 1225;
                                         //client.Map.Removenpc(npc2);
                                        
                                         ServerBase.Kernel.Maps[1225].Removenpc(npc2);
                                         INpc npc = new Network.GamePackets.NpcSpawn();
                                         npc.UID = 5012;
                                         npc.Mesh = 9307;
                                         npc.Type = Game.Enums.NpcType.Talker;
                                         npc.X = 33;
                                         npc.Y = 5;
                                         Program.BoxX = npc.X;
                                         Program.BoxY = npc.Y;
                                         npc.MapID = 1225;
                                         ServerBase.Kernel.Maps[1225].AddNpc(npc);
                                         break;
                                     }
                                     if (ServerBase.Kernel.Rate(09))
                                     {
                                         client.Inventory.Add(730006, 6, 1);
                                         PhoenixProject.ServerBase.Kernel.SendWorldMessage(new Network.GamePackets.Message("Congratulations, " + client.Entity.Name + " has found the Box and Got +6 stone!", System.Drawing.Color.White, Network.GamePackets.Message.World), PhoenixProject.ServerBase.Kernel.GamePool.Values);
                                         INpc npc2 = new Network.GamePackets.NpcSpawn();
                                         npc2.UID = 5012;
                                         npc2.Mesh = 9307;
                                         npc2.Type = Game.Enums.NpcType.Talker;
                                         npc2.X = (ushort)Program.BoxX;
                                         npc2.Y = (ushort)Program.BoxY;
                                         npc2.MapID = 1225;
                                         //client.Map.Removenpc(npc2);
                                       
                                         ServerBase.Kernel.Maps[1225].Removenpc(npc2);
                                         INpc npc = new Network.GamePackets.NpcSpawn();
                                         npc.UID = 5012;
                                         npc.Mesh = 9307;
                                         npc.Type = Game.Enums.NpcType.Talker;
                                         npc.X = 11;
                                         npc.Y = 36;
                                         Program.BoxX = npc.X;
                                         Program.BoxY = npc.Y;
                                         npc.MapID = 1225;
                                         //client.Map.Removenpc(npc);
                                         //client.Map.AddNpc(npc);
                                         ServerBase.Kernel.Maps[1225].AddNpc(npc);
                                        
                                         break;
                                     }
                                     if (ServerBase.Kernel.Rate(8))
                                     {
                                         client.Entity.ConquerPoints += Database.rates.TreasureMin;
                                         PhoenixProject.ServerBase.Kernel.SendWorldMessage(new Network.GamePackets.Message("Congratulations, " + client.Entity.Name + " has found the Box and Got "+Database.rates.TreasureMin+" cps!", System.Drawing.Color.White, Network.GamePackets.Message.World), PhoenixProject.ServerBase.Kernel.GamePool.Values);
                                         INpc npc2 = new Network.GamePackets.NpcSpawn();
                                         npc2.UID = 5012;
                                         npc2.Mesh = 9307;
                                         npc2.Type = Game.Enums.NpcType.Talker;
                                         npc2.X = (ushort)Program.BoxX;
                                         npc2.Y = (ushort)Program.BoxY;
                                         npc2.MapID = 1225;
                                        
                                        
                                         ServerBase.Kernel.Maps[1225].Removenpc(npc2);
                                         INpc npc = new Network.GamePackets.NpcSpawn();
                                         npc.UID = 5012;
                                         npc.Mesh = 9307;
                                         npc.Type = Game.Enums.NpcType.Talker;
                                         npc.X = 82;
                                         npc.Y = 53;
                                         Program.BoxX = npc.X;
                                         Program.BoxY = npc.Y;
                                         npc.MapID = 1225;
                                         ServerBase.Kernel.Maps[1225].AddNpc(npc);
                                        
                                         break;
                                     }
                                     if (ServerBase.Kernel.Rate(7))
                                     {
                                         client.Entity.AddFlag(Network.GamePackets.Update.Flags2.IceBlock);
                                         client.Entity.FreezeTime = 10;
                                         client.Entity.FreezeStamp = Time32.Now;
                                         PhoenixProject.ServerBase.Kernel.SendWorldMessage(new Network.GamePackets.Message(" " + client.Entity.Name + " has found the Box and Got Freezed for 10 Seconeds!", System.Drawing.Color.White, Network.GamePackets.Message.World), PhoenixProject.ServerBase.Kernel.GamePool.Values);
                                         INpc npc2 = new Network.GamePackets.NpcSpawn();
                                         npc2.UID = 5012;
                                         npc2.Mesh = 9307;
                                         npc2.Type = Game.Enums.NpcType.Talker;
                                         npc2.X = (ushort)Program.BoxX;
                                         npc2.Y = (ushort)Program.BoxY;
                                         npc2.MapID = 1225;
                                        
                                        
                                         ServerBase.Kernel.Maps[1225].Removenpc(npc2);
                                         INpc npc = new Network.GamePackets.NpcSpawn();
                                         npc.UID = 5012;
                                         npc.Mesh = 9307;
                                         npc.Type = Game.Enums.NpcType.Talker;
                                         npc.X = 67;
                                         npc.Y = 83;
                                         Program.BoxX = npc.X;
                                         Program.BoxY = npc.Y;
                                         npc.MapID = 1225;
                                         ServerBase.Kernel.Maps[1225].AddNpc(npc);
                                        
                                        
                                         break;
                                     }
                                     if (ServerBase.Kernel.Rate(6))
                                     {
                                         client.Entity.ConquerPoints += 2000;
                                         PhoenixProject.ServerBase.Kernel.SendWorldMessage(new Network.GamePackets.Message("Congratulations, " + client.Entity.Name + " has found the Box and Got 2000 cps!", System.Drawing.Color.White, Network.GamePackets.Message.World), PhoenixProject.ServerBase.Kernel.GamePool.Values);
                                         INpc npc2 = new Network.GamePackets.NpcSpawn();
                                         npc2.UID = 5012;
                                         npc2.Mesh = 9307;
                                         npc2.Type = Game.Enums.NpcType.Talker;
                                         npc2.X = (ushort)Program.BoxX;
                                         npc2.Y = (ushort)Program.BoxY;
                                         npc2.MapID = 1225;
                                       
                                        
                                         ServerBase.Kernel.Maps[1225].Removenpc(npc2);
                                         INpc npc = new Network.GamePackets.NpcSpawn();
                                         npc.UID = 5012;
                                         npc.Mesh = 9307;
                                         npc.Type = Game.Enums.NpcType.Talker;
                                         npc.X = 60;
                                         npc.Y = 49;
                                         Program.BoxX = npc.X;
                                         Program.BoxY = npc.Y;
                                         npc.MapID = 1225;
                                         ServerBase.Kernel.Maps[1225].AddNpc(npc);
                                        
                                         break;
                                     }
                                     if (ServerBase.Kernel.Rate(5))
                                     {
                                         client.Entity.ConquerPoints += Database.rates.TreasureMax;
                                         PhoenixProject.ServerBase.Kernel.SendWorldMessage(new Network.GamePackets.Message("Congratulations, " + client.Entity.Name + " has found the Box and Got "+Database.rates.TreasureMax+" cps!", System.Drawing.Color.White, Network.GamePackets.Message.World), PhoenixProject.ServerBase.Kernel.GamePool.Values);
                                         INpc npc2 = new Network.GamePackets.NpcSpawn();
                                         npc2.UID = 5012;
                                         npc2.Mesh = 9307;
                                         npc2.Type = Game.Enums.NpcType.Talker;
                                         npc2.X = (ushort)Program.BoxX;
                                         npc2.Y = (ushort)Program.BoxY;
                                         npc2.MapID = 1225;
                                        
                                        
                                         ServerBase.Kernel.Maps[1225].Removenpc(npc2);
                                         INpc npc = new Network.GamePackets.NpcSpawn();
                                         npc.UID = 5012;
                                         npc.Mesh = 9307;
                                         npc.Type = Game.Enums.NpcType.Talker;
                                         npc.X = 30;
                                         npc.Y = 30;
                                         Program.BoxX = npc.X;
                                         Program.BoxY = npc.Y;
                                         npc.MapID = 1225;
                                         ServerBase.Kernel.Maps[1225].AddNpc(npc);
                                       
                                         break;
                                     }
                                     if (ServerBase.Kernel.Rate(4))
                                     {
                                         client.Entity.Teleport(1002, 428, 243);
                                         PhoenixProject.ServerBase.Kernel.SendWorldMessage(new Network.GamePackets.Message("Lmao , " + client.Entity.Name + " has found the Box and Teleported back to TwinCity!", System.Drawing.Color.White, Network.GamePackets.Message.World), PhoenixProject.ServerBase.Kernel.GamePool.Values);
                                         INpc npc2 = new Network.GamePackets.NpcSpawn();
                                         npc2.UID = 5012;
                                         npc2.Mesh = 9307;
                                         npc2.Type = Game.Enums.NpcType.Talker;
                                         npc2.X = (ushort)Program.BoxX;
                                         npc2.Y = (ushort)Program.BoxY;
                                         npc2.MapID = 1225;
                                        
                                        
                                         ServerBase.Kernel.Maps[1225].Removenpc(npc2);
                                         INpc npc = new Network.GamePackets.NpcSpawn();
                                         npc.UID = 5012;
                                         npc.Mesh = 9307;
                                         npc.Type = Game.Enums.NpcType.Talker;
                                         npc.X = 80;
                                         npc.Y = 72;
                                         Program.BoxX = npc.X;
                                         Program.BoxY = npc.Y;
                                         npc.MapID = 1225;
                                         ServerBase.Kernel.Maps[1225].AddNpc(npc);
                                        
                                         break;
                                     }
                                     if (ServerBase.Kernel.Rate(3))
                                     {
                                         client.Entity.Teleport(1002, 428, 243);
                                         PhoenixProject.ServerBase.Kernel.SendWorldMessage(new Network.GamePackets.Message("Lmao , " + client.Entity.Name + " has found the Box and Teleported back to TwinCity!", System.Drawing.Color.White, Network.GamePackets.Message.World), PhoenixProject.ServerBase.Kernel.GamePool.Values);
                                         INpc npc2 = new Network.GamePackets.NpcSpawn();
                                         npc2.UID = 5012;
                                         npc2.Mesh = 9307;
                                         npc2.Type = Game.Enums.NpcType.Talker;
                                         npc2.X = (ushort)Program.BoxX;
                                         npc2.Y = (ushort)Program.BoxY;
                                         npc2.MapID = 1225;
                                        
                                       
                                         ServerBase.Kernel.Maps[1225].Removenpc(npc2);
                                         INpc npc = new Network.GamePackets.NpcSpawn();
                                         npc.UID = 5012;
                                         npc.Mesh = 9307;
                                         npc.Type = Game.Enums.NpcType.Talker;
                                         npc.X = 38;
                                         npc.Y = 54;
                                         Program.BoxX = npc.X;
                                         Program.BoxY = npc.Y;
                                         npc.MapID = 1225;
                                         ServerBase.Kernel.Maps[1225].AddNpc(npc);
                                        
                                         break;
                                     }
                                     else
                                     {
                                         client.Entity.ConquerPoints += Database.rates.TreasureLow;
                                         PhoenixProject.ServerBase.Kernel.SendWorldMessage(new Network.GamePackets.Message("Congratulations, " + client.Entity.Name + " has found the Box and Got "+Database.rates.TreasureLow+" cps!", System.Drawing.Color.White, Network.GamePackets.Message.World), PhoenixProject.ServerBase.Kernel.GamePool.Values);
                                         INpc npc2 = new Network.GamePackets.NpcSpawn();
                                         npc2.UID = 5012;
                                         npc2.Mesh = 9307;
                                         npc2.Type = Game.Enums.NpcType.Talker;
                                         npc2.X = (ushort)Program.BoxX;
                                         npc2.Y = (ushort)Program.BoxY;
                                         npc2.MapID = 1225;
                                        
                                        
                                         ServerBase.Kernel.Maps[1225].Removenpc(npc2);

                                         INpc npc = new Network.GamePackets.NpcSpawn();
                                         npc.UID = 5012;
                                         npc.Mesh = 9307;
                                         npc.Type = Game.Enums.NpcType.Talker;
                                         npc.X = 41;
                                         npc.Y = 61;
                                         Program.BoxX = npc.X;
                                         Program.BoxY = npc.Y;
                                         npc.MapID = 1225;
                                         ServerBase.Kernel.Maps[1225].AddNpc(npc);
                                        
                                        
                                     }
                                     break;
                                 }
                         }
                         break;
                     }
                 #endregion*/
#endregion

                #region HorseStore
                case 6001:
                    {
                        switch (npcRequest.OptionID)
                        {

                            case 0:
                                {
                                    client.Send(new Data(true) { UID = client.Entity.UID, ID = Data.OpenWindow, dwParam = Data.WindowCommands.HorseRacingStore, wParam1 = client.Entity.X, wParam2 = client.Entity.Y });
                                    break;
                                }

                        }
                        break;
                    }
                #endregion
                #region BirdIsland Exchanger
                case 135:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Hello " + client.Entity.Name + " I'm the Last One In [Organizer-Stars] Quest and i can Give the Prize But you Must be have all i need .");
                                    dialog.Text("I Need 4 Joy-Coin and 4 Wish-Coin and 2 Adavncedjoy-Coin and All Boxes you Exchanged Before Are You Have All?.");
                                    dialog.Option("Yes I Have Give My Prize.", 1);
                                    dialog.Option("Sorry I Don't Have All Items.", 255);
                                    dialog.Avatar(116);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    if (DateTime.Now.Minute == 45)
                                    {
                                        if (client.Inventory.Contains(722894, 4))//Joy-Coin
                                        {
                                            if (client.Inventory.Contains(711021, 4))//Wish-Coin
                                            {
                                                if (client.Inventory.Contains(722895, 2))//Advancedjoy-Coin
                                                {
                                                    if (client.Inventory.Contains(720135, 1))//Nirvana-Box
                                                    {
                                                        if (client.Inventory.Contains(720233, 1))//FlyingRoosterE-gg
                                                        {
                                                            client.Inventory.Remove(722894, 4);
                                                            client.Inventory.Remove(711021, 4);
                                                            client.Inventory.Remove(722895, 2);
                                                            client.Inventory.Remove(720135, 1);
                                                            client.Inventory.Remove(720233, 1);
                                                            client.Inventory.Add(722178, 0, 1);
                                                            PhoenixProject.ServerBase.Kernel.SendWorldMessage(new Message("Congratulations! " + client.Entity.Name + " Has finshed Quest [Organizer-Stars] And Reward SurpriseBox.", System.Drawing.Color.DarkGray, Message.Center), PhoenixProject.ServerBase.Kernel.GamePool.Values);
                                                        }
                                                        else
                                                        {
                                                            dialog.Text("Sorry But You Don't Have All Things You Can't finish The Quest");
                                                            dialog.Option("Ahh sorry.", 255);
                                                            dialog.Avatar(116);
                                                            dialog.Send();
                                                        }
                                                        break;
                                                    }
                                                    else
                                                    {
                                                        dialog.Text("Sorry But You Don't Have All Things You Can't finish The Quest");
                                                        dialog.Option("Ahh sorry.", 255);
                                                        dialog.Avatar(116);
                                                        dialog.Send();
                                                    }
                                                    break;
                                                }
                                                else
                                                {
                                                    dialog.Text("Sorry But You Don't Have All Things You Can't finish The Quest.");
                                                    dialog.Option("Ahh sorry.", 255);
                                                    dialog.Avatar(116);
                                                    dialog.Send();
                                                }
                                                break;
                                            }
                                            else
                                            {
                                                dialog.Text("Sorry But You Don't Have All Things You Can't finish The Quest.");
                                                dialog.Option("Ahh sorry.", 255);
                                                dialog.Avatar(116);
                                                dialog.Send();
                                            }
                                            break;
                                        }
                                        else
                                        {
                                            dialog.Text("Sorry But You Don't Have All Things You Can't finish The Quest.");
                                            dialog.Option("Ahh sorry.", 255);
                                            dialog.Avatar(116);
                                            dialog.Send();
                                        }
                                        break;
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry You Can Only Claim Your Reward At Minute 45.");
                                        dialog.Option("Okay sorry Iam Will Waiting.", 255);
                                        dialog.Avatar(116);
                                        dialog.Send();
                                    }
                                    break;
                                }
                        }
                        break;
                    }
                #endregion
                #region Ape City Exchanger
                case 139:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Hello " + client.Entity.Name + " I Will take you item and give you FlyingRoosterE-gg Have you all i need ?.");
                                    dialog.Option("Yes i have All You Need.", 1);
                                    dialog.Option("Sorry I Don't Have All Items.", 255);
                                    dialog.Avatar(116);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    if (client.Inventory.Contains(711252, 3))//France-Fancard
                                    {
                                        if (client.Inventory.Contains(711253, 3))//Mexico-Fancard
                                        {
                                            if (client.Inventory.Contains(722682, 1))//Colorful-Card
                                            {
                                                client.Inventory.Remove(711252, 3);
                                                client.Inventory.Remove(711253, 3);
                                                client.Inventory.Remove(722682, 1);
                                                client.Inventory.Add(720233, 0, 1);
                                                PhoenixProject.ServerBase.Kernel.SendWorldMessage(new Message("Congratulations! " + client.Entity.Name + " Has 2nd Phase in Quest [Organizer-Stars].", System.Drawing.Color.DarkGray, Message.Center), PhoenixProject.ServerBase.Kernel.GamePool.Values);
                                            }
                                            else
                                            {
                                                dialog.Text("Sorry You don't Have All Items I Can't Exchange.");
                                                dialog.Option("Ahh sorry.", 255);
                                                dialog.Avatar(116);
                                                dialog.Send();
                                            }
                                            break;
                                        }
                                        else
                                        {
                                            dialog.Text("Sorry You don't Have All Items I Can't Exchange.");
                                            dialog.Option("Ahh Sorry.", 255);
                                            dialog.Avatar(116);
                                            dialog.Send();
                                        }
                                        break;
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry You don't Have All Items I Can't Exchange.");
                                        dialog.Option("Ahh sorry.", 255);
                                        dialog.Avatar(116);
                                        dialog.Send();
                                    }
                                    break;
                                }
                        }
                        break;
                    }
                #endregion
                #region Phoenix Castle Exchanger
                case 138:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Hello " + client.Entity.Name + " I Can Exchange 3 Raple-Books and 2 Surpise-Books and 1 Corhm-Book to Sheafy-Box.");
                                    dialog.Option("I Have all what you need.", 1);
                                    dialog.Option("Sorry I Don't Have The Items.", 255);
                                    dialog.Avatar(116);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    if (client.Inventory.Contains(710222, 5))//Poem-Book
                                    {
                                        if (client.Inventory.Contains(710852, 3))//Literary-Book
                                        {
                                            if (client.Inventory.Contains(711138, 1))//Copy-Book
                                            {
                                                client.Inventory.Remove(710222, 5);
                                                client.Inventory.Remove(710852, 3);
                                                client.Inventory.Remove(711138, 1);
                                                client.Inventory.Add(720135, 0, 1);
                                                PhoenixProject.ServerBase.Kernel.SendWorldMessage(new Message("Congratulations! " + client.Entity.Name + " Has 1st Phase in Quest [Organizer-Stars].", System.Drawing.Color.DarkGray, Message.Center), PhoenixProject.ServerBase.Kernel.GamePool.Values);
                                            }
                                            else
                                            {
                                                dialog.Text("Sorry You Don't Have The Books I Can't Exchange.");
                                                dialog.Option("Ahh sorry.", 255);
                                                dialog.Avatar(116);
                                                dialog.Send();
                                            }
                                            break;
                                        }
                                        else
                                        {
                                            dialog.Text("Sorry You Don't Have The Books I Can't Exchange.");
                                            dialog.Option("Ahh sorry.", 255);
                                            dialog.Avatar(116);
                                            dialog.Send();
                                        }
                                        break;
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry You Don't Have The Books I Can't Exchange.");
                                        dialog.Option("Ahh sorry.", 255);
                                        dialog.Avatar(116);
                                        dialog.Send();
                                    }
                                    break;
                                }
                        }
                        break;
                    }
                #endregion
                #region Organizer-Stars Quest Admin
                case 136:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Hello " + client.Entity.Name + "!, on quest [Orgnaizer-Stars] Can I Will See You The Stages For This Quest.");
                                    dialog.Option("I Will Start Part1 [Lev100].", 1);
                                    dialog.Option("I Will Start Part2 [Lev115].", 2);
                                    dialog.Option("I Will Start Part3 [Lev120].", 3);
                                    dialog.Avatar(116);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    if (client.Entity.Level >= 100)
                                    {
                                        dialog.Text("[First-Stage] On Quest [Organizer-Stars] Go To Twin To Kill Apparition and Get ");
                                        dialog.Text("Five Poem-Books and Go To Phoenix. to Kill Bandit and Get three Literary-Books ");
                                        dialog.Text("and Go To Desert To Kill HillMonster and Get One Copy-Book Then Give it to Casper-M In Phoenix Castle");
                                        dialog.Avatar(116);
                                        dialog.Send();
                                        break;
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry You Are Not Level 100 You Can't Start The Part1");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(116);
                                        dialog.Send();
                                        break;
                                    }
                                }
                            case 2:
                                {
                                    if (client.Entity.Level >= 115)
                                    {
                                        dialog.Text("[Second-Stage] On Quest [Organizer-Stars] Go To Twin To Kill Robin and Get Three France-Fan-Card and Go To Phoenix To Kill ");
                                        dialog.Text("Ratling and Get Three Mexico-Fan-Card and Go To Desert To Kill BladeGhost and Get One Colorful-Card Then Give it To Casper-M2 In Ape City");
                                        dialog.Option("Ok Iam going.", 1);
                                        dialog.Avatar(116);
                                        dialog.Send();
                                        break;
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry You Are Not Level 115 You Can't Start The Part2");
                                        dialog.Option("Ohh Sorry.", 1);
                                        dialog.Avatar(116);
                                        dialog.Send();
                                        break;
                                    }
                                }
                            case 3:
                                {
                                    if (client.Entity.Level >= 120)
                                    {

                                        dialog.Text("[Third-Stage] On Quest [Organizer-Stars] This the last part of the Quest and it is might be hard it is in Some Cities ");
                                        dialog.Option("Okay Thank you For Helping Me.", 255);
                                        dialog.Avatar(116);
                                        dialog.Send();
                                        break;
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry You Are Not Level 120 You Can't Start The Part3");
                                        dialog.Option("Ahh Sorry I Will Get It.", 255);
                                        dialog.Avatar(116);
                                        dialog.Send();
                                    }
                                    break;
                                }
                        }
                        break;
                    }
                #endregion
                #region EliteGw
                case 115522:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Hey there " + client.Entity.Name + " Would you like to Join Elite GW?.");
                                    dialog.Text("or claim the Prize?, you can join Every day expect Saturday and Sunday At " + Game.KimoEvents.EGHour + ":00 to " + Game.KimoEvents.EGEndHour + ":00.");
                                    dialog.Text("and the winner Guild Leader will get " + PhoenixProject.Database.rates.EliteGw + " cps after it finish u have 5 minutes to claim?.");
                                    dialog.Option("Join Elite GW!", 1);
                                    dialog.Option("Claim Prize.", 5);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    if (DateTime.Now.DayOfWeek != DayOfWeek.Saturday && DateTime.Now.DayOfWeek != DayOfWeek.Sunday)
                                    {
                                        if (DateTime.Now.Hour >= Game.KimoEvents.EGHour && DateTime.Now.Hour < Game.KimoEvents.EGEndHour)
                                        {
                                            client.Entity.Teleport(2071, 47, 131);
                                        }
                                        else
                                        {
                                            dialog.Text("Sorry you can only join Btw " + Game.KimoEvents.EGHour + ":00 to " + Game.KimoEvents.EGEndHour + ":59!");
                                            dialog.Option("okay", 255);
                                            dialog.Send();
                                            break;
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Hey there " + client.Entity.Name + " Elite GuildWar not running in Saturday or Sunday");
                                        dialog.Option("okay", 255);
                                        dialog.Send();
                                        break;
                                    }
                                    break;
                                }
                            case 5:
                                {
                                    //Daily.CheackAlive();
                                    if (DateTime.Now.Hour == Game.KimoEvents.EGEndHour && DateTime.Now.Minute >= 00 && DateTime.Now.Minute < 05)
                                    {
                                        if (client.Guild != null)
                                        {
                                            if (client.Guild.PoleKeeper2 && EliteGuildWar.Claim == 0 && client.AsMember.Rank == PhoenixProject.Game.Enums.GuildMemberRank.GuildLeader)
                                            {
                                                EliteGuildWar.Claim += 1;
                                                PhoenixProject.ServerBase.Kernel.SendWorldMessage(new Message("Congratulations! " + client.Entity.Name + " claimed the prize " + PhoenixProject.Database.rates.EliteGw + " ConquerPoints for winning the Elite GuildWar.", System.Drawing.Color.Black, Message.Center), PhoenixProject.ServerBase.Kernel.GamePool.Values);
                                                client.Entity.ConquerPoints += PhoenixProject.Database.rates.EliteGw;
                                            }
                                            else
                                            {
                                                dialog.Text("sorry u dont have any prize to claim....");
                                                dialog.Option("okay", 255);
                                                dialog.Send();
                                                break;
                                            }
                                        }
                                        else
                                        {
                                            dialog.Text("sorry u dont have any prize to claim");
                                            dialog.Option("okay", 255);
                                            dialog.Send();
                                            break;
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Hey there " + client.Entity.Name + " You can only claim the prize btw " + Game.KimoEvents.EGEndHour + ":00 to " + Game.KimoEvents.EGEndHour + ":05 Expect Saturday and Sunday");
                                        dialog.Option("okay", 255);
                                        dialog.Send();
                                        break;
                                    }
                                    break;
                                }
                        }
                        break;
                    }
                #endregion
                #region ElitePole
                case 811:
                    {
                        dialog.Text("Welcome in Elite GuildWar HaveFun!.");
                        dialog.Option("Thanks.", 255);
                        dialog.Send();
                        break;
                    }
                #endregion
                #region HuntMaps-lvlmaps
                case 445532:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Hey there " + client.Entity.Name + " i can help you to find good maps to lvling up and hunt just choose what u want?.");
                                    dialog.Option("LvlingMaps", 1);
                                    dialog.Option("Hunting Maps", 2);
                                    dialog.Option("Just Passing By!.", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    dialog.Text("choose which floor you wana go inside to level up ?.");
                                    dialog.Option("Floor[1]", 3);
                                    dialog.Option("Floor[2]", 4);
                                    dialog.Option("Floor[3]", 5);
                                    dialog.Option("Floor[4]", 6);
                                    dialog.Send();
                                    break;
                                }
                            case 3:
                                {
                                    client.Entity.Teleport(8800, 005, 290);
                                    break;
                                }
                            case 4:
                                {
                                    client.Entity.Teleport(8800, 005, 290);
                                    break;
                                }
                            case 5:
                                {
                                    client.Entity.Teleport(8800, 005, 290);
                                    break;
                                }
                            case 6:
                                {
                                    client.Entity.Teleport(8800, 005, 290);
                                    break;
                                }
                            case 2:
                                {
                                    dialog.Text("choose which floor you wana go inside to Hunt for cps ?.");
                                    dialog.Option("Floor[1]", 7);
                                    dialog.Option("Floor[2]", 8);
                                    dialog.Option("Floor[3]", 9);
                                    dialog.Option("Floor[4]", 10);
                                    dialog.Send();
                                    break;
                                }
                            case 7:
                                {
                                    client.Entity.Teleport(8800, 005, 290);
                                    break;
                                }
                            case 8:
                                {
                                    client.Entity.Teleport(8800, 005, 290);
                                    break;
                                }
                            case 9:
                                {
                                    client.Entity.Teleport(8800, 005, 290);
                                    break;
                                }
                            case 10:
                                {
                                    client.Entity.Teleport(8800, 005, 290);
                                    break;
                                }
                        }
                        break;
                    }
                #endregion
                #region Name Changer
                case 803:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Yes yes, Im finally here Name Changer!, I Charge " + PhoenixProject.Database.rates.ChangeName + " Conquer Points.");
                                    dialog.Option("Cool Change My Name.", 5);
                                    dialog.Option("Have a good day.", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 5:
                                {
                                    client.Send(new Data(true) { UID = client.Entity.UID, ID = Data.OpenWindow, dwParam = 489, wParam1 = client.Entity.X, wParam2 = client.Entity.Y });
                                    break;
                                }

                        }
                        break;
                    }
                #endregion
                #region PK less than
                case 242242:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    if (client.Entity.PKPoints < 30)
                                    {
                                        dialog.Text("i cant less your pk any more you are safe Now");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(116);
                                        dialog.Send();
                                        break;
                                    }
                                    dialog.Text("Hay I am Pkpoints lesser i can less your pk from 30 or higher");
                                    dialog.Option("-[30] PKponits 1000 cps.", 1);
                                    dialog.Option("-[60] PKponits 2000 cps", 2);
                                    dialog.Option("-[90] PKponits 3000 cps", 3);
                                    dialog.Option("-[120] PKponits 4000 cps", 4);
                                    dialog.Option("-[150] PKponits 5000 cps", 5);
                                    dialog.Option("-[200] PKponits 6000 cps", 6);
                                    dialog.Option("-[250] PKponits 7000 cps", 7);
                                    dialog.Option("Just passing by.", 255);
                                    dialog.Avatar(116);
                                    dialog.Send();
                                    break;

                                }
                            case 1:
                                {
                                    if (client.Entity.PKPoints >= 30)
                                    {
                                        if (client.Entity.ConquerPoints >= 1000)
                                        {
                                            client.Entity.ConquerPoints -= 1000;
                                            client.Entity.PKPoints -= 30;
                                        }
                                        else
                                        {
                                            dialog.Text("Please take 1000 cps.");
                                            dialog.Option("I see.", 255);
                                            dialog.Avatar(116);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("your pk points is low must higher than." + client.Entity.PKPoints);
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(116);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 2:
                                {
                                    if (client.Entity.PKPoints >= 60)
                                    {
                                        if (client.Entity.ConquerPoints >= 2000)
                                        {
                                            client.Entity.ConquerPoints -= 2000;
                                            client.Entity.PKPoints -= 60;
                                        }
                                        else
                                        {
                                            dialog.Text("Please take 2000 cps.");
                                            dialog.Option("I see.", 255);
                                            dialog.Avatar(116);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("your pk points is low must higher than." + client.Entity.PKPoints);
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(116);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 3:
                                {
                                    if (client.Entity.PKPoints >= 90)
                                    {
                                        if (client.Entity.ConquerPoints >= 3000)
                                        {
                                            client.Entity.ConquerPoints -= 3000;
                                            client.Entity.PKPoints -= 90;
                                        }
                                        else
                                        {
                                            dialog.Text("Please take 3000 cps.");
                                            dialog.Option("I see.", 255);
                                            dialog.Avatar(116);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("your pk points is low must higher than." + client.Entity.PKPoints);
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(116);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 4:
                                {
                                    if (client.Entity.PKPoints >= 120)
                                    {
                                        if (client.Entity.ConquerPoints >= 4000)
                                        {
                                            client.Entity.ConquerPoints -= 4000;
                                            client.Entity.PKPoints -= 120;
                                        }
                                        else
                                        {
                                            dialog.Text("Please take 4000 cps.");
                                            dialog.Option("I see.", 255);
                                            dialog.Avatar(116);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("your pk points is low must higher than." + client.Entity.PKPoints);
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(116);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 5:
                                {
                                    if (client.Entity.PKPoints >= 150)
                                    {
                                        if (client.Entity.ConquerPoints >= 5000)
                                        {
                                            client.Entity.ConquerPoints -= 5000;
                                            client.Entity.PKPoints -= 150;
                                        }
                                        else
                                        {
                                            dialog.Text("Please take 5000 cps.");
                                            dialog.Option("I see.", 255);
                                            dialog.Avatar(116);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("your pk points is low must higher than." + client.Entity.PKPoints);
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(116);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 6:
                                {
                                    if (client.Entity.PKPoints >= 200)
                                    {
                                        if (client.Entity.ConquerPoints >= 6000)
                                        {
                                            client.Entity.ConquerPoints -= 6000;
                                            client.Entity.PKPoints -= 200;
                                        }
                                        else
                                        {
                                            dialog.Text("Please take 6000 cps.");
                                            dialog.Option("I see.", 255);
                                            dialog.Avatar(116);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("your pk points is low must higher than." + client.Entity.PKPoints);
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(116);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 7:
                                {
                                    if (client.Entity.PKPoints >= 250)
                                    {
                                        if (client.Entity.ConquerPoints >= 7000)
                                        {
                                            client.Entity.ConquerPoints -= 7000;
                                            client.Entity.PKPoints -= 250;
                                        }
                                        else
                                        {
                                            dialog.Text("Please take 7000 cps.");
                                            dialog.Option("I see.", 255);
                                            dialog.Avatar(116);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("your pk points is low must higher than." + client.Entity.PKPoints);
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(116);
                                        dialog.Send();
                                    }
                                    break;
                                }
                        }
                        break;
                    }
                #endregion
                #region Prize Seller
                case 200033:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Greetings! I'm a great seller, I have the most precious items in the entire ");
                                    dialog.Text("world. What do you want to get?");
                                    dialog.Option("GoldPrize [10 LordTokens]", 1);
                                    dialog.Option("GoldCup [9 LordTokens]", 2);
                                    dialog.Option("GoldTrophy [8 LordTokens]", 3);
                                    dialog.Option("SilverPrize [6 LordTokens]", 4);
                                    dialog.Option("BronzePrize  [4 LordTokens]", 5);
                                    dialog.Option("Just passing by.", 255);
                                    dialog.Avatar(85);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    if (client.Inventory.Contains(723467, 10))
                                    {

                                        client.Inventory.Remove(723467, 10);
                                        client.Inventory.Add(2100075, 0, 1);
                                    }
                                    else
                                    {
                                        dialog.Text("You don't have enough 10 LordTokens !");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(85);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 2:
                                {
                                    if (client.Inventory.Contains(723467, 9))
                                    {

                                        client.Inventory.Remove(723467, 9);
                                        client.Inventory.Add(2100095, 0, 1);




                                    }
                                    else
                                    {
                                        dialog.Text("You don't have enough 9 LordTokens !");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(85);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 3:
                                {
                                    if (client.Inventory.Contains(723467, 8))
                                    {

                                        client.Inventory.Remove(723467, 8);
                                        client.Inventory.Add(2100085, 0, 1);




                                    }
                                    else
                                    {
                                        dialog.Text("You don't have enough 8 LordTokens !");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(85);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 4:
                                {
                                    if (client.Inventory.Contains(723467, 6))
                                    {

                                        client.Inventory.Remove(723467, 6);
                                        client.Inventory.Add(2100065, 0, 1);

                                    }
                                    else
                                    {
                                        dialog.Text("You don't have enough 6 LordTokens !");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(85);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 5:
                                {
                                    if (client.Inventory.Contains(723467, 4))
                                    {

                                        client.Inventory.Remove(723467, 4);
                                        client.Inventory.Add(2100055, 0, 1);

                                    }
                                    else
                                    {
                                        dialog.Text("You don't have enough 4 LordTokens !");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(85);
                                        dialog.Send();
                                    }
                                    break;
                                }
                        }
                        break;
                    }
                #endregion
                #region ChangeRb
                case 112251:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    if (client.Entity.Reborn == 2 && client.Entity.Level >= 120)
                                    {
                                        dialog.Text("I am the ReincarnationSeer i can help you to change your second reborn Class you need OblivionDew");
                                        dialog.Text(" and " + PhoenixProject.Database.rates.Riencration + " cps in your inventory deal?");
                                        dialog.Option("i want to Change my Class.", 1);
                                        dialog.Option("i want to Buy OblivionDew.", 2);
                                        dialog.Option("Wait a minute.", 255);
                                        dialog.Send();
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry you need to be Seconed Reborn and Lv + 120.");
                                        dialog.Option("Alright.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 1:
                                {

                                    if (client.Entity.ConquerPoints >= PhoenixProject.Database.rates.Riencration)
                                    {
                                        client.Send(new Data(true) { UID = client.Entity.UID, ID = Data.OpenWindow, dwParam = Data.WindowCommands.Reincarnation, wParam1 = client.Entity.X, wParam2 = client.Entity.Y });
                                        //break;
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry you dont have " + PhoenixProject.Database.rates.Riencration + " cps in your inventory.");
                                        dialog.Option("Alright.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 2:
                                {
                                    if (client.Entity.ConquerPoints >= 2000)
                                    {
                                        dialog.Text("Do you Really want to Buy OblivionDew it cost 2,000 cps");
                                        dialog.Option("Yes.", 3);
                                        dialog.Option("Wait a minute.", 255);
                                        dialog.Send();
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry you dont Have 2,000 cps.");
                                        dialog.Option("Alright.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 3:
                                {
                                    if (client.Entity.ConquerPoints >= 2000)
                                    {
                                        client.Entity.ConquerPoints -= 2000;
                                        client.Inventory.Add(711083, 0, 1);
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry you dont Have 2000 cps in your bag.");
                                        dialog.Option("Why!?", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                        }
                        break;
                    }
                #endregion
                #region TopSpouse Join
                case 241241:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Hey there " + client.Entity.Name + " Would you like to join TopSpouse PKWar?.");
                                    dialog.Text("you should make Team and Join your Spouse in it so i can let you Join?.");
                                    dialog.Option("Yes Please", 1);
                                    dialog.Option("ClaimPrize", 2);
                                    dialog.Option("I don't care.", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    if (DateTime.Now.Hour == Game.KimoEvents.SpouseHour && DateTime.Now.Minute >= 00 && DateTime.Now.Minute < 05)
                                    {
                                        if (client.Team != null && client.Team.TeamLeader && client.Entity.Body == 1003 || client.Team != null && client.Team.TeamLeader && client.Entity.Body == 1004)
                                        {
                                            if (client.Team.SpouseWarFull)
                                            {
                                                foreach (Client.GameState Teammate in client.Team.Teammates)
                                                {
                                                    if (Teammate != null)
                                                    {
                                                        if (Teammate.Entity.Name == client.Entity.Spouse)
                                                        {
                                                            Teammate.Entity.Teleport(1090, 40, 50);
                                                            client.Entity.Teleport(1090, 40, 50);
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("TopSpouse Pk War is held during " + Game.KimoEvents.SpouseHour + ":00 to " + Game.KimoEvents.SpouseHour + ":05 and End " + Game.KimoEvents.SpouseHour + ":30 in every day");
                                        dialog.Text("and to let you Join you must be Team leader and have your spouse in the team");
                                        dialog.Text(" Note: only you and your Spouse in the Team so you can Join");
                                        dialog.Option("I don't care.", 255);
                                        dialog.Send();
                                        break;
                                    }
                                    break;
                                }
                            case 2:
                                {
                                    if (client.Inventory.Contains(722269, 1))
                                    {
                                        client.Inventory.Remove(722269, 1);
                                        Game.Flags.AddSpouse(client);
                                        client.Entity.AddFlag(Update.Flags.TopSpouse);
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry you dont have LoverBook i cant Help you");
                                        dialog.Option("I don't care.", 255);
                                        dialog.Send();
                                        break;
                                    }
                                    break;
                                }
                        }
                        break;
                    }
                #endregion
                #region TopSpouse Claim
                case 2314007:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Hey there " + client.Entity.Name + " Would you like to claim TopSpouse PKWar reward?.");
                                    dialog.Text("you should be the only man here your claim " + PhoenixProject.Database.rates.TopSpouse + " cps and 1 loverbook.");
                                    dialog.Text(" and claim halo from TwinCity CouplesPkGuide NPC?.");
                                    dialog.Option("ClaimPrize", 1);
                                    dialog.Option("I don't care.", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    if (DateTime.Now.Hour == Game.KimoEvents.SpouseHour && DateTime.Now.Minute > 06 && DateTime.Now.Minute < 30)
                                    {
                                        PhoenixProject.Game.ConquerStructures.Daily.CheackSpouse();
                                        if (PhoenixProject.Game.ConquerStructures.Daily.howmanyinmap3 == 1)
                                        {
                                            client.Entity.Teleport(1002, 429, 378);
                                            client.Entity.ConquerPoints += PhoenixProject.Database.rates.TopSpouse;
                                            client.Inventory.Add(722269, 0, 2);
                                            Kernel.SendWorldMessage(new Message("Congratulations! " + client.Entity.Name + " has claimed Prize for Couples pk for this day " + PhoenixProject.Database.rates.TopSpouse + " cps and 2 LoveBook!.", System.Drawing.Color.White, Message.Center), Kernel.GamePool.Values);
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry you can claim TopSpouse Prize if you the last man/women Here in The Map");
                                        dialog.Text(" Btw xx:06 xx:30");
                                        dialog.Option("oh i see!.", 255);
                                        dialog.Send();
                                        break;
                                    }
                                    break;
                                }
                        }
                        break;
                    }
                #endregion
                #region BattleGhost
                case 225584:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("I am the BattleGhost, i can help you to claim Bound Gears if u have?");
                                    dialog.Text("then Pick what Pack you want to Claim, Are You Ready?");
                                    dialog.Option("Ninja Pack.", 1);
                                    dialog.Option("Trojan Pack.", 2);
                                    dialog.Option("Monk Pack.", 3);
                                    dialog.Option("Archer Pack.", 4);
                                    dialog.Option("FireTaoist Pack.", 5);
                                    dialog.Option("WaterTaoist Pack.", 6);
                                    dialog.Option("Warrior Pack.", 7);
                                    dialog.Option("Pirate Pack.", 8);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    if (client.Inventory.Contains(720356, 1))
                                    {
                                        //(720356, 0, 1);//MerryPack
                                        dialog.Text("are you sure you want this Ninja Pack ?");
                                        dialog.Option("Sure.", 55);
                                        dialog.Option("Wait a minute.", 255);
                                        dialog.Send();
                                    }
                                    else
                                    {
                                        dialog.Text("sorry you dont have MerryPack in your Bag.");
                                        dialog.Option("Alright.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 2:
                                {
                                    if (client.Inventory.Contains(720356, 1))
                                    {
                                        //(720356, 0, 1);//MerryPack
                                        dialog.Text("are you sure you want this Trojan Pack ?");
                                        dialog.Option("Sure.", 15);
                                        dialog.Option("Wait a minute.", 255);
                                        dialog.Send();
                                    }
                                    else
                                    {
                                        dialog.Text("sorry you dont have MerryPack in your Bag.");
                                        dialog.Option("Alright.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 3:
                                {
                                    if (client.Inventory.Contains(720356, 1))
                                    {
                                        //(720356, 0, 1);//MerryPack
                                        dialog.Text("are you sure you want this Monk Pack ?");
                                        dialog.Option("Sure.", 65);
                                        dialog.Option("Wait a minute.", 255);
                                        dialog.Send();
                                    }
                                    else
                                    {
                                        dialog.Text("sorry you dont have MerryPack in your Bag.");
                                        dialog.Option("Alright.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 4:
                                {
                                    if (client.Inventory.Contains(720356, 1))
                                    {
                                        //(720356, 0, 1);//MerryPack
                                        dialog.Text("are you sure you want this Archer Pack ?");
                                        dialog.Option("Sure.", 45);
                                        dialog.Option("Wait a minute.", 255);
                                        dialog.Send();
                                    }
                                    else
                                    {
                                        dialog.Text("sorry you dont have MerryPack in your Bag.");
                                        dialog.Option("Alright.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 5:
                                {
                                    if (client.Inventory.Contains(720356, 1))
                                    {
                                        //(720356, 0, 1);//MerryPack
                                        dialog.Text("are you sure you want this FireTaoist Pack ?");
                                        dialog.Option("Sure.", 145);
                                        dialog.Option("Wait a minute.", 255);
                                        dialog.Send();
                                    }
                                    else
                                    {
                                        dialog.Text("sorry you dont have MerryPack in your Bag.");
                                        dialog.Option("Alright.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 6:
                                {
                                    if (client.Inventory.Contains(720356, 1))
                                    {
                                        //(720356, 0, 1);//MerryPack
                                        dialog.Text("are you sure you want this WaterTaoist Pack ?");
                                        dialog.Option("Sure.", 135);
                                        dialog.Option("Wait a minute.", 255);
                                        dialog.Send();
                                    }
                                    else
                                    {
                                        dialog.Text("sorry you dont have MerryPack in your Bag.");
                                        dialog.Option("Alright.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 7:
                                {
                                    if (client.Inventory.Contains(720356, 1))
                                    {
                                        //(720356, 0, 1);//MerryPack
                                        dialog.Text("are you sure you want this Warrior Pack ?");
                                        dialog.Option("Sure.", 25);
                                        dialog.Option("Wait a minute.", 255);
                                        dialog.Send();
                                    }
                                    else
                                    {
                                        dialog.Text("sorry you dont have MerryPack in your Bag.");
                                        dialog.Option("Alright.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 8:
                                {
                                    if (client.Inventory.Contains(720356, 1))
                                    {
                                        //(720356, 0, 1);//MerryPack
                                        dialog.Text("are you sure you want this Pirate Pack ?");
                                        dialog.Option("Sure.", 75);
                                        dialog.Option("Wait a minute.", 255);
                                        dialog.Send();
                                    }
                                    else
                                    {
                                        dialog.Text("sorry you dont have MerryPack in your Bag.");
                                        dialog.Option("Alright.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            #region BoundItems Trojan
                            case 15:
                                {
                                    uint itemid = 202009;//Tower
                                    uint itemid2 = 201009;//Fan
                                    uint itemid3 = 160019;//Boot
                                    uint itemid4 = 120029;//Necklace
                                    uint itemid5 = 150019;//Ring
                                    uint itemid6 = 117009;//Earrings
                                    uint itemid7 = 130009;//Armor
                                    uint itemid8 = 480019;//Club
                                    uint itemid9 = 410019;//Blade
                                    if (client.Inventory.Count <= 30)
                                    {
                                        if (client.Inventory.Contains(720356, 1))
                                        {
                                            ConquerItem item2 = new ConquerItem(true);
                                            item2.ID = itemid2;
                                            item2.Color = PhoenixProject.Game.Enums.Color.White;
                                            item2.Bound = true;
                                            item2.Plus = 8;
                                            item2.Durability = item2.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid2].Durability;
                                            client.Inventory.Add(item2, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd);

                                            ConquerItem item3 = new ConquerItem(true);
                                            item3.ID = itemid3;
                                            item3.Color = PhoenixProject.Game.Enums.Color.White;
                                            item3.Bound = true;
                                            item3.Plus = 8;
                                            item3.Durability = item3.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid3].Durability;
                                            client.Inventory.Add(item3, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd);

                                            ConquerItem item4 = new ConquerItem(true);
                                            item4.ID = itemid4;
                                            item4.Color = PhoenixProject.Game.Enums.Color.White;
                                            item4.Bound = true;
                                            item4.Plus = 8;
                                            item4.Durability = item4.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid4].Durability;
                                            client.Inventory.Add(item4, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd);

                                            ConquerItem item5 = new ConquerItem(true);
                                            item5.ID = itemid5;
                                            item5.Color = PhoenixProject.Game.Enums.Color.White;
                                            item5.Bound = true;
                                            item5.Plus = 8;
                                            item5.Durability = item5.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid5].Durability;
                                            client.Inventory.Add(item5, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd);

                                            ConquerItem item6 = new ConquerItem(true);
                                            item6.ID = itemid6;
                                            item6.Color = PhoenixProject.Game.Enums.Color.White;
                                            item6.Bound = true;
                                            item6.Plus = 8;
                                            item6.Durability = item6.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid6].Durability;
                                            client.Inventory.Add(item6, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd);

                                            ConquerItem item7 = new ConquerItem(true);
                                            item7.ID = itemid7;
                                            item7.Color = PhoenixProject.Game.Enums.Color.White;
                                            item7.Bound = true;
                                            item7.Plus = 8;
                                            item7.Durability = item7.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid7].Durability;
                                            client.Inventory.Add(item7, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd);

                                            ConquerItem item8 = new ConquerItem(true);
                                            item8.ID = itemid8;
                                            item8.Color = PhoenixProject.Game.Enums.Color.White;
                                            item8.Bound = true;
                                            item8.Plus = 8;
                                            item8.Durability = item8.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid8].Durability;
                                            client.Inventory.Add(item8, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd);

                                            ConquerItem item9 = new ConquerItem(true);
                                            item9.ID = itemid9;
                                            item9.Color = PhoenixProject.Game.Enums.Color.White;
                                            item9.Bound = true;
                                            item9.Plus = 8;
                                            item9.Durability = item9.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid9].Durability;
                                            client.Inventory.Add(item9, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd);



                                            ConquerItem item = new ConquerItem(true);
                                            item.ID = itemid;
                                            item.Color = PhoenixProject.Game.Enums.Color.White;
                                            item.Bound = true;
                                            item.Plus = 8;
                                            item.Durability = item.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid].Durability;
                                            Data data = new Data(true);
                                            data.ID = Data.OpenCustom;
                                            data.UID = client.Entity.UID;
                                            data.TimeStamp = Time32.Now;
                                            data.dwParam = 3382;
                                            data.wParam1 = client.Entity.X;
                                            data.wParam2 = client.Entity.Y;
                                            client.Send(data);
                                            if (client.Inventory.Add(item, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd))
                                            {
                                                client.Inventory.Remove(720356, 1);
                                                Network.GamePackets.NpcReply npc = new Network.GamePackets.NpcReply(6, "you have obtained Trojan Pack HaveFun in " + PhoenixProject.Database.rates.servername + "?");
                                                npc.OptionID = 255;
                                                client.Send(npc.ToArray());
                                            }
                                            else
                                            {
                                                dialog.Text("You need atleast one free slot in your inventory.");
                                                dialog.Option("Alright.", 255);
                                                dialog.Send();
                                            }
                                        }
                                        else
                                        {
                                            dialog.Text("sorry you dont have MerryPack in your Bag .");
                                            dialog.Option("Alright.", 255);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("You need to make atleast 10 free spots in your inventory.");
                                        dialog.Option("Alright.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            #endregion
                            #region BoundItems Warrior
                            case 25:
                                {
                                    uint itemid = 202009;//Tower
                                    uint itemid2 = 201009;//Fan
                                    uint itemid3 = 160019;//Boot
                                    uint itemid4 = 120029;//Necklace
                                    uint itemid5 = 150019;//Ring
                                    uint itemid6 = 117009;//Earrings
                                    uint itemid7 = 131009;//Armor
                                    uint itemid8 = 480019;//Club
                                    uint itemid9 = 900009;//Shield
                                    if (client.Inventory.Count <= 30)
                                    {
                                        if (client.Inventory.Contains(720356, 1))
                                        {
                                            ConquerItem item2 = new ConquerItem(true);
                                            item2.ID = itemid2;
                                            item2.Color = PhoenixProject.Game.Enums.Color.White;
                                            item2.Bound = true;
                                            item2.Plus = 8;
                                            item2.Durability = item2.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid2].Durability;
                                            client.Inventory.Add(item2, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd);

                                            ConquerItem item3 = new ConquerItem(true);
                                            item3.ID = itemid3;
                                            item3.Color = PhoenixProject.Game.Enums.Color.White;
                                            item3.Bound = true;
                                            item3.Plus = 8;
                                            item3.Durability = item3.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid3].Durability;
                                            client.Inventory.Add(item3, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd);

                                            ConquerItem item4 = new ConquerItem(true);
                                            item4.ID = itemid4;
                                            item4.Color = PhoenixProject.Game.Enums.Color.White;
                                            item4.Bound = true;
                                            item4.Plus = 8;
                                            item4.Durability = item4.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid4].Durability;
                                            client.Inventory.Add(item4, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd);

                                            ConquerItem item5 = new ConquerItem(true);
                                            item5.ID = itemid5;
                                            item5.Color = PhoenixProject.Game.Enums.Color.White;
                                            item5.Bound = true;
                                            item5.Plus = 8;
                                            item5.Durability = item5.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid5].Durability;
                                            client.Inventory.Add(item5, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd);

                                            ConquerItem item6 = new ConquerItem(true);
                                            item6.ID = itemid6;
                                            item6.Color = PhoenixProject.Game.Enums.Color.White;
                                            item6.Bound = true;
                                            item6.Plus = 8;
                                            item6.Durability = item6.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid6].Durability;
                                            client.Inventory.Add(item6, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd);

                                            ConquerItem item7 = new ConquerItem(true);
                                            item7.ID = itemid7;
                                            item7.Color = PhoenixProject.Game.Enums.Color.White;
                                            item7.Bound = true;
                                            item7.Plus = 8;
                                            item7.Durability = item7.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid7].Durability;
                                            client.Inventory.Add(item7, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd);

                                            ConquerItem item8 = new ConquerItem(true);
                                            item8.ID = itemid8;
                                            item8.Color = PhoenixProject.Game.Enums.Color.White;
                                            item8.Bound = true;
                                            item8.Plus = 8;
                                            item8.Durability = item8.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid8].Durability;
                                            client.Inventory.Add(item8, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd);

                                            ConquerItem item9 = new ConquerItem(true);
                                            item9.ID = itemid9;
                                            item9.Color = PhoenixProject.Game.Enums.Color.White;
                                            item9.Bound = true;
                                            item9.Plus = 8;
                                            item9.Durability = item9.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid9].Durability;
                                            client.Inventory.Add(item9, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd);



                                            ConquerItem item = new ConquerItem(true);
                                            item.ID = itemid;
                                            item.Color = PhoenixProject.Game.Enums.Color.White;
                                            item.Bound = true;
                                            item.Plus = 8;
                                            item.Durability = item.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid].Durability;
                                            Data data = new Data(true);
                                            data.ID = Data.OpenCustom;
                                            data.UID = client.Entity.UID;
                                            data.TimeStamp = Time32.Now;
                                            data.dwParam = 3382;
                                            data.wParam1 = client.Entity.X;
                                            data.wParam2 = client.Entity.Y;
                                            client.Send(data);
                                            if (client.Inventory.Add(item, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd))
                                            {
                                                client.Inventory.Remove(720356, 1);
                                                Network.GamePackets.NpcReply npc = new Network.GamePackets.NpcReply(6, "you have obtained Warrior Pack HaveFun in " + PhoenixProject.Database.rates.servername + "?");
                                                npc.OptionID = 255;
                                                client.Send(npc.ToArray());
                                            }
                                            else
                                            {
                                                dialog.Text("You need atleast one free slot in your inventory.");
                                                dialog.Option("Alright.", 255);
                                                dialog.Send();
                                            }
                                        }
                                        else
                                        {
                                            dialog.Text("sorry you dont have MerryPack in your Bag .");
                                            dialog.Option("Alright.", 255);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("You need to make atleast 10 free spots in your inventory.");
                                        dialog.Option("Alright.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            #endregion
                            #region BoundItems Archer
                            case 45:
                                {
                                    uint itemid = 202009;//Tower
                                    uint itemid2 = 201009;//Fan
                                    uint itemid3 = 160019;//Boot
                                    uint itemid4 = 120029;//Necklace
                                    uint itemid5 = 150019;//Ring
                                    uint itemid6 = 117009;//Earrings
                                    uint itemid7 = 133009;//Armor
                                    uint itemid8 = 500009;//Bow
                                    //uint itemid9 = 900009;//Shield
                                    if (client.Inventory.Count <= 30)
                                    {
                                        if (client.Inventory.Contains(720356, 1))
                                        {
                                            ConquerItem item2 = new ConquerItem(true);
                                            item2.ID = itemid2;
                                            item2.Color = PhoenixProject.Game.Enums.Color.White;
                                            item2.Bound = true;
                                            item2.Plus = 8;
                                            item2.Durability = item2.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid2].Durability;
                                            client.Inventory.Add(item2, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd);

                                            ConquerItem item3 = new ConquerItem(true);
                                            item3.ID = itemid3;
                                            item3.Color = PhoenixProject.Game.Enums.Color.White;
                                            item3.Bound = true;
                                            item3.Plus = 8;
                                            item3.Durability = item3.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid3].Durability;
                                            client.Inventory.Add(item3, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd);

                                            ConquerItem item4 = new ConquerItem(true);
                                            item4.ID = itemid4;
                                            item4.Color = PhoenixProject.Game.Enums.Color.White;
                                            item4.Bound = true;
                                            item4.Plus = 8;
                                            item4.Durability = item4.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid4].Durability;
                                            client.Inventory.Add(item4, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd);

                                            ConquerItem item5 = new ConquerItem(true);
                                            item5.ID = itemid5;
                                            item5.Color = PhoenixProject.Game.Enums.Color.White;
                                            item5.Bound = true;
                                            item5.Plus = 8;
                                            item5.Durability = item5.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid5].Durability;
                                            client.Inventory.Add(item5, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd);

                                            ConquerItem item6 = new ConquerItem(true);
                                            item6.ID = itemid6;
                                            item6.Color = PhoenixProject.Game.Enums.Color.White;
                                            item6.Bound = true;
                                            item6.Plus = 8;
                                            item6.Durability = item6.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid6].Durability;
                                            client.Inventory.Add(item6, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd);

                                            ConquerItem item7 = new ConquerItem(true);
                                            item7.ID = itemid7;
                                            item7.Color = PhoenixProject.Game.Enums.Color.White;
                                            item7.Bound = true;
                                            item7.Plus = 8;
                                            item7.Durability = item7.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid7].Durability;
                                            client.Inventory.Add(item7, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd);

                                            ConquerItem item8 = new ConquerItem(true);
                                            item8.ID = itemid8;
                                            item8.Color = PhoenixProject.Game.Enums.Color.White;
                                            item8.Bound = true;
                                            item8.Plus = 8;
                                            item8.Durability = item8.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid8].Durability;
                                            client.Inventory.Add(item8, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd);

                                            ConquerItem item = new ConquerItem(true);
                                            item.ID = itemid;
                                            item.Color = PhoenixProject.Game.Enums.Color.White;
                                            item.Bound = true;
                                            item.Plus = 8;
                                            item.Durability = item.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid].Durability;
                                            Data data = new Data(true);
                                            data.ID = Data.OpenCustom;
                                            data.UID = client.Entity.UID;
                                            data.TimeStamp = Time32.Now;
                                            data.dwParam = 3382;
                                            data.wParam1 = client.Entity.X;
                                            data.wParam2 = client.Entity.Y;
                                            client.Send(data);
                                            if (client.Inventory.Add(item, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd))
                                            {
                                                client.Inventory.Remove(720356, 1);
                                                Network.GamePackets.NpcReply npc = new Network.GamePackets.NpcReply(6, "you have obtained Archer Pack HaveFun in " + PhoenixProject.Database.rates.servername + "?");
                                                npc.OptionID = 255;
                                                client.Send(npc.ToArray());
                                            }
                                            else
                                            {
                                                dialog.Text("You need atleast one free slot in your inventory.");
                                                dialog.Option("Alright.", 255);
                                                dialog.Send();
                                            }
                                        }
                                        else
                                        {
                                            dialog.Text("sorry you dont have MerryPack in your Bag .");
                                            dialog.Option("Alright.", 255);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("You need to make atleast 10 free spots in your inventory.");
                                        dialog.Option("Alright.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            #endregion
                            #region BoundItems Ninja
                            case 55:
                                {
                                    uint itemid = 202009;//Tower
                                    uint itemid2 = 201009;//Fan
                                    uint itemid3 = 160019;//Boot
                                    uint itemid4 = 120029;//Necklace
                                    uint itemid5 = 150019;//Ring
                                    uint itemid6 = 117009;//Earrings
                                    uint itemid7 = 135009;//Armor
                                    uint itemid8 = 601019;//Katana
                                    uint itemid9 = 601019;//Katana
                                    if (client.Inventory.Count <= 30)
                                    {
                                        if (client.Inventory.Contains(720356, 1))
                                        {
                                            ConquerItem item2 = new ConquerItem(true);
                                            item2.ID = itemid2;
                                            item2.Color = PhoenixProject.Game.Enums.Color.White;
                                            item2.Bound = true;
                                            item2.Plus = 8;
                                            item2.Durability = item2.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid2].Durability;
                                            client.Inventory.Add(item2, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd);

                                            ConquerItem item3 = new ConquerItem(true);
                                            item3.ID = itemid3;
                                            item3.Color = PhoenixProject.Game.Enums.Color.White;
                                            item3.Bound = true;
                                            item3.Plus = 8;
                                            item3.Durability = item3.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid3].Durability;
                                            client.Inventory.Add(item3, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd);

                                            ConquerItem item4 = new ConquerItem(true);
                                            item4.ID = itemid4;
                                            item4.Color = PhoenixProject.Game.Enums.Color.White;
                                            item4.Bound = true;
                                            item4.Plus = 8;
                                            item4.Durability = item4.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid4].Durability;
                                            client.Inventory.Add(item4, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd);

                                            ConquerItem item5 = new ConquerItem(true);
                                            item5.ID = itemid5;
                                            item5.Color = PhoenixProject.Game.Enums.Color.White;
                                            item5.Bound = true;
                                            item5.Plus = 8;
                                            item5.Durability = item5.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid5].Durability;
                                            client.Inventory.Add(item5, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd);

                                            ConquerItem item6 = new ConquerItem(true);
                                            item6.ID = itemid6;
                                            item6.Color = PhoenixProject.Game.Enums.Color.White;
                                            item6.Bound = true;
                                            item6.Plus = 8;
                                            item6.Durability = item6.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid6].Durability;
                                            client.Inventory.Add(item6, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd);

                                            ConquerItem item7 = new ConquerItem(true);
                                            item7.ID = itemid7;
                                            item7.Color = PhoenixProject.Game.Enums.Color.White;
                                            item7.Bound = true;
                                            item7.Plus = 8;
                                            item7.Durability = item7.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid7].Durability;
                                            client.Inventory.Add(item7, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd);

                                            ConquerItem item8 = new ConquerItem(true);
                                            item8.ID = itemid8;
                                            item8.Color = PhoenixProject.Game.Enums.Color.White;
                                            item8.Bound = true;
                                            item8.Plus = 8;
                                            item8.Durability = item8.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid8].Durability;
                                            client.Inventory.Add(item8, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd);

                                            ConquerItem item9 = new ConquerItem(true);
                                            item9.ID = itemid9;
                                            item9.Color = PhoenixProject.Game.Enums.Color.White;
                                            item9.Bound = true;
                                            item9.Plus = 8;
                                            item9.Durability = item9.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid9].Durability;
                                            client.Inventory.Add(item9, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd);



                                            ConquerItem item = new ConquerItem(true);
                                            item.ID = itemid;
                                            item.Color = PhoenixProject.Game.Enums.Color.White;
                                            item.Bound = true;
                                            item.Plus = 8;
                                            item.Durability = item.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid].Durability;
                                            Data data = new Data(true);
                                            data.ID = Data.OpenCustom;
                                            data.UID = client.Entity.UID;
                                            data.TimeStamp = Time32.Now;
                                            data.dwParam = 3382;
                                            data.wParam1 = client.Entity.X;
                                            data.wParam2 = client.Entity.Y;
                                            client.Send(data);
                                            if (client.Inventory.Add(item, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd))
                                            {
                                                client.Inventory.Remove(720356, 1);
                                                Network.GamePackets.NpcReply npc = new Network.GamePackets.NpcReply(6, "you have obtained Ninja Pack HaveFun in " + PhoenixProject.Database.rates.servername + "?");
                                                npc.OptionID = 255;
                                                client.Send(npc.ToArray());
                                            }
                                            else
                                            {
                                                dialog.Text("You need atleast one free slot in your inventory.");
                                                dialog.Option("Alright.", 255);
                                                dialog.Send();
                                            }
                                        }
                                        else
                                        {
                                            dialog.Text("sorry you dont have MerryPack in your Bag .");
                                            dialog.Option("Alright.", 255);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("You need to make atleast 10 free spots in your inventory.");
                                        dialog.Option("Alright.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            #endregion
                            #region BoundItems Monk
                            case 65:
                                {
                                    uint itemid = 202009;//Tower
                                    uint itemid2 = 201009;//Fan
                                    uint itemid3 = 160019;//Boot
                                    uint itemid4 = 120029;//Necklace
                                    uint itemid5 = 150019;//Ring
                                    uint itemid6 = 117009;//Earrings
                                    uint itemid7 = 136009;//Armor
                                    uint itemid8 = 610019;//Katana
                                    uint itemid9 = 610019;//Katana
                                    if (client.Inventory.Count <= 30)
                                    {
                                        if (client.Inventory.Contains(720356, 1))
                                        {
                                            ConquerItem item2 = new ConquerItem(true);
                                            item2.ID = itemid2;
                                            item2.Color = PhoenixProject.Game.Enums.Color.White;
                                            item2.Bound = true;
                                            item2.Plus = 8;
                                            item2.Durability = item2.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid2].Durability;
                                            client.Inventory.Add(item2, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd);

                                            ConquerItem item3 = new ConquerItem(true);
                                            item3.ID = itemid3;
                                            item3.Color = PhoenixProject.Game.Enums.Color.White;
                                            item3.Bound = true;
                                            item3.Plus = 8;
                                            item3.Durability = item3.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid3].Durability;
                                            client.Inventory.Add(item3, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd);

                                            ConquerItem item4 = new ConquerItem(true);
                                            item4.ID = itemid4;
                                            item4.Color = PhoenixProject.Game.Enums.Color.White;
                                            item4.Bound = true;
                                            item4.Plus = 8;
                                            item4.Durability = item4.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid4].Durability;
                                            client.Inventory.Add(item4, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd);

                                            ConquerItem item5 = new ConquerItem(true);
                                            item5.ID = itemid5;
                                            item5.Color = PhoenixProject.Game.Enums.Color.White;
                                            item5.Bound = true;
                                            item5.Plus = 8;
                                            item5.Durability = item5.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid5].Durability;
                                            client.Inventory.Add(item5, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd);

                                            ConquerItem item6 = new ConquerItem(true);
                                            item6.ID = itemid6;
                                            item6.Color = PhoenixProject.Game.Enums.Color.White;
                                            item6.Bound = true;
                                            item6.Plus = 8;
                                            item6.Durability = item6.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid6].Durability;
                                            client.Inventory.Add(item6, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd);

                                            ConquerItem item7 = new ConquerItem(true);
                                            item7.ID = itemid7;
                                            item7.Color = PhoenixProject.Game.Enums.Color.White;
                                            item7.Bound = true;
                                            item7.Plus = 8;
                                            item7.Durability = item7.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid7].Durability;
                                            client.Inventory.Add(item7, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd);

                                            ConquerItem item8 = new ConquerItem(true);
                                            item8.ID = itemid8;
                                            item8.Color = PhoenixProject.Game.Enums.Color.White;
                                            item8.Bound = true;
                                            item8.Plus = 8;
                                            item8.Durability = item8.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid8].Durability;
                                            client.Inventory.Add(item8, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd);

                                            ConquerItem item9 = new ConquerItem(true);
                                            item9.ID = itemid9;
                                            item9.Color = PhoenixProject.Game.Enums.Color.White;
                                            item9.Bound = true;
                                            item9.Plus = 8;
                                            item9.Durability = item9.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid9].Durability;
                                            client.Inventory.Add(item9, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd);



                                            ConquerItem item = new ConquerItem(true);
                                            item.ID = itemid;
                                            item.Color = PhoenixProject.Game.Enums.Color.White;
                                            item.Bound = true;
                                            item.Plus = 8;
                                            item.Durability = item.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid].Durability;
                                            Data data = new Data(true);
                                            data.ID = Data.OpenCustom;
                                            data.UID = client.Entity.UID;
                                            data.TimeStamp = Time32.Now;
                                            data.dwParam = 3382;
                                            data.wParam1 = client.Entity.X;
                                            data.wParam2 = client.Entity.Y;
                                            client.Send(data);
                                            if (client.Inventory.Add(item, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd))
                                            {
                                                client.Inventory.Remove(720356, 1);
                                                Network.GamePackets.NpcReply npc = new Network.GamePackets.NpcReply(6, "you have obtained Monk Pack HaveFun in " + PhoenixProject.Database.rates.servername + "?");
                                                npc.OptionID = 255;
                                                client.Send(npc.ToArray());
                                            }
                                            else
                                            {
                                                dialog.Text("You need atleast one free slot in your inventory.");
                                                dialog.Option("Alright.", 255);
                                                dialog.Send();
                                            }
                                        }
                                        else
                                        {
                                            dialog.Text("sorry you dont have MerryPack in your Bag .");
                                            dialog.Option("Alright.", 255);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("You need to make atleast 10 free spots in your inventory.");
                                        dialog.Option("Alright.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            #endregion
                            #region BoundItems WaterTaoist
                            case 135:
                                {
                                    uint itemid = 202009;//Tower
                                    uint itemid2 = 201009;//Fan
                                    uint itemid3 = 160019;//Boot
                                    uint itemid4 = 120029;//Necklace
                                    uint itemid5 = 150019;//Ring
                                    uint itemid6 = 114009;//Cap
                                    uint itemid7 = 134009;//Armor
                                    uint itemid8 = 560019;//Spear
                                    uint itemid9 = 421009;//BackSword
                                    if (client.Inventory.Count <= 30)
                                    {
                                        if (client.Inventory.Contains(720356, 1))
                                        {
                                            ConquerItem item2 = new ConquerItem(true);
                                            item2.ID = itemid2;
                                            item2.Color = PhoenixProject.Game.Enums.Color.White;
                                            item2.Bound = true;
                                            item2.Plus = 8;
                                            item2.Durability = item2.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid2].Durability;
                                            client.Inventory.Add(item2, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd);

                                            ConquerItem item3 = new ConquerItem(true);
                                            item3.ID = itemid3;
                                            item3.Color = PhoenixProject.Game.Enums.Color.White;
                                            item3.Bound = true;
                                            item3.Plus = 8;
                                            item3.Durability = item3.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid3].Durability;
                                            client.Inventory.Add(item3, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd);

                                            ConquerItem item4 = new ConquerItem(true);
                                            item4.ID = itemid4;
                                            item4.Color = PhoenixProject.Game.Enums.Color.White;
                                            item4.Bound = true;
                                            item4.Plus = 8;
                                            item4.Durability = item4.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid4].Durability;
                                            client.Inventory.Add(item4, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd);

                                            ConquerItem item5 = new ConquerItem(true);
                                            item5.ID = itemid5;
                                            item5.Color = PhoenixProject.Game.Enums.Color.White;
                                            item5.Bound = true;
                                            item5.Plus = 8;
                                            item5.Durability = item5.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid5].Durability;
                                            client.Inventory.Add(item5, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd);

                                            ConquerItem item6 = new ConquerItem(true);
                                            item6.ID = itemid6;
                                            item6.Color = PhoenixProject.Game.Enums.Color.White;
                                            item6.Bound = true;
                                            item6.Plus = 8;
                                            item6.Durability = item6.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid6].Durability;
                                            client.Inventory.Add(item6, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd);

                                            ConquerItem item7 = new ConquerItem(true);
                                            item7.ID = itemid7;
                                            item7.Color = PhoenixProject.Game.Enums.Color.White;
                                            item7.Bound = true;
                                            item7.Plus = 8;
                                            item7.Durability = item7.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid7].Durability;
                                            client.Inventory.Add(item7, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd);

                                            ConquerItem item8 = new ConquerItem(true);
                                            item8.ID = itemid8;
                                            item8.Color = PhoenixProject.Game.Enums.Color.White;
                                            item8.Bound = true;
                                            item8.Plus = 8;
                                            item8.Durability = item8.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid8].Durability;
                                            client.Inventory.Add(item8, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd);

                                            ConquerItem item9 = new ConquerItem(true);
                                            item9.ID = itemid9;
                                            item9.Color = PhoenixProject.Game.Enums.Color.White;
                                            item9.Bound = true;
                                            item9.Plus = 8;
                                            item9.Durability = item9.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid9].Durability;
                                            client.Inventory.Add(item9, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd);



                                            ConquerItem item = new ConquerItem(true);
                                            item.ID = itemid;
                                            item.Color = PhoenixProject.Game.Enums.Color.White;
                                            item.Bound = true;
                                            item.Plus = 8;
                                            item.Durability = item.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid].Durability;
                                            Data data = new Data(true);
                                            data.ID = Data.OpenCustom;
                                            data.UID = client.Entity.UID;
                                            data.TimeStamp = Time32.Now;
                                            data.dwParam = 3382;
                                            data.wParam1 = client.Entity.X;
                                            data.wParam2 = client.Entity.Y;
                                            client.Send(data);
                                            if (client.Inventory.Add(item, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd))
                                            {
                                                client.Inventory.Remove(720356, 1);
                                                Network.GamePackets.NpcReply npc = new Network.GamePackets.NpcReply(6, "you have obtained WaterTaoist Pack HaveFun in " + PhoenixProject.Database.rates.servername + "?");
                                                npc.OptionID = 255;
                                                client.Send(npc.ToArray());
                                            }
                                            else
                                            {
                                                dialog.Text("You need atleast one free slot in your inventory.");
                                                dialog.Option("Alright.", 255);
                                                dialog.Send();
                                            }
                                        }
                                        else
                                        {
                                            dialog.Text("sorry you dont have MerryPack in your Bag .");
                                            dialog.Option("Alright.", 255);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("You need to make atleast 10 free spots in your inventory.");
                                        dialog.Option("Alright.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            #endregion
                            #region BoundItems FireTaoist
                            case 145:
                                {
                                    uint itemid = 202009;//Tower
                                    uint itemid2 = 201009;//Fan
                                    uint itemid3 = 160019;//Boot
                                    uint itemid4 = 121029;//Bag
                                    uint itemid5 = 152019;//Bracelet
                                    uint itemid6 = 114009;//Cap
                                    uint itemid7 = 134009;//Armor
                                    uint itemid8 = 560019;//Spear
                                    uint itemid9 = 421009;//BackSword
                                    if (client.Inventory.Count <= 30)
                                    {
                                        if (client.Inventory.Contains(720356, 1))
                                        {
                                            ConquerItem item2 = new ConquerItem(true);
                                            item2.ID = itemid2;
                                            item2.Color = PhoenixProject.Game.Enums.Color.White;
                                            item2.Bound = true;
                                            item2.Plus = 8;
                                            item2.Durability = item2.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid2].Durability;
                                            client.Inventory.Add(item2, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd);

                                            ConquerItem item3 = new ConquerItem(true);
                                            item3.ID = itemid3;
                                            item3.Color = PhoenixProject.Game.Enums.Color.White;
                                            item3.Bound = true;
                                            item3.Plus = 8;
                                            item3.Durability = item3.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid3].Durability;
                                            client.Inventory.Add(item3, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd);

                                            ConquerItem item4 = new ConquerItem(true);
                                            item4.ID = itemid4;
                                            item4.Color = PhoenixProject.Game.Enums.Color.White;
                                            item4.Bound = true;
                                            item4.Plus = 8;
                                            item4.Durability = item4.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid4].Durability;
                                            client.Inventory.Add(item4, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd);

                                            ConquerItem item5 = new ConquerItem(true);
                                            item5.ID = itemid5;
                                            item5.Color = PhoenixProject.Game.Enums.Color.White;
                                            item5.Bound = true;
                                            item5.Plus = 8;
                                            item5.Durability = item5.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid5].Durability;
                                            client.Inventory.Add(item5, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd);

                                            ConquerItem item6 = new ConquerItem(true);
                                            item6.ID = itemid6;
                                            item6.Color = PhoenixProject.Game.Enums.Color.White;
                                            item6.Bound = true;
                                            item6.Plus = 8;
                                            item6.Durability = item6.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid6].Durability;
                                            client.Inventory.Add(item6, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd);

                                            ConquerItem item7 = new ConquerItem(true);
                                            item7.ID = itemid7;
                                            item7.Color = PhoenixProject.Game.Enums.Color.White;
                                            item7.Bound = true;
                                            item7.Plus = 8;
                                            item7.Durability = item7.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid7].Durability;
                                            client.Inventory.Add(item7, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd);

                                            ConquerItem item8 = new ConquerItem(true);
                                            item8.ID = itemid8;
                                            item8.Color = PhoenixProject.Game.Enums.Color.White;
                                            item8.Bound = true;
                                            item8.Plus = 8;
                                            item8.Durability = item8.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid8].Durability;
                                            client.Inventory.Add(item8, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd);

                                            ConquerItem item9 = new ConquerItem(true);
                                            item9.ID = itemid9;
                                            item9.Color = PhoenixProject.Game.Enums.Color.White;
                                            item9.Bound = true;
                                            item9.Plus = 8;
                                            item9.Durability = item9.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid9].Durability;
                                            client.Inventory.Add(item9, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd);



                                            ConquerItem item = new ConquerItem(true);
                                            item.ID = itemid;
                                            item.Color = PhoenixProject.Game.Enums.Color.White;
                                            item.Bound = true;
                                            item.Plus = 8;
                                            item.Durability = item.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid].Durability;
                                            Data data = new Data(true);
                                            data.ID = Data.OpenCustom;
                                            data.UID = client.Entity.UID;
                                            data.TimeStamp = Time32.Now;
                                            data.dwParam = 3382;
                                            data.wParam1 = client.Entity.X;
                                            data.wParam2 = client.Entity.Y;
                                            client.Send(data);
                                            if (client.Inventory.Add(item, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd))
                                            {
                                                client.Inventory.Remove(720356, 1);
                                                Network.GamePackets.NpcReply npc = new Network.GamePackets.NpcReply(6, "you have obtained FireTaoist Pack HaveFun in " + PhoenixProject.Database.rates.servername + "?");
                                                npc.OptionID = 255;
                                                client.Send(npc.ToArray());
                                            }
                                            else
                                            {
                                                dialog.Text("You need atleast one free slot in your inventory.");
                                                dialog.Option("Alright.", 255);
                                                dialog.Send();
                                            }
                                        }
                                        else
                                        {
                                            dialog.Text("sorry you dont have MerryPack in your Bag .");
                                            dialog.Option("Alright.", 255);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("You need to make atleast 10 free spots in your inventory.");
                                        dialog.Option("Alright.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            #endregion
                            #region BoundItems Pirate
                            case 75:
                                {
                                    uint itemid = 202009;//Tower
                                    uint itemid2 = 201009;//Fan
                                    uint itemid3 = 160019;//Boot
                                    uint itemid4 = 120029;//Necklace
                                    uint itemid5 = 150019;//Ring
                                    uint itemid6 = 144009;//Earrings
                                    uint itemid7 = 139009;//Armor
                                    uint itemid8 = 611019;//Katana
                                    uint itemid9 = 612019;//Katana
                                    if (client.Inventory.Count <= 30)
                                    {
                                        if (client.Inventory.Contains(720356, 1))
                                        {
                                            ConquerItem item2 = new ConquerItem(true);
                                            item2.ID = itemid2;
                                            item2.Color = PhoenixProject.Game.Enums.Color.White;
                                            item2.Bound = true;
                                            item2.Plus = 8;
                                            item2.Durability = item2.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid2].Durability;
                                            client.Inventory.Add(item2, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd);

                                            ConquerItem item3 = new ConquerItem(true);
                                            item3.ID = itemid3;
                                            item3.Color = PhoenixProject.Game.Enums.Color.White;
                                            item3.Bound = true;
                                            item3.Plus = 8;
                                            item3.Durability = item3.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid3].Durability;
                                            client.Inventory.Add(item3, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd);

                                            ConquerItem item4 = new ConquerItem(true);
                                            item4.ID = itemid4;
                                            item4.Color = PhoenixProject.Game.Enums.Color.White;
                                            item4.Bound = true;
                                            item4.Plus = 8;
                                            item4.Durability = item4.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid4].Durability;
                                            client.Inventory.Add(item4, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd);

                                            ConquerItem item5 = new ConquerItem(true);
                                            item5.ID = itemid5;
                                            item5.Color = PhoenixProject.Game.Enums.Color.White;
                                            item5.Bound = true;
                                            item5.Plus = 8;
                                            item5.Durability = item5.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid5].Durability;
                                            client.Inventory.Add(item5, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd);

                                            ConquerItem item6 = new ConquerItem(true);
                                            item6.ID = itemid6;
                                            item6.Color = PhoenixProject.Game.Enums.Color.White;
                                            item6.Bound = true;
                                            item6.Plus = 8;
                                            item6.Durability = item6.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid6].Durability;
                                            client.Inventory.Add(item6, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd);

                                            ConquerItem item7 = new ConquerItem(true);
                                            item7.ID = itemid7;
                                            item7.Color = PhoenixProject.Game.Enums.Color.White;
                                            item7.Bound = true;
                                            item7.Plus = 8;
                                            item7.Durability = item7.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid7].Durability;
                                            client.Inventory.Add(item7, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd);

                                            ConquerItem item8 = new ConquerItem(true);
                                            item8.ID = itemid8;
                                            item8.Color = PhoenixProject.Game.Enums.Color.White;
                                            item8.Bound = true;
                                            item8.Plus = 8;
                                            item8.Durability = item8.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid8].Durability;
                                            client.Inventory.Add(item8, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd);

                                            ConquerItem item9 = new ConquerItem(true);
                                            item9.ID = itemid9;
                                            item9.Color = PhoenixProject.Game.Enums.Color.White;
                                            item9.Bound = true;
                                            item9.Plus = 8;
                                            item9.Durability = item9.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid9].Durability;
                                            client.Inventory.Add(item9, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd);



                                            ConquerItem item = new ConquerItem(true);
                                            item.ID = itemid;
                                            item.Color = PhoenixProject.Game.Enums.Color.White;
                                            item.Bound = true;
                                            item.Plus = 8;
                                            item.Durability = item.MaximDurability = PhoenixProject.Database.ConquerItemInformation.BaseInformations[itemid].Durability;
                                            Data data = new Data(true);
                                            data.ID = Data.OpenCustom;
                                            data.UID = client.Entity.UID;
                                            data.TimeStamp = Time32.Now;
                                            data.dwParam = 3382;
                                            data.wParam1 = client.Entity.X;
                                            data.wParam2 = client.Entity.Y;
                                            client.Send(data);
                                            if (client.Inventory.Add(item, PhoenixProject.Game.Enums.ItemUse.CreateAndAdd))
                                            {
                                                client.Inventory.Remove(720356, 1);
                                                Network.GamePackets.NpcReply npc = new Network.GamePackets.NpcReply(6, "you have obtained Ninja Pack HaveFun in " + PhoenixProject.Database.rates.servername + "?");
                                                npc.OptionID = 255;
                                                client.Send(npc.ToArray());
                                            }
                                            else
                                            {
                                                dialog.Text("You need atleast one free slot in your inventory.");
                                                dialog.Option("Alright.", 255);
                                                dialog.Send();
                                            }
                                        }
                                        else
                                        {
                                            dialog.Text("sorry you dont have MerryPack in your Bag .");
                                            dialog.Option("Alright.", 255);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("You need to make atleast 10 free spots in your inventory.");
                                        dialog.Option("Alright.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            #endregion
                        }
                        break;
                    }
                #endregion
                #region HorseRaceIn
                case 243243:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Hey there " + client.Entity.Name + " Would you like to join HorseRace?.");
                                    dialog.Option("Yes Please", 1);
                                    dialog.Option("I don't care.", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    if (DateTime.Now.Minute >= 44 && DateTime.Now.Minute < 45)
                                    {
                                        client.Entity.Teleport(1950, 136, 245);
                                    }
                                    else
                                    {
                                        dialog.Text("HorseRace is held during xx:44 in every Hour");
                                        dialog.Option("I don't care.", 255);
                                        dialog.Send();
                                        break;
                                    }
                                    break;
                                }
                        }
                        break;
                    }
                #endregion
                #region Winner of HorseRace
                case 244244:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Hey there " + client.Entity.Name + " Would you like to claim your Prize?.");
                                    dialog.Option("Yes Please", 1);
                                    dialog.Option("I don't care.", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    //Daily.CheackAlive();
                                    if (DateTime.Now.Minute >= 45 && DateTime.Now.Minute <= 59)
                                    {
                                        if (Game.Tournaments.SteedRace.IsRace)
                                        {
                                            Game.Tournaments.SteedRace.GiveReward(client);
                                            client.Entity.Teleport(1002, 428, 378);
                                        }
                                        else
                                        {
                                            dialog.Text("Sorry SteedRace not running Atm so u cant claim any shit!");
                                            dialog.Option("okay", 255);
                                            dialog.Send();
                                            break;
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Hey there " + client.Entity.Name + "You can only claim the prize when the Tourment Online");
                                        dialog.Option("okay", 255);
                                        dialog.Send();
                                        break;
                                    }
                                    break;
                                }
                        }
                        break;
                    }
                #endregion
                #region DailyPkWar
                case 231400:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Hey there " + client.Entity.Name + " Would you like to join the Daily PKWar?.");
                                    dialog.Option("Yes Please", 1);
                                    dialog.Option("I don't care.", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    if (DateTime.Now.Minute >= 00 && DateTime.Now.Minute < 05)
                                    {
                                        client.Entity.Teleport(8877, 52, 44);
                                        Data data = new Data(true);
                                        data.ID = Data.OpenCustom;
                                        data.UID = client.Entity.UID;
                                        data.TimeStamp = Time32.Now;
                                        data.dwParam = 3378;
                                        data.wParam1 = client.Entity.X;
                                        data.wParam2 = client.Entity.Y;
                                        client.Send(data);
                                    }
                                    else
                                    {
                                        dialog.Text("Daily Pk War is held during xx:00 in every Hour");
                                        dialog.Option("I don't care.", 255);
                                        dialog.Send();
                                        break;
                                    }
                                    break;
                                }
                        }
                        break;
                    }
                #endregion
                #region Winner of DailyPk NPC 231500
                case 231500:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Hey there " + client.Entity.Name + " Would you like to claim your Prize?.");
                                    dialog.Option("Yes Please", 1);
                                    dialog.Option("I don't care.", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    Daily.CheackAlive();
                                    if (DateTime.Now.Minute >= 08 && DateTime.Now.Minute <= 30)
                                    {
                                        if (Daily.howmanyinmap == 1)
                                        {
                                            client.Entity.ConquerPoints += PhoenixProject.Database.rates.DailyPk;
                                            PhoenixProject.ServerBase.Kernel.SendWorldMessage(new Message("Congratulations! " + client.Entity.Name + " claimed the prize " + PhoenixProject.Database.rates.DailyPk + " ConquerPoints for winning the DailyPk for this Hour.", System.Drawing.Color.Black, Message.Center), PhoenixProject.ServerBase.Kernel.GamePool.Values);

                                            client.Entity.SendSpawn(client, true);
                                            client.Entity.Teleport(1002, 429, 378);

                                        }
                                        else
                                        {
                                            dialog.Text("There are still " + Daily.howmanyinmap + " players in the map kill it first to claim prize!");
                                            dialog.Option("okay", 255);
                                            dialog.Send();
                                            break;
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Hey there " + client.Entity.Name + "You can only claim the prize when the time on or after xx:08");
                                        dialog.Option("okay", 255);
                                        dialog.Send();
                                        break;
                                    }
                                    break;
                                }
                        }
                        break;
                    }
                #endregion
                #region Seller/moonbox/emerald 422 395
                case 338111:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Hey how I can help you ? ");
                                    dialog.Option("Buy MoonBox - 3kCPS ", 2);//721080
                                    dialog.Option("Buy EuxeniteOre - 1kCPS ", 30);
                                    dialog.Option("Buy Emerald - 2kCPS ", 4);
                                    dialog.Option("Buy FireofHell - 2kCPS ", 22);
                                    dialog.Option("Change 10kcps for 50kk silver ", 5);
                                    dialog.Option("Buy 1 Saddle for 500 cps ", 9);
                                    dialog.Option("Just passing by.", 255);
                                    dialog.Avatar(80);
                                    dialog.Send();
                                    break;
                                }
                            case 22:
                                {

                                    if (client.Entity.ConquerPoints >= 2000)
                                    {
                                        client.Entity.ConquerPoints -= 2000;
                                        client.Inventory.Add(1060101, 0, 1);

                                    }
                                    else
                                    {
                                        dialog.Text("You don't have 2000 ConquerPoints.");
                                        dialog.Option("Ah, my bad", 255);
                                        dialog.Avatar(80);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 5:
                                {
                                    if (client.Entity.ConquerPoints >= 10000)
                                    {
                                        if (client.Entity.Money <= (uint)(500000000 - 1000))
                                        {
                                            client.Entity.ConquerPoints -= 10000;
                                            client.Entity.Money += 50000000;
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("You don't have 50000 ConquerPoints!");
                                        dialog.Option("Ah, my bad", 255);
                                        dialog.Avatar(80);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 9:
                                {

                                    if (client.Entity.ConquerPoints >= 500)
                                    {
                                        client.Entity.ConquerPoints -= 500;
                                        client.Inventory.Add(723903, 0, 1);

                                    }
                                    else
                                    {
                                        dialog.Text("You don't have 500 ConquerPoints.");
                                        dialog.Option("Ah, my bad", 255);
                                        dialog.Avatar(80);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 30:
                                {
                                    if (client.Entity.ConquerPoints >= 1000)
                                    {
                                        client.Entity.ConquerPoints -= 1000;
                                        client.Inventory.Add(1072031, 0, 1);
                                    }
                                    break;
                                }
                            case 1:
                                {
                                    if (client.Entity.PKPoints > 30 && client.Entity.ConquerPoints >= 1000)
                                    {
                                        client.Entity.ConquerPoints -= 1000;
                                        client.Entity.PKPoints = 0;

                                    }
                                    else
                                    {
                                        dialog.Text("You don't have 1000 ConquerPoints or you don't have 30 pkp!");
                                        dialog.Option("Ah, my bad", 255);
                                        dialog.Avatar(80);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 2:
                                {
                                    if (client.Entity.ConquerPoints >= 3000)
                                    {
                                        client.Entity.ConquerPoints -= 3000;
                                        client.Inventory.Add(721080, 0, 1);

                                    }
                                    else
                                    {
                                        dialog.Text("You don't have 3000 ConquerPoints.");
                                        dialog.Option("Ah, my bad", 255);
                                        dialog.Avatar(80);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 3:
                                {
                                    if (client.Entity.ConquerPoints >= 100)
                                    {
                                        client.Entity.QuizPoints += 100;
                                        client.Entity.ConquerPoints -= 100;
                                    }
                                    else
                                    {
                                        dialog.Text("You don't have 1000 ConquerPoints.");
                                        dialog.Option("Ah, my bad", 255);
                                        dialog.Avatar(80);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 4:
                                {
                                    if (client.Entity.ConquerPoints >= 2000)
                                    {
                                        client.Inventory.Add(1080001, 0, 1);
                                        client.Entity.ConquerPoints -= 2000;
                                    }
                                    else
                                    {
                                        dialog.Text("You don't have 2000 ConquerPoints.");
                                        dialog.Option("Ah, my bad", 255);
                                        dialog.Avatar(80);
                                        dialog.Send();
                                    }
                                    break;
                                }
                        }
                        break;
                    }
                #endregion
                #region Remove Bound
                case 26678:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Hellow, you wana remove free for you items for " + Database.rates.RemoveBound + " cps? ");
                                    dialog.Option("Headgear. ", 1);
                                    dialog.Option("Necklace/Bag. ", 2);
                                    dialog.Option("Armor. ", 3);
                                    dialog.Option("Weapon. ", 4);
                                    dialog.Option("Shield. ", 5);
                                    dialog.Option("Ring. ", 6);
                                    dialog.Option("Boots. ", 8);
                                    dialog.Option("Just passing by.", 255);
                                    dialog.Avatar(114);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                            case 2:
                            case 3:
                            case 4:
                            case 5:
                            case 6:
                            case 8:
                                {
                                    if (!client.Equipment.Free(npcRequest.OptionID))
                                    {
                                        if (client.Equipment.TryGetItem(npcRequest.OptionID).Bound)
                                        {
                                            if (client.Entity.ConquerPoints >= Database.rates.RemoveBound)
                                            {
                                                client.Entity.ConquerPoints -= Database.rates.RemoveBound;
                                                client.Equipment.TryGetItem(npcRequest.OptionID).Bound = false;
                                                client.Equipment.TryGetItem(npcRequest.OptionID).Send(client);
                                                Database.ConquerItemTable.UpdateBound(client.Equipment.TryGetItem(npcRequest.OptionID));
                                                dialog.Text("Here you are. It's done.");
                                                dialog.Option("Thanks", 255);
                                                dialog.Avatar(114);
                                                dialog.Send();
                                            }
                                            else
                                            {
                                                dialog.Text("Sorry, you need " + Database.rates.RemoveBound + " ConquerPoints");
                                                dialog.Option("Ah ok", 255);
                                                dialog.Avatar(114);
                                                dialog.Send();
                                            }
                                        }
                                        else
                                        {
                                            dialog.Text("Sorry, your item not  Bound");
                                            dialog.Option("Ah yes", 255);
                                            dialog.Avatar(114);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry, you don't wear this item");
                                        dialog.Option("Ah yes", 255);
                                        dialog.Avatar(114);
                                        dialog.Send();
                                    }
                                    break;
                                }
                        }
                        break;
                    }
                #endregion
                #region GarmentShop
                case 6002:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    PhoenixProject.Network.GamePackets.Data Data = new PhoenixProject.Network.GamePackets.Data(true);
                                    Data.UID = client.Entity.UID;
                                    Data.ID = 126;
                                    Data.dwParam = 502;
                                    Data.wParam1 = client.Entity.X;
                                    Data.wParam2 = client.Entity.Y;
                                    client.Send(Data);
                                    break;
                                }
                        }
                        break;
                    }
                #endregion

                #region WeeklyPkWar
                case 2314:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Hey there " + client.Entity.Name + " Would you like to join the Weekly PKWar?.");
                                    dialog.Option("Yes Please", 1);
                                    dialog.Option("I don't care.", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    if (DateTime.Now.DayOfWeek == DayOfWeek.Sunday && (DateTime.Now.Hour == Game.KimoEvents.WHour && DateTime.Now.Minute < 05))
                                    {
                                        Random R = new Random();
                                        int Nr = R.Next(1, 10);
                                        if (Nr == 1) client.Entity.Teleport(1508, 114, 078);
                                        if (Nr == 2) client.Entity.Teleport(1508, 96, 87);
                                        if (Nr == 3) client.Entity.Teleport(1508, 142, 88);
                                        if (Nr == 4) client.Entity.Teleport(1508, 115, 115);
                                        if (Nr == 5) client.Entity.Teleport(1508, 98, 130);
                                        if (Nr == 6) client.Entity.Teleport(1508, 96, 153);
                                        if (Nr == 7) client.Entity.Teleport(1508, 112, 162);
                                        if (Nr == 8) client.Entity.Teleport(1508, 130, 166);
                                        if (Nr == 9) client.Entity.Teleport(1508, 139, 114);
                                        if (Nr == 10) client.Entity.Teleport(1508, 156, 119);
                                    }
                                    else
                                    {
                                        dialog.Text("Weekly Pk War is held during Sunday at " + Game.KimoEvents.WHour + ":00 ");
                                        dialog.Option("I don't care.", 255);
                                        dialog.Send();
                                        break;
                                    }
                                    break;
                                }
                        }
                        break;
                    }
                #endregion

                #region LastMan
                case 54238:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Hey there " + client.Entity.Name + " Would you like to join LastManStanding PKWar?.");
                                    dialog.Option("Yes Please", 1);
                                    dialog.Option("I don't care.", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    if (DateTime.Now.Minute >= 30 && DateTime.Now.Minute <= 32)
                                    {
                                        Random R = new Random();
                                        int Nr = R.Next(1, 10);
                                        if (Nr == 1) client.Entity.Teleport(3333, 51, 73);
                                        if (Nr == 2) client.Entity.Teleport(3333, 33, 34);
                                        if (Nr == 3) client.Entity.Teleport(3333, 67, 34);
                                        if (Nr == 4) client.Entity.Teleport(3333, 51, 73);
                                        if (Nr == 5) client.Entity.Teleport(3333, 33, 34);
                                        if (Nr == 6) client.Entity.Teleport(3333, 67, 34);
                                        if (Nr == 7) client.Entity.Teleport(3333, 51, 73);
                                        if (Nr == 8) client.Entity.Teleport(3333, 33, 34);
                                        if (Nr == 9) client.Entity.Teleport(3333, 67, 34);
                                        if (Nr == 10) client.Entity.Teleport(3333, 68, 57);
                                    }
                                    else
                                    {
                                        dialog.Text("LastManStanding Pk War is held during xx:30 to xx:45 you have 2 min to signup ");
                                        dialog.Option("I don't care.", 255);
                                        dialog.Send();
                                        break;
                                    }
                                    break;
                                }
                        }
                        break;
                    }
                #endregion
                #region Winner of LastMan
                case 54235:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Hey there " + client.Entity.Name + " Would you like to claim your Prize?.");
                                    dialog.Option("Yes Please", 1);
                                    dialog.Option("I don't care.", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    Daily.CheackAlive2();
                                    if (DateTime.Now.Minute >= 34 && DateTime.Now.Minute <= 50)
                                    {
                                        if (Daily.howmanyinmap2 == 1)
                                        {
                                            client.Entity.ConquerPoints += PhoenixProject.Database.rates.LastMan;
                                            PhoenixProject.ServerBase.Kernel.SendWorldMessage(new Message("Congratulations! " + client.Entity.Name + " claimed the prize " + PhoenixProject.Database.rates.LastMan + " ConquerPoints for winning the LastManStanding for this Hour.", System.Drawing.Color.Black, Message.Center), PhoenixProject.ServerBase.Kernel.GamePool.Values);

                                            client.Entity.SendSpawn(client, true);
                                            client.Entity.Teleport(1002, 429, 378);

                                        }
                                        else
                                        {
                                            dialog.Text("There are still " + Daily.howmanyinmap + " players in the map kill it first to claim prize!");
                                            dialog.Option("okay", 255);
                                            dialog.Send();
                                            break;
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Hey there " + client.Entity.Name + "You can only claim the prize when the time on or after xx:34");
                                        dialog.Option("okay", 255);
                                        dialog.Send();
                                        break;
                                    }
                                    break;
                                }
                        }
                        break;
                    }
                #endregion
                #region Winner of WeeklyPKWar NPC 2315
                case 2315:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Hey there " + client.Entity.Name + " Would you like to claim your Prize?.");
                                    dialog.Option("Yes Please", 1);
                                    dialog.Option("I don't care.", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    int alive = 0;
                                    foreach (PhoenixProject.Client.GameState players in PhoenixProject.ServerBase.Kernel.GamePool.Values)
                                        if (players.Entity.MapID == 1508 && (!players.Entity.Dead))
                                            alive++;
                                    if (DateTime.Now.DayOfWeek == DayOfWeek.Sunday && DateTime.Now.Minute >= 06)
                                    {
                                        if (alive == 1)
                                        {
                                            client.Entity.ConquerPoints += PhoenixProject.Database.rates.weeklypk;
                                            Game.Flags.AddWeekly(client);
                                            PhoenixProject.ServerBase.Kernel.SendWorldMessage(new Message("Congratulations! " + client.Entity.Name + " claimed the prize " + PhoenixProject.Database.rates.weeklypk + " Cps for winning the Weekly Pk War and Receive Weekly PkWar Halo.", System.Drawing.Color.Black, Message.Talk), PhoenixProject.ServerBase.Kernel.GamePool.Values);
                                            client.Entity.AddFlag(Update.Flags.WeeklyPKChampion);
                                            client.Entity.SendSpawn(client, true);
                                            client.Entity.Teleport(1002, 429, 378);
                                            EntityTable.SaveEntity(client);
                                        }
                                        else
                                        {
                                            dialog.Text("There are still " + alive + " players in the map kill it first to claim prize!");
                                            dialog.Option("okay", 255);
                                            dialog.Send();
                                            break;
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Hey there " + client.Entity.Name + "You can only claim the prize when the time on or after " + Game.KimoEvents.WHour + ":06");
                                        dialog.Option("okay", 255);
                                        dialog.Send();
                                        break;
                                    }
                                    break;
                                }
                        }
                        break;
                    }
                #endregion
                #region MonthlyPk
                case 2316:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Hey there " + client.Entity.Name + " Would you like to join the Monthly PKWar?.");
                                    dialog.Option("Yes Please", 1);
                                    dialog.Option("I don't care.", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    if (DateTime.Now.DayOfYear == 1 && DateTime.Now.Hour == 14 && DateTime.Now.Minute <= 05)
                                    {
                                        Random R = new Random();
                                        int Nr = R.Next(1, 10);
                                        if (Nr == 1) client.Entity.Teleport(1518, 114, 078);
                                        if (Nr == 2) client.Entity.Teleport(1518, 96, 87);
                                        if (Nr == 3) client.Entity.Teleport(1518, 142, 88);
                                        if (Nr == 4) client.Entity.Teleport(1518, 115, 115);
                                        if (Nr == 5) client.Entity.Teleport(1518, 98, 130);
                                        if (Nr == 6) client.Entity.Teleport(1518, 96, 153);
                                        if (Nr == 7) client.Entity.Teleport(1518, 112, 162);
                                        if (Nr == 8) client.Entity.Teleport(1518, 130, 166);
                                        if (Nr == 9) client.Entity.Teleport(1518, 139, 114);
                                        if (Nr == 10) client.Entity.Teleport(1518, 156, 119);
                                    }
                                    else
                                    {
                                        dialog.Text("Monthly Pk War is held during Firstday in the Month at 14:00 ");
                                        dialog.Option("I don't care.", 255);
                                        dialog.Send();
                                        break;
                                    }
                                    break;
                                }
                        }
                        break;
                    }
                #endregion
                #region Winner of MonthlyPk NPC 2315
                case 2317:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Hey there " + client.Entity.Name + " Would you like to claim your Prize?.");
                                    dialog.Option("Yes Please", 1);
                                    dialog.Option("I don't care.", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    int alive = 0;
                                    foreach (PhoenixProject.Client.GameState players in PhoenixProject.ServerBase.Kernel.GamePool.Values)
                                        if (players.Entity.MapID == 1518 && (!players.Entity.Dead))
                                            alive++;
                                    if (DateTime.Now.DayOfYear == 1 && DateTime.Now.Hour == 14 && DateTime.Now.Minute >= 25)
                                    {
                                        if (alive == 1)
                                        {
                                            client.Entity.ConquerPoints += PhoenixProject.Database.rates.MonthlyPk;
                                            Game.Flags.AddMonthly(client);
                                            PhoenixProject.ServerBase.Kernel.SendWorldMessage(new Message("Congratulations! " + client.Entity.Name + " claimed the prize " + PhoenixProject.Database.rates.MonthlyPk + " ConquerPoints for winning the Monthly Pk War and Receive Monthly PkWar Halo.", System.Drawing.Color.Black, Message.Talk), PhoenixProject.ServerBase.Kernel.GamePool.Values);
                                            client.Entity.AddFlag(Update.Flags.MonthlyPKChampion);
                                            client.Entity.SendSpawn(client, true);
                                            client.Entity.Teleport(1002, 429, 378);
                                            EntityTable.SaveEntity(client);
                                        }
                                        else
                                        {
                                            dialog.Text("There are still " + alive + " players in the map kill it first to claim prize!");
                                            dialog.Option("okay", 255);
                                            dialog.Send();
                                            break;
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Hey there " + client.Entity.Name + "You can only claim the prize when the time on or after 14:25");
                                        dialog.Option("okay", 255);
                                        dialog.Send();
                                        break;
                                    }
                                    break;
                                }
                        }
                        break;
                    }
                #endregion
                #region GameHaker-PM- A.G.S Coder
                case 131313:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Hi " + client.Entity.Name + "!, Iam letter man, So you can help me?");
                                    dialog.Option("Yes,sure.", 1);
                                    dialog.Option("Give me Awards.", 2);
                                    dialog.Option("Sorry, Ican't.", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    dialog.Text("Thank you for help" + client.Entity.Name + "!, ok go to and kill TwinCity monster to attend this later [C,O,N,Q,U,E,R] If you are lucky you will get No. 7 in order to maximize your profits.");
                                    dialog.Option("Lets Go.", 255);
                                    dialog.Option("Sorry, Ican't", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 2:
                                {
                                    if (client.Entity.Level >= 130)//C
                                    {
                                        if (client.Entity.Quest == 0)//C
                                        {
                                            dialog.Text("Good job man you are strong man ,So What brought?");
                                            dialog.Option("C,O,N,Q,U,E,R", 3);
                                            dialog.Option("C,O,N,Q,U,E,R,7", 4);
                                            dialog.Option("Has not brought anything.", 255);
                                            dialog.Send();
                                            break;
                                        }
                                        else
                                        {
                                            dialog.Text("You already finished this quest 1 time today come again tomorow");
                                            dialog.Option("Oh,sorry.", 255);
                                            dialog.Send();
                                            break;
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("You need to be atleast level 130 so you can start the quest");
                                        dialog.Option("Oh,sorry.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 3:
                                {
                                    if (client.Inventory.Contains(711214, 1))//C
                                        if (client.Inventory.Contains(711215, 1))//O
                                            if (client.Inventory.Contains(711216, 1))//N
                                                if (client.Inventory.Contains(711217, 1))//Q
                                                    if (client.Inventory.Contains(711218, 1))//U
                                                        if (client.Inventory.Contains(711219, 1))//E
                                                            if (client.Inventory.Contains(711220, 1))//R
                                                            {
                                                                client.Inventory.Remove(711214, 1);
                                                                client.Inventory.Remove(711215, 1);
                                                                client.Inventory.Remove(711216, 1);
                                                                client.Inventory.Remove(711217, 1);
                                                                client.Inventory.Remove(711218, 1);
                                                                client.Inventory.Remove(711219, 1);
                                                                client.Inventory.Remove(711220, 1);
                                                                client.Entity.ConquerPoints += 1500;
                                                                client.Entity.Quest += 1;
                                                                PhoenixProject.Network.PacketHandler.WorldMessage("Congratulations! " + client.Entity.Name + "! Give Letter C,O,N,Q,U,E,R And Get 1,000 CPS");
                                                            }
                                                            else
                                                            {
                                                                dialog.Text("You don't have letter [C,O,Q,U,E,R] or you done the quest 1 time today");
                                                                dialog.Option("Ahh sorry.", 255);
                                                            }
                                    break;
                                }
                            case 4:
                                {
                                    if (client.Inventory.Contains(711215, 1))//O
                                        if (client.Inventory.Contains(711216, 1))//N
                                            if (client.Inventory.Contains(711217, 1))//Q
                                                if (client.Inventory.Contains(711218, 1))//U
                                                    if (client.Inventory.Contains(711219, 1))//E
                                                        if (client.Inventory.Contains(711220, 1))//R
                                                            if (client.Inventory.Contains(711221, 1))//X
                                                            {
                                                                client.Inventory.Remove(711214, 1);
                                                                client.Inventory.Remove(711215, 1);
                                                                client.Inventory.Remove(711216, 1);
                                                                client.Inventory.Remove(711217, 1);
                                                                client.Inventory.Remove(711218, 1);
                                                                client.Inventory.Remove(711219, 1);
                                                                client.Inventory.Remove(711220, 1);
                                                                client.Inventory.Remove(711221, 1);
                                                                client.Entity.ConquerPoints += 2000;
                                                                client.Entity.Quest += 1;
                                                                PhoenixProject.Network.PacketHandler.WorldMessage("Congratulations! " + client.Entity.Name + "! Give Letter C,O,N,Q,U,E,R,7 And Get 2,000 CPS");
                                                            }
                                                            else
                                                            {
                                                                dialog.Text("You don't have letter [C,O,Q,U,E,R,7] or you done the quest 1 time today");
                                                                dialog.Option("Ahh sorry.", 255);
                                                            }
                                    break;

                                }
                        }
                        break;
                    }
                #endregion
                #region SolarSaint
                case 3215:
                    {
                        if (npcRequest.OptionID == 0)
                        {
                            dialog.Text("Our ancestors exerted their utmost efforts and defeathed the demons. Since");
                            dialog.Text(" then the world has been kept in peace for hundreads of years. Now the");
                            dialog.Text(" demons have come back and the world is getting into turbulence again.");
                            dialog.Option("Could you tell me more?", 1);
                            dialog.Option("I am here to drive away the evils!", 2);
                            dialog.Option("I'd better leave.", 255);
                            dialog.Avatar(0);
                            dialog.Send();
                        }
                        else if (npcRequest.OptionID == 1)
                        {
                            dialog.Text("The decisive battle bewtween human and the demon broke out here. The");
                            dialog.Text(" ferocious battle lasted for seven days and nights. Countless heroes lost their");
                            dialog.Text(" lives. And the justice won. Afterwards we can live in peace for hundreads of");
                            dialog.Text(" years.");
                            dialog.Option("And then?", 3);
                            dialog.Avatar(0);
                            dialog.Send();
                        }
                        else if (npcRequest.OptionID == 3)
                        {
                            dialog.Text("UltimatePluto, leader of the demons sworn to take revenge in one thousand");
                            dialog.Text(" years befote he managed to run away. To prevent the demons coming back, I");
                            dialog.Text(" have been scouting their land cautiously. Yesterday I found something");
                            dialog.Text(" unwanted. It seems that UltimatePluto had come round to endanger humans");
                            dialog.Text(" again.");
                            dialog.Option("What should we do?", 4);
                            dialog.Avatar(0);
                            dialog.Send();
                        }
                        else if (npcRequest.OptionID == 4)
                        {
                            dialog.Text("Fortunately UltimatePluto is still unfledged. He must resort to a Battle");
                            dialog.Text(" Formation for the moments. So i am about to organize an army too infiltrate his");
                            dialog.Text(" land and destroy his formation before he becomes stronger.");
                            dialog.Option("I'll join you.", 2);
                            dialog.Option("I'd like to know more.", 5);
                            dialog.Option("Sigh, I'm helpless.", 255);
                            dialog.Avatar(0);
                            dialog.Send();
                        }
                        else if (npcRequest.OptionID == 5)
                        {
                            dialog.Text("You must kill UltimatePluto rapisly to get Darkhorn so that i can use it to");
                            dialog.Text(" diable the formation. Before you can do that, you must break into HellGate,");
                            dialog.Text(" enter the HellHall, and fight through the HellCloister. Countless ferocious");
                            dialog.Text(" demons are watching those strongholds. I'll give you some strategies on");
                            dialog.Text(" breaking through those fortresses if you like.");
                            dialog.Option("I want to know HellGate", 6);
                            dialog.Option("I want to know HellHall", 7);
                            dialog.Option("I want to know HellCloister", 8);
                            dialog.Option("I want to know BattleFormation", 9);
                            dialog.Option("Thanks. I know what to do.", 255);
                            dialog.Avatar(0);
                            dialog.Send();
                        }
                        else if (npcRequest.OptionID == 6) //HellGate info
                        {
                            dialog.Text("HellGate is shielded from poisonous fog, so you can't approach it. But");
                            dialog.Text(" demons do not fear the gas. They may turn into SoulStones after they die. If");
                            dialog.Text(" you get 5 stones for me, i'll help you break through the gate. To protect");
                            dialog.Text(" the unrealted persons, i'll send the others back as soon as the first 60");
                            dialog.Text(" persons pass through the gate.");
                            dialog.Option("Thank you.", 255);
                            dialog.Option("I'd like to know more", 5);
                            dialog.Avatar(0);
                            dialog.Send();
                        }
                        else if (npcRequest.OptionID == 7) //HellHall info
                        {
                            dialog.Text("HellHall is the very spot where the demons swear their oaths of allegiance to");
                            dialog.Text(" UltimatePluto. Everybody must do his best to make a way out. Due to limited");
                            dialog.Text(" time, i can lead only 30 persons to hellCloister!");
                            dialog.Option("Thanks", 255);
                            dialog.Option("I'd like to know more.", 5);
                            dialog.Avatar(0);
                            dialog.Send();
                        }
                        else if (npcRequest.OptionID == 8) //Hell Cloister info
                        {
                            dialog.Text("You will be divided into 2 groups to attack from the left and the right flank of");
                            dialog.Text(" HellCloister. Kill the Wraithas many as you can, because you can't reach");
                            dialog.Text(" BattleFormation untill the amount of wraith is decreased to a certain level.");
                            dialog.Option("Thank you.", 255);
                            dialog.Option("I'd like to know more.", 5);
                            dialog.Avatar(0);
                            dialog.Send();
                        }
                        else if (npcRequest.OptionID == 9) //Battle Formation info
                        {
                            dialog.Text("BattleFormation is protected by Syrens. After they are killed out,");
                            dialog.Text(" UltimatePluto will appear. Make the best effort to kill him, get his Darkhorn");
                            dialog.Text(" and give it to me. I can disable the BattleFormation with it. Then i'll send you");
                            dialog.Text(" back. But if you fail to do it, we have to retreat and wait for another opportunity");
                            dialog.Option("Thanks.", 255);
                            dialog.Option("I'd like to know more.", 5);
                            dialog.Avatar(0);
                            dialog.Send();
                        }
                        else if (npcRequest.OptionID == 2)
                        {
                            if (PhoenixProject.Game.Features.DisCity.dis == true)
                            {
                                if (client.Entity.Level >= 110)
                                {

                                    {
                                        Random Rand = new Random();
                                        int dis = Rand.Next(1, 10);
                                        if (dis == 1) { client.Entity.Teleport(4021, 291, 475); }
                                        if (dis == 2) { client.Entity.Teleport(4021, 335, 345); }
                                        if (dis == 3) { client.Entity.Teleport(4021, 198, 355); }
                                        if (dis == 4) { client.Entity.Teleport(4021, 246, 326); }
                                        if (dis == 5) { client.Entity.Teleport(4021, 321, 372); }
                                        if (dis == 6) { client.Entity.Teleport(4021, 315, 280); }
                                        if (dis == 7) { client.Entity.Teleport(4021, 281, 302); }
                                        if (dis == 8) { client.Entity.Teleport(4021, 221, 202); }
                                        if (dis == 9) { client.Entity.Teleport(4021, 173, 214); }
                                        if (dis == 10) { client.Entity.Teleport(4021, 211, 255); }

                                    }
                                }
                                else
                                {
                                    dialog.Text("Sorry, you are too weak to fight those monsters, go get level 110 and talk to me later.");
                                    dialog.Option("Okay, I will!", 255);
                                    dialog.Avatar(0);
                                    dialog.Send();
                                }
                            }
                            else
                            {
                                dialog.Text("Sorry, but the dis city quest is off!");
                                dialog.Option("OK, I see.", 255);
                                dialog.Avatar(0);
                                dialog.Send();
                            }
                        }
                        break;
                    }
                #endregion
                #region DisCity Stage 1
                case 1110:
                    {
                        if (npcRequest.OptionID == 0)
                        {
                            dialog.Text("Hello! You need 5 SoulStones to finish Stage 1, and I'll teleport you to Stage2.");
                            dialog.Option("here you are", 1);
                            dialog.Option("Sorry, I'll be back", 255);
                            dialog.Avatar(0);
                            dialog.Send();
                        }
                        else if (npcRequest.OptionID == 1)
                        {
                            if (client.Inventory.Contains(723085, 5))
                            {
                                if (PhoenixProject.Game.Features.DisCity.DisMax1 < 60)
                                {
                                    client.Entity.Teleport(4022, 240, 340);


                                    PhoenixProject.Game.Features.DisCity.DisMax1 += 1;
                                    PhoenixProject.ServerBase.Kernel.SendWorldMessage(new PhoenixProject.Network.GamePackets.Message("Congratulations! " + client.Entity.Name + " Has Enterd 2nd Stage in DisCity and Rank Num " + PhoenixProject.Game.Features.DisCity.DisMax1 + "!", System.Drawing.Color.White, 2011), PhoenixProject.ServerBase.Kernel.GamePool.Values);
                                    client.Entity.DisQuest = true;
                                    client.Inventory.Remove(723085, 1);
                                    client.Inventory.Remove(723085, 1);
                                    client.Inventory.Remove(723085, 1);
                                    client.Inventory.Remove(723085, 1);
                                    client.Inventory.Remove(723085, 1);

                                    if (PhoenixProject.Game.Features.DisCity.DisMax1 == 60)
                                    {
                                        if (client.Entity.MapID == 4021)
                                        {
                                            client.Entity.Teleport(1020, 533, 483);
                                            dialog.Text("You didn't make it to the next floor in time.");
                                            PhoenixProject.ServerBase.Kernel.SendWorldMessage(new PhoenixProject.Network.GamePackets.Message(" All Players of Dis City Stage 1 has teleported to TwinCity!", System.Drawing.Color.White, 2011), PhoenixProject.ServerBase.Kernel.GamePool.Values);
                                        }
                                    }
                                    //Features.discity.Stage3();
                                }
                                else
                                {
                                    dialog.Text(" Sorry, you have missed your chance to enter the next floor of Dis City.");
                                    dialog.Option("Darn!", 1);
                                    dialog.Avatar(0);
                                    dialog.Send();
                                }
                            }
                            else
                            {
                                dialog.Text(" Sorry, you don't have 5 SoulStones.");
                                dialog.Option("Ok, I'll be back", 1);
                                dialog.Avatar(0);
                                dialog.Send();
                            }

                        }
                        break;
                    }
                #endregion
                #region DisCity Stage 2
                case 4011:
                    {
                        if (npcRequest.OptionID == 0)
                        {
                            dialog.Text("Hello, can you help me? If you kill the required monsters I desire you can win some EXP.");
                            dialog.Option("Sounds good, how many do I kill?", 1);
                            dialog.Option("No thanks.", 255);
                            dialog.Avatar(0);
                            dialog.Send();
                        }
                        if (npcRequest.OptionID == 3)
                        {
                            if (PhoenixProject.Game.Features.DisCity.DisMax2 < 30)
                            {
                                client.Entity.DisQuest = false;
                                client.Entity.DisKO = 0;
                                PhoenixProject.Game.Features.DisCity.DisMax2++;
                                PhoenixProject.Game.Features.DisCity.DisMax3++;
                                client.Entity.Teleport(4023, 316, 635);
                                PhoenixProject.ServerBase.Kernel.SendWorldMessage(new PhoenixProject.Network.GamePackets.Message("Congratulations! " + client.Entity.Name + " Has Enterd 3rd Stage in DisCity and Rank Num " + PhoenixProject.Game.Features.DisCity.DisMax2 + "!", System.Drawing.Color.White, 2011), PhoenixProject.ServerBase.Kernel.GamePool.Values);

                                if (PhoenixProject.Game.Features.DisCity.DisMax2 == 30)
                                {
                                    if (client.Entity.MapID == 4022)
                                    {
                                        client.Entity.Teleport(1020, 533, 483);
                                        dialog.Text("You didn't make it to the next floor in time.");
                                        PhoenixProject.ServerBase.Kernel.SendWorldMessage(new PhoenixProject.Network.GamePackets.Message(" All Players of Dis City Stage 2 has teleported to TwinCity!", System.Drawing.Color.White, 2011), PhoenixProject.ServerBase.Kernel.GamePool.Values);
                                    }
                                }
                                //  Features.discity.Stage3();
                            }
                            else
                            {
                                dialog.Text(" Sorry, missed your chance to enter the next floor of Dis City. ");
                                dialog.Option("Darn!", 1);
                                dialog.Avatar(0);
                                dialog.Send();
                            }

                        }
                        if (npcRequest.OptionID == 1)
                        {
                            if (client.Entity.Class >= 10 && client.Entity.Class <= 15)
                            {
                                if (client.Entity.DisKO >= 800)
                                {
                                    dialog.Text("Which Flank are you going to attack from?");
                                    dialog.Option("Right.", 3);
                                    dialog.Option("Left.", 3);
                                    dialog.Avatar(0);
                                    dialog.Send();
                                }
                                else
                                {
                                    dialog.Text("You need to kill 800 Monsters ");
                                    dialog.Option("Alright.", 255);
                                    dialog.Option("No thanks.", 255);
                                    dialog.Avatar(0);
                                    dialog.Send();
                                }
                            }
                            else if (client.Entity.Class >= 20 && client.Entity.Class <= 25)
                            {
                                if (client.Entity.DisKO >= 900)
                                {
                                    dialog.Text("Which Flank are you going to attack from?");
                                    dialog.Option("Right.", 3);
                                    dialog.Option("Left.", 3);
                                    dialog.Avatar(0);
                                    dialog.Send();
                                }
                                else
                                {
                                    dialog.Text("You need to kill 900 Monsters ");
                                    dialog.Option("Alright.", 255);
                                    dialog.Option("No Thanks", 255);
                                    dialog.Avatar(0);
                                    dialog.Send();
                                }
                            }
                            else if (client.Entity.Class >= 40 && client.Entity.Class <= 45)
                            {
                                if (client.Entity.DisKO >= 1300)
                                {

                                    dialog.Text("Which Flank are you going to attack from?");
                                    dialog.Option("Right.", 3);
                                    dialog.Option("Left.", 3);
                                    dialog.Avatar(0);
                                    dialog.Send();
                                }
                                else
                                {
                                    dialog.Text("You need to kill 1300 Monsters ");
                                    dialog.Option("Alright.", 255);
                                    dialog.Option("No Thanks", 255);
                                    dialog.Avatar(0);
                                    dialog.Send();
                                }
                            }
                            else if (client.Entity.Class >= 60 && client.Entity.Class <= 65)
                            {
                                if (client.Entity.DisKO >= 700)
                                {

                                    dialog.Text("Which Flank are you going to attack from?");
                                    dialog.Option("Right.", 3);
                                    dialog.Option("Left.", 3);
                                    dialog.Avatar(0);
                                    dialog.Send();
                                }
                                else
                                {
                                    dialog.Text("You need to kill 700 Monsters ");
                                    dialog.Option("Alright.", 255);
                                    dialog.Option("No Thanks", 255);
                                    dialog.Avatar(0);
                                    dialog.Send();
                                }
                            }
                            else if (client.Entity.Class >= 132 && client.Entity.Class <= 135)
                            {
                                if (client.Entity.DisKO >= 600)
                                {
                                    dialog.Text("Which Flank are you going to attack from?");
                                    dialog.Option("Right.", 3);
                                    dialog.Option("Left.", 3);
                                    dialog.Avatar(0);
                                    dialog.Send();
                                }
                                else
                                {
                                    dialog.Text("You need to kill 600 Monsters ");
                                    dialog.Option("Alright.", 255);
                                    dialog.Option("No Thanks", 255);
                                    dialog.Avatar(0);
                                    dialog.Send();
                                }
                            }
                            else if (client.Entity.Class >= 50 && client.Entity.Class <= 55)
                            {
                                if (client.Entity.DisKO >= 900)
                                {
                                    dialog.Text("Which Flank are you going to attack from?");
                                    dialog.Option("Right.", 3);
                                    dialog.Option("Left.", 3);
                                    dialog.Avatar(0);
                                    dialog.Send();
                                }
                                else
                                {
                                    dialog.Text("You need to kill 900 Monsters ");
                                    dialog.Option("Alright.", 255);
                                    dialog.Option("No Thanks", 255);
                                    dialog.Avatar(0);
                                    dialog.Send();
                                }
                            }
                            else if (client.Entity.Class >= 142 && client.Entity.Class <= 145)
                            {
                                if (client.Entity.DisKO >= 1000)
                                {
                                    dialog.Text("Which Flank are you going to attack from?");
                                    dialog.Option("Right.", 3);
                                    dialog.Option("Left.", 3);
                                    dialog.Avatar(0);
                                    dialog.Send();

                                }
                                else
                                {
                                    dialog.Text("You need to kill 1000 Monsters ");
                                    dialog.Option("Alright.", 255);
                                    dialog.Option("No Thanks", 255);
                                    dialog.Avatar(0);
                                    dialog.Send();
                                }
                            }
                        }
                        break;
                    }
                #endregion
                #region ClassPkEnvoy
                case 705:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Hello there,i can help you to Join ClassPk but you should Read the rules First before SignUp.");
                                    dialog.Option("SignUp.", 2);
                                    dialog.Option("Tell Me Rules.", 1);
                                    dialog.Option("Just Passing By!", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    dialog.Text("We have classPk Tourment EveryDay Every Class Have Custom Map Start At " + Game.KimoEvents.ClassHour + ":00");
                                    dialog.Text("you need to come at the time so i can let you join!");
                                    dialog.Option("SignUp.", 2);
                                    dialog.Option("Just Passing By!", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 2:
                                {
                                    if (client.Entity.Class >= 10 && client.Entity.Class <= 15 && DateTime.Now.Hour == Game.KimoEvents.ClassHour && DateTime.Now.Minute < 05)
                                    {
                                        dialog.Text("Trojan pk Tourment Has been Started would You like to Join It?");
                                        dialog.Option("yes.", 3);
                                        dialog.Option("Wait a minute.", 255);
                                        dialog.Send();
                                    }
                                    else if (client.Entity.Class >= 20 && client.Entity.Class <= 25 && DateTime.Now.Hour == Game.KimoEvents.ClassHour && DateTime.Now.Minute < 05)
                                    {
                                        dialog.Text("Warriors pk Tourment Has been Started would You like to Join It?");
                                        dialog.Option("yes.", 3);
                                        dialog.Option("Wait a minute.", 255);
                                        dialog.Send();
                                    }
                                    else if (client.Entity.Class >= 40 && client.Entity.Class <= 45 && DateTime.Now.Hour == Game.KimoEvents.ClassHour && DateTime.Now.Minute < 05)
                                    {
                                        dialog.Text("Archers pk Tourment Has been Started would You like to Join It?");
                                        dialog.Option("yes.", 3);
                                        dialog.Option("Wait a minute.", 255);
                                        dialog.Send();
                                    }
                                    else if (client.Entity.Class >= 50 && client.Entity.Class <= 55 && DateTime.Now.Hour == Game.KimoEvents.ClassHour && DateTime.Now.Minute < 05)
                                    {
                                        dialog.Text("Ninjas pk Tourment Has been Started would You like to Join It?");
                                        dialog.Option("yes.", 3);
                                        dialog.Option("Wait a minute.", 255);
                                        dialog.Send();
                                    }
                                    else if (client.Entity.Class >= 60 && client.Entity.Class <= 65 && DateTime.Now.Hour == Game.KimoEvents.ClassHour && DateTime.Now.Minute < 05)
                                    {
                                        dialog.Text("Monk pk Tourment Has been Started would You like to Join It?");
                                        dialog.Option("yes.", 3);
                                        dialog.Option("Wait a minute.", 255);
                                        dialog.Send();
                                    }
                                    else if (client.Entity.Class >= 130 && client.Entity.Class <= 135 && DateTime.Now.Hour == Game.KimoEvents.ClassHour && DateTime.Now.Minute < 05)
                                    {
                                        dialog.Text("WaterTao pk Tourment Has been Started would You like to Join It?");
                                        dialog.Option("yes.", 3);
                                        dialog.Option("Wait a minute.", 255);
                                        dialog.Send();
                                    }
                                    else if (client.Entity.Class >= 140 && client.Entity.Class <= 145 && DateTime.Now.Hour == Game.KimoEvents.ClassHour && DateTime.Now.Minute < 05)
                                    {
                                        dialog.Text("FireTao pk Tourment Has been Started would You like to Join It?");
                                        dialog.Option("yes.", 3);
                                        dialog.Option("Wait a minute.", 255);
                                        dialog.Send();
                                    }
                                    else if (client.Entity.Class >= 70 && client.Entity.Class <= 75 && DateTime.Now.Hour == Game.KimoEvents.ClassHour && DateTime.Now.Minute < 05)
                                    {
                                        dialog.Text("Pirate pk Tourment Has been Started would You like to Join It?");
                                        dialog.Option("yes.", 3);
                                        dialog.Option("Wait a minute.", 255);
                                        dialog.Send();
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry there is no any Pk Tourment Running now for your class please Read the rules");
                                        dialog.Option("ok Sorry.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 3:
                                {
                                    if (DateTime.Now.Hour == Game.KimoEvents.ClassHour && DateTime.Now.Minute < 05)
                                    {
                                        if (client.Entity.Class >= 10 && client.Entity.Class <= 15)
                                        {
                                            client.Entity.Teleport(7001, 25, 40);
                                        }
                                        if (client.Entity.Class >= 20 && client.Entity.Class <= 25)
                                        {
                                            client.Entity.Teleport(4500, 25, 40);
                                        }
                                        if (client.Entity.Class >= 40 && client.Entity.Class <= 45)
                                        {
                                            client.Entity.Teleport(4501, 25, 40);
                                        }
                                        if (client.Entity.Class >= 50 && client.Entity.Class <= 55)
                                        {
                                            client.Entity.Teleport(4502, 25, 40);
                                        }
                                        if (client.Entity.Class >= 60 && client.Entity.Class <= 65)
                                        {
                                            client.Entity.Teleport(4503, 25, 40);
                                        }
                                        if (client.Entity.Class >= 70 && client.Entity.Class <= 75)
                                        {
                                            client.Entity.Teleport(4504, 25, 40);
                                        }
                                        if (client.Entity.Class >= 132 && client.Entity.Class <= 135)
                                        {
                                            client.Entity.Teleport(4505, 25, 40);
                                        }
                                        if (client.Entity.Class >= 142 && client.Entity.Class <= 145)
                                        {
                                            client.Entity.Teleport(4506, 25, 40);
                                        }
                                    }
                                    break;
                                }
                        }
                        break;
                    }
                #endregion
                #region QuarantineInvite
                case 54236:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    if (PhoenixProject.Game.ConquerStructures.Quarantine.Started)
                                    {
                                        dialog.Text("The quarantine tournament has now started!");
                                        dialog.Text("You will get divided into two teams, black and white, and ");
                                        dialog.Text("must eliminate the other. Only fastblade/scentsword is allowed!");
                                        dialog.Option("Let me join!", 1);
                                        dialog.Option("Not intrested", 255);
                                    }
                                    else
                                    {
                                        dialog.Text("The quarantine tournament is not active");
                                        dialog.Option("I see", 255);
                                    }
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    if (client.Equipment.Free(3))
                                    {
                                        dialog.Text("You need to wear an armor that can be colored.");
                                        dialog.Option("I see", 255);
                                        dialog.Send();
                                        break;
                                    }
                                    uint UID = 92000, ID = 0;
                                    if (Quarantine.Black.Count > Quarantine.White.Count)
                                    {
                                        Quarantine.White.Add(client.Entity.UID, client);
                                        UID += (uint)Quarantine.White.Count + (uint)Kernel.Random.Next(1, 1000);
                                        client.Entity.Teleport(1844, 114, 163);
                                    }
                                    else
                                    {
                                        Quarantine.Black.Add(client.Entity.UID, client);
                                        UID += (uint)Quarantine.Black.Count + (uint)Kernel.Random.Next(1, 1000);
                                        ID = 200;
                                        client.Entity.Teleport(1844, 225, 162);
                                    }

                                    PhoenixProject.Interfaces.IConquerItem newItem = new PhoenixProject.Network.GamePackets.ConquerItem(true);
                                    newItem.ID = 181315 + ID;
                                    newItem.UID = UID;
                                    newItem.Durability = 1000;
                                    newItem.MaximDurability = 1000;
                                    newItem.Position = 9;
                                    client.Equipment.Remove(9);
                                    if (client.Equipment.Objects[8] != null)
                                        client.Equipment.Objects[8] = null;
                                    client.Equipment.Add(newItem);
                                    newItem.Mode = PhoenixProject.Game.Enums.ItemMode.Update;
                                    newItem.Send(client);
                                    ClientEquip equips = new ClientEquip();
                                    equips.DoEquips(client);
                                    client.Send(equips);
                                    if (!client.AlternateEquipment)
                                    {
                                        client.Equipment.UpdateEntityPacket();
                                    }
                                    else
                                    {
                                        client.Equipment.UpdateEntityPacket2();
                                    }

                                    break;
                                }
                        }
                        break;
                    }
                #endregion
                #region TeamDeathMatch
                case 54239:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    if (client.Entity.Tournament_Signed == false)
                                    {
                                        if (DateTime.Now.Minute == 30)
                                        {
                                            dialog.Text("The TeamDeathMatch tournament has now started!");
                                            dialog.Text("You will get divided into 4 teams, black and white , blue and red, and ");
                                            dialog.Text("must eliminate the other. Only fastblade/scentsword is allowed!");
                                            dialog.Option("Let me join!", 1);
                                            dialog.Option("Not intrested", 255);
                                        }
                                        else
                                        {
                                            dialog.Text("The TeamDeathMatch  tournament is not active");
                                            dialog.Option("I see", 255);
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("You already Signed in TeamDeathMatch");
                                        dialog.Option("I see", 255);
                                    }
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    //181515 BlackElegance
                                    //181615 RedElegance
                                    //181815 BlueElegance
                                    //181315 WhiteElegence
                                    uint UID = 92000;
                                    if (client.Entity.Tournament_Signed == false)
                                    {
                                        if (DateTime.Now.Minute == 30)
                                        {
                                            Random r = new Random();
                                            int Team = r.Next(1, 8);
                                            if (Team == 1 || Team == 2)
                                            {
                                                #region Equip
                                                //Item Garment = client.Entity.Equips.Get(9);
                                                //Garment.ID = 181325;
                                                PhoenixProject.Interfaces.IConquerItem newItem = new PhoenixProject.Network.GamePackets.ConquerItem(true);
                                                newItem.ID = 181325;
                                                newItem.UID = UID;
                                                newItem.Durability = 1000;
                                                newItem.MaximDurability = 1000;
                                                newItem.Position = 9;
                                                //client.Inventory.Add(newItem, Game.Enums.ItemUse.CreateAndAdd);
                                                client.Equipment.Remove(9);
                                                if (client.Equipment.Objects[8] != null)
                                                    client.Equipment.Objects[8] = null;
                                                client.Equipment.Add(newItem);
                                                newItem.Mode = PhoenixProject.Game.Enums.ItemMode.Update;
                                                newItem.Send(client);
                                                ClientEquip equips = new ClientEquip();
                                                equips.DoEquips(client);
                                                client.Send(equips);
                                                if (!client.AlternateEquipment)
                                                {
                                                    client.Equipment.UpdateEntityPacket();
                                                }
                                                else
                                                {
                                                    client.Equipment.UpdateEntityPacket2();
                                                }
                                                #endregion

                                                //client.Entity.CurHP = 1;
                                                client.Entity.Tournament_Signed = true;
                                                client.Entity.TeamDeathMatch_WhiteTeam = true;
                                                client.Entity.TeamDeathMatch_Kills = 0;

                                                dialog.Text("You have been signed up for <TeamDeathMatch> <Team White>");
                                                //GC.AddSend(Packets.NPCSetFace(0));
                                                //GC.AddSend(Packets.NPCFinish());
                                            }
                                            if (Team == 3 || Team == 4)
                                            {
                                                #region Equip
                                                //Item Garment = client.Entity.Equips.Get(9);
                                                //Garment.ID = 181525;
                                                PhoenixProject.Interfaces.IConquerItem newItem = new PhoenixProject.Network.GamePackets.ConquerItem(true);
                                                newItem.ID = 181525;
                                                newItem.UID = UID;
                                                newItem.Durability = 1000;
                                                newItem.MaximDurability = 1000;
                                                newItem.Position = 9;
                                                //client.Inventory.Add(newItem, Game.Enums.ItemUse.CreateAndAdd);
                                                client.Equipment.Remove(9);
                                                if (client.Equipment.Objects[8] != null)
                                                    client.Equipment.Objects[8] = null;
                                                client.Equipment.Add(newItem);
                                                newItem.Mode = PhoenixProject.Game.Enums.ItemMode.Update;
                                                newItem.Send(client);
                                                ClientEquip equips = new ClientEquip();
                                                equips.DoEquips(client);
                                                client.Send(equips);
                                                if (!client.AlternateEquipment)
                                                {
                                                    client.Equipment.UpdateEntityPacket();
                                                }
                                                else
                                                {
                                                    client.Equipment.UpdateEntityPacket2();
                                                }
                                                #endregion

                                                //client.Entity.CurHP = 1;
                                                client.Entity.Tournament_Signed = true;
                                                client.Entity.TeamDeathMatch_BlackTeam = true;
                                                client.Entity.TeamDeathMatch_Kills = 0;

                                                dialog.Text("You have been signed up for <TeamDeathMatch> <Team Black>");
                                                //GC.AddSend(Packets.NPCSetFace(0));
                                                //GC.AddSend(Packets.NPCFinish());
                                            }
                                            if (Team == 5 || Team == 6)
                                            {
                                                #region Equip
                                                //Item Garment = client.Entity.Equips.Get(9);
                                                //Garment.ID = 181825;
                                                PhoenixProject.Interfaces.IConquerItem newItem = new PhoenixProject.Network.GamePackets.ConquerItem(true);
                                                newItem.ID = 181825;
                                                newItem.UID = UID;
                                                newItem.Durability = 1000;
                                                newItem.MaximDurability = 1000;
                                                newItem.Position = 9;
                                                //client.Inventory.Add(newItem, Game.Enums.ItemUse.CreateAndAdd);
                                                client.Equipment.Remove(9);
                                                if (client.Equipment.Objects[8] != null)
                                                    client.Equipment.Objects[8] = null;
                                                client.Equipment.Add(newItem);
                                                newItem.Mode = PhoenixProject.Game.Enums.ItemMode.Update;
                                                newItem.Send(client);
                                                ClientEquip equips = new ClientEquip();
                                                equips.DoEquips(client);
                                                client.Send(equips);
                                                if (!client.AlternateEquipment)
                                                {
                                                    client.Equipment.UpdateEntityPacket();
                                                }
                                                else
                                                {
                                                    client.Equipment.UpdateEntityPacket2();
                                                }
                                                #endregion

                                                //client.Entity.CurHP = 1;
                                                client.Entity.Tournament_Signed = true;
                                                client.Entity.TeamDeathMatch_BlueTeam = true;
                                                client.Entity.TeamDeathMatch_Kills = 0;

                                                dialog.Text("You have been signed up for <TeamDeathMatch> <Team Blue>");
                                                //GC.AddSend(Packets.NPCSetFace(0));
                                                //GC.AddSend(Packets.NPCFinish());
                                            }
                                            if (Team == 7 || Team == 8)
                                            {
                                                #region Equip
                                                PhoenixProject.Interfaces.IConquerItem newItem = new PhoenixProject.Network.GamePackets.ConquerItem(true);
                                                newItem.ID = 181625;
                                                newItem.UID = UID;
                                                newItem.Durability = 1000;
                                                newItem.MaximDurability = 1000;
                                                newItem.Position = 9;
                                                //client.Inventory.Add(newItem, Game.Enums.ItemUse.CreateAndAdd);
                                                client.Equipment.Remove(9);
                                                if (client.Equipment.Objects[8] != null)
                                                    client.Equipment.Objects[8] = null;
                                                client.Equipment.Add(newItem);
                                                newItem.Mode = PhoenixProject.Game.Enums.ItemMode.Update;
                                                newItem.Send(client);
                                                ClientEquip equips = new ClientEquip();
                                                equips.DoEquips(client);
                                                client.Send(equips);
                                                if (!client.AlternateEquipment)
                                                {
                                                    client.Equipment.UpdateEntityPacket();
                                                }
                                                else
                                                {
                                                    client.Equipment.UpdateEntityPacket2();
                                                }
                                                #endregion

                                                //client.Entity.CurHP = 1;
                                                client.Entity.Tournament_Signed = true;
                                                client.Entity.TeamDeathMatch_RedTeam = true;
                                                client.Entity.TeamDeathMatch_Kills = 0;

                                                dialog.Text("You have been signed up for <TeamDeathMatch> <Team Red>");
                                                //GC.AddSend(Packets.NPCSetFace(0));
                                                //GC.AddSend(Packets.NPCFinish());
                                            }
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("You are already signed up for this tournament!");
                                        dialog.Option("I see.", 255);
                                        //GC.AddSend(Packets.NPCSetFace(67));
                                        //GC.AddSend(Packets.NPCFinish());
                                    }
                                    dialog.Send();
                                    break;
                                }
                        }
                        break;
                    }
                #endregion
                #region KillTheTerrorist
                case 54237:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    if (PhoenixProject.Game.ConquerStructures.KillTheTerrorist.IsOn == true)
                                    {
                                        dialog.Text("The KillTheTerrorist tournament has now started!");
                                        dialog.Text("You need to kill the Terrorist and stay the Terrorist till the end ");
                                        dialog.Option("Let me join!", 1);
                                        dialog.Option("Not intrested", 255);
                                    }
                                    else
                                    {
                                        dialog.Text("The KillTheTerrorist tournament is not active");
                                        dialog.Option("I see", 255);
                                    }
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    if (DateTime.Now.Minute == 30)
                                    {
                                        if (PhoenixProject.Game.ConquerStructures.KillTheTerrorist.Terrorist == false)
                                        {
                                            PhoenixProject.Game.ConquerStructures.KillTheTerrorist.Terrorist = true;
                                            client.Entity.KillTheTerrorist_IsTerrorist = true;
                                            client.Entity.Tournament_Signed = true;
                                        }
                                        else
                                        {
                                            client.Entity.Tournament_Signed = true;
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("you can only SignUp when time be xx:30  and Then Autoinvite will take you to The Map At xx:31");
                                        dialog.Option("I see", 255);
                                    }
                                    dialog.Send();
                                    break;
                                }
                        }
                        break;
                    }
                #endregion
                #region Warden
                case 10082:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    if (client.Entity.PKPoints > 99)
                                    {
                                        dialog.Text("sorry i cant let you leave till you be less than 99 pk or");
                                        dialog.Text("You need to Pay 1k cps to let you leave now ! do you want to pay? ");
                                        dialog.Option("Yes i wana leave!", 2);
                                        dialog.Option("Not intrested", 255);
                                    }
                                    else
                                    {
                                        dialog.Text("I can take you out of the jail. Just tell me.");
                                        dialog.Option("Take me out.", 1);
                                        dialog.Option("Alright.", 255);
                                    }
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    client.Entity.Teleport(1002, 514, 356);
                                    break;
                                }
                            case 2:
                                {
                                    if (client.Entity.ConquerPoints > 1000)
                                    {
                                        client.Entity.ConquerPoints -= 1000;
                                        client.Entity.Teleport(1002, 514, 356);
                                        break;
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry you dont have 1k cps cant help you");
                                        //dialog.Option("Take me out.", 1);
                                        dialog.Option("Alright.", 255);
                                    }
                                    dialog.Send();
                                    break;
                                }
                        }
                        break;
                    }
                #endregion
                /////////new////////
                #region Seller SubClass Items

                case 3456:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Hey how I can help you ? ");
                                    dialog.Option("Buy YanYangFroot - 10k CPS ", 1);
                                    // dialog.Option("Buy MoonBox - 5000 CPS ", 2);//721080
                                    // dialog.Option("Buy EuxeniteOre - 5000 CPS ", 3);
                                    dialog.Option("Buy LuckyAmulet - 1000 CPS ", 4);
                                    dialog.Option("Buy MeteorTear - 5000 CPS ", 5);
                                    dialog.Option("Buy Bomb 5000 CPS ", 6);
                                    dialog.Option("Buy 3 Orched for 5000 cps ", 7);
                                    dialog.Option("Buy 1 Saddle for 500 cps ", 9);
                                    dialog.Option("Just passing by.", 255);
                                    dialog.Avatar(80);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    if (client.Entity.ConquerPoints >= 10000)
                                    {
                                        client.Entity.ConquerPoints -= 10000;
                                        client.Inventory.Add(711188, 0, 1);
                                    }
                                    else
                                    {
                                        dialog.Text("You don't have 10000 ConquerPoints.");
                                        dialog.Option("Ah, my bad", 255);
                                        dialog.Avatar(80);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 2:
                                {
                                    if (client.Entity.ConquerPoints >= 5000)
                                    {
                                        client.Entity.ConquerPoints -= 5000;
                                        client.Inventory.Add(721080, 0, 1);
                                    }
                                    else
                                    {
                                        dialog.Text("You don't have 5000 ConquerPoints.");
                                        dialog.Option("Ah, my bad", 255);
                                        dialog.Avatar(80);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 3:
                                {
                                    if (client.Entity.ConquerPoints >= 5000)
                                    {
                                        client.Entity.ConquerPoints -= 5000;
                                        client.Inventory.Add(1072031, 0, 1);
                                    }
                                    else
                                    {
                                        dialog.Text("You don't have 5000 ConquerPoints.");
                                        dialog.Option("Ah, my bad", 255);
                                        dialog.Avatar(80);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 4:
                                {
                                    if (client.Entity.ConquerPoints >= 1000)
                                    {
                                        client.Entity.ConquerPoints -= 1000;
                                        client.Inventory.Add(723087, 0, 1);
                                    }
                                    else
                                    {
                                        dialog.Text("You don't have 1000 ConquerPoints.");
                                        dialog.Option("Ah, my bad", 255);
                                        dialog.Avatar(80);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 5:
                                {
                                    if (client.Entity.ConquerPoints >= 5000)
                                    {
                                        client.Entity.ConquerPoints -= 5000;
                                        client.Inventory.Add(1088002, 0, 1);
                                    }
                                    else
                                    {
                                        dialog.Text("You don't have 5000 ConquerPoints.");
                                        dialog.Option("Ah, my bad", 255);
                                        dialog.Avatar(80);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 6:
                                {
                                    if (client.Entity.ConquerPoints >= 5000)
                                    {
                                        client.Entity.ConquerPoints -= 5000;
                                        client.Inventory.Add(721261, 0, 1);
                                    }
                                    else
                                    {
                                        dialog.Text("You don't have 5000 ConquerPoints.");
                                        dialog.Option("Ah, my bad", 255);
                                        dialog.Avatar(80);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 7:
                                {
                                    if (client.Entity.ConquerPoints >= 5000)
                                    {
                                        client.Entity.ConquerPoints -= 5000;
                                        client.Inventory.Add(753003, 0, 1);
                                    }
                                    else
                                    {
                                        dialog.Text("You don't have 5000 ConquerPoints.");
                                        dialog.Option("Ah, my bad", 255);
                                        dialog.Avatar(80);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 8:
                                {
                                    if (client.Entity.ConquerPoints >= 5000)
                                    {
                                        client.Inventory.Add(1080001, 0, 1);
                                        client.Entity.ConquerPoints -= 500;
                                    }
                                    else
                                    {
                                        dialog.Text("You don't have 5000 ConquerPoints.");
                                        dialog.Option("Ah, my bad", 255);
                                        dialog.Avatar(80);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 9:
                                if (client.Entity.ConquerPoints < 500)
                                {
                                    dialog.Text("You don't have 500 ConquerPoints.");
                                    dialog.Option("Ah, my bad", 0xff);
                                    dialog.Avatar(80);
                                    dialog.Send();
                                }
                                else
                                {
                                    client.Entity.ConquerPoints -= 500;
                                    client.Inventory.Add(0xb0bbf, 0, 1);
                                }
                                break;
                        }
                        break;
                    }

                #endregion Seller SubClass Items
                #region Mr.HassaN New Mount
                case 241095:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Hello" + client.Entity.Name + " I Sell Now Mount and Germant for 100k cps?");
                                    dialog.Option("ErrantryRobe.", 1);
                                    dialog.Option("DancingSnake", 2);
                                    dialog.Option("MakersProblems", 3);
                                    dialog.Option("NO Thx.", 255);
                                    dialog.Avatar(116);
                                    dialog.Send();

                                    break;
                                }
                            case 1:
                                {
                                    if (client.Entity.ConquerPoints >= 100000)
                                    {
                                        client.Entity.ConquerPoints -= 100000;
                                        client.Inventory.Add(188155, 0, 1);
                                    }
                                    else
                                    {

                                        dialog.Text("you don't have enought cps");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(116);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 2:
                                {
                                    if (client.Entity.ConquerPoints >= 100000)
                                    {
                                        client.Entity.ConquerPoints -= 100000;
                                        client.Inventory.Add(200458, 0, 1);
                                    }
                                    else
                                    {

                                        dialog.Text("you don't have enought cps");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(116);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 3:
                                {
                                    if (client.Entity.ConquerPoints >= 100000)
                                    {
                                        client.Entity.ConquerPoints -= 100000;
                                        client.Inventory.Add(200453, 0, 1);
                                    }
                                    else
                                    {

                                        dialog.Text("you don't have enought cps");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(116);
                                        dialog.Send();


                                    }
                                    break;
                                }
                        }
                        break;
                    }
                #endregion Mr.HassaN New Mount
                #region New Germant By Mr.HassaN
                case 125852255:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Hey i Sell Garmant For 100.000 Cps Do u Need ?");
                                    dialog.Option("WhiteCollarSuit", 1);
                                    dialog.Option("CherryBlossom", 2);
                                    dialog.Option("DreaminFlowers", 3);
                                    dialog.Option("HeavenScent", 4);
                                    dialog.Option("ChristmasSuit", 5);
                                    dialog.Option("CaribbeanPirate", 6);
                                    dialog.Option("FamilyBusiness", 7);
                                    dialog.Option("SoberDark", 9);
                                    dialog.Avatar(116);
                                    dialog.Send();
                                    break;

                                }
                            #region Germants
                            case 1:
                                {
                                    if (client.Entity.ConquerPoints >= 50000)
                                    {
                                        client.Entity.ConquerPoints -= 50000;
                                        client.Inventory.Add(184365, 0, 1);
                                    }
                                    else
                                    {
                                        dialog.Text("Please take 50k cps.");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(116);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 2:
                                {
                                    if (client.Entity.ConquerPoints >= 50000)
                                    {
                                        client.Entity.ConquerPoints -= 50000;
                                        client.Inventory.Add(186375, 0, 1);
                                    }
                                    else
                                    {
                                        dialog.Text("Please take 50k cps.");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(116);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 3:
                                {
                                    if (client.Entity.ConquerPoints >= 50000)
                                    {
                                        client.Entity.ConquerPoints -= 50000;
                                        client.Inventory.Add(186385, 0, 1);
                                    }
                                    else
                                    {
                                        dialog.Text("Please take 50k cps.");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(116);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 4:
                                {
                                    if (client.Entity.ConquerPoints >= 50000)
                                    {
                                        client.Entity.ConquerPoints -= 50000;
                                        client.Inventory.Add(182365, 0, 1);
                                    }
                                    else
                                    {
                                        dialog.Text("Please take 50k cps.");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(116);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 5:
                                {
                                    if (client.Entity.ConquerPoints >= 50000)
                                    {
                                        client.Entity.ConquerPoints -= 50000;
                                        client.Inventory.Add(183465, 0, 1);
                                    }
                                    else
                                    {
                                        dialog.Text("Please take 50k cps.");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(116);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 6:
                                {
                                    if (client.Entity.ConquerPoints >= 50000)
                                    {
                                        client.Entity.ConquerPoints -= 50000;
                                        client.Inventory.Add(183375, 0, 1);

                                    }
                                    else
                                    {
                                        dialog.Text("Please take 50k cps.");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(116);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 7:
                                {
                                    if (client.Entity.ConquerPoints >= 50000)
                                    {
                                        client.Entity.ConquerPoints -= 50000;
                                        client.Inventory.Add(184405, 0, 1);
                                    }
                                    else
                                    {
                                        dialog.Text("Please take 50k cps.");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(116);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            #endregion
                            #region Germant's
                            case 9:
                                {
                                    if (client.Entity.ConquerPoints >= 50000)
                                    {
                                        client.Entity.ConquerPoints -= 50000;
                                        client.Inventory.Add(187665, 0, 1);
                                    }
                                    else
                                    {
                                        dialog.Text("Please take 50k cps.");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(116);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            #endregion

                        }
                        break;
                    }
                #endregion
                #region OldSoul Mr.HassaN Seller
                case 1258522:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Hey i Sell DragonSoul For 100.000 Cps Do u Need ?");
                                    dialog.Option("HolyHeadgear P6", 1);
                                    dialog.Option("SaintHeavyRing P6", 2);
                                    dialog.Option("ArchonWand P6", 3);
                                    dialog.Option("MoonHammer P4", 4);
                                    dialog.Option("TombBlade P6", 5);
                                    dialog.Option("RadiantSword P4", 6);
                                    dialog.Option("OnimaKatana P4", 7);
                                    dialog.Option("Next Page", 8);
                                    dialog.Avatar(116);
                                    dialog.Send();
                                    break;

                                }
                            case 8:
                                {
                                    dialog.Text("Weclome To Next Page Of DragonSoul For 100.000 Cps Do u Need");
                                    dialog.Option("LotusBacksword P4", 9);
                                    dialog.Option("HolyBeadsOfMagnanimity P4", 10);
                                    dialog.Option("SoulRing P3", 11);
                                    dialog.Option("AzureHat P5", 12);
                                    dialog.Option("VioletRing P4", 13);
                                    dialog.Option("SolarHat P5", 14);
                                    dialog.Option("GraceBow P4", 15);
                                    dialog.Option("Thank You", 0);
                                    dialog.Avatar(116);
                                    dialog.Send();
                                    break;

                                }
                            #region Germants
                            case 1:
                                {
                                    if (client.Entity.ConquerPoints >= 100000)
                                    {
                                        client.Entity.ConquerPoints -= 100000;
                                        PacketHandler.CheckCommand2(new
                                        Message("@tegotegatege HolyHeadgear 2 0 0 0 0",
                                        System.Drawing.Color.Red, 2001), client);
                                    }
                                    else
                                    {
                                        dialog.Text("Please take 100k cps.");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(116);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 2:
                                {
                                    if (client.Entity.ConquerPoints >= 100000)
                                    {
                                        client.Entity.ConquerPoints -= 100000;
                                        PacketHandler.CheckCommand2(new
                                        Message("@tegotegatege SaintHeavyRing 7 0 0 0 0",
                                        System.Drawing.Color.Red, 2001), client);
                                    }
                                    else
                                    {
                                        dialog.Text("Please take 100k cps.");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(116);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 3:
                                {
                                    if (client.Entity.ConquerPoints >= 100000)
                                    {
                                        client.Entity.ConquerPoints -= 100000;
                                        PacketHandler.CheckCommand2(new
                                        Message("@tegotegatege ArchonWand 0 0 0 0 0",
                                        System.Drawing.Color.Red, 2001), client);
                                    }
                                    else
                                    {
                                        dialog.Text("Please take 100k cps.");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(116);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 4:
                                {
                                    if (client.Entity.ConquerPoints >= 100000)
                                    {
                                        client.Entity.ConquerPoints -= 100000;
                                        PacketHandler.CheckCommand2(new
                                        Message("@tegotegatege MoonHammer 5 0 0 0 0",
                                        System.Drawing.Color.Red, 2001), client);
                                    }
                                    else
                                    {
                                        dialog.Text("Please take 100k cps.");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(116);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 5:
                                {
                                    if (client.Entity.ConquerPoints >= 100000)
                                    {
                                        client.Entity.ConquerPoints -= 100000;
                                        PacketHandler.CheckCommand2(new
                                        Message("@tegotegatege TombBlade 0 0 0 0 0",
                                        System.Drawing.Color.Red, 2001), client);
                                    }
                                    else
                                    {
                                        dialog.Text("Please take 100k cps.");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(116);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 6:
                                {
                                    if (client.Entity.ConquerPoints >= 100000)
                                    {
                                        client.Entity.ConquerPoints -= 100000;
                                        PacketHandler.CheckCommand2(new
                                        Message("@tegotegatege RadiantSword 4 0 0 0 0",
                                        System.Drawing.Color.Red, 2001), client);

                                    }
                                    else
                                    {
                                        dialog.Text("Please take 100k cps.");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(116);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 7:
                                {
                                    if (client.Entity.ConquerPoints >= 100000)
                                    {
                                        client.Entity.ConquerPoints -= 100000;
                                        PacketHandler.CheckCommand2(new
                                        Message("@tegotegatege OnimaKatana 6 0 0 0 0",
                                        System.Drawing.Color.Red, 2001), client);
                                    }
                                    else
                                    {
                                        dialog.Text("Please take 100k cps.");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(116);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            #endregion
                            #region Germant's
                            case 9:
                                {
                                    if (client.Entity.ConquerPoints >= 100000)
                                    {
                                        client.Entity.ConquerPoints -= 100000;
                                        PacketHandler.CheckCommand2(new
                                        Message("@tegotegatege LotusBacksword 2 0 0 0 0",
                                        System.Drawing.Color.Red, 2001), client);
                                    }
                                    else
                                    {
                                        dialog.Text("Please take 100k cps.");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(116);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 10:
                                {
                                    if (client.Entity.ConquerPoints >= 100000)
                                    {
                                        client.Entity.ConquerPoints -= 100000;
                                        PacketHandler.CheckCommand2(new
                                        Message("@tegotegatege HolyBeadsOfMagnanimity 0 0 0 0 0",
                                        System.Drawing.Color.Red, 2001), client);
                                    }
                                    else
                                    {
                                        dialog.Text("Please take 100k cps.");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(116);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 11:
                                {
                                    if (client.Entity.ConquerPoints >= 100000)
                                    {
                                        client.Entity.ConquerPoints -= 100000;
                                        PacketHandler.CheckCommand2(new
                                        Message("@tegotegatege SoulRing 1 0 0 0 0",
                                        System.Drawing.Color.Red, 2001), client);
                                    }
                                    else
                                    {
                                        dialog.Text("Please take 100k cps.");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(116);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 12:
                                {
                                    if (client.Entity.ConquerPoints >= 100000)
                                    {
                                        client.Entity.ConquerPoints -= 100000;
                                        PacketHandler.CheckCommand2(new
                                        Message("@tegotegatege AzureHat 6 0 0 0 0",
                                        System.Drawing.Color.Red, 2001), client);
                                    }
                                    else
                                    {
                                        dialog.Text("Please take 100k cps.");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(116);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 13:
                                {
                                    if (client.Entity.ConquerPoints >= 100000)
                                    {
                                        client.Entity.ConquerPoints -= 100000;
                                        PacketHandler.CheckCommand2(new
                                        Message("@tegotegatege VioletRing 2 0 0 0 0",
                                        System.Drawing.Color.Red, 2001), client);
                                    }
                                    else
                                    {
                                        dialog.Text("Please take 100k cps.");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(116);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 14:
                                {
                                    if (client.Entity.ConquerPoints >= 100000)
                                    {
                                        client.Entity.ConquerPoints -= 100000;
                                        PacketHandler.CheckCommand2(new
                                        Message("@tegotegatege SolarHat 7 0 0 0 0",
                                        System.Drawing.Color.Red, 2001), client);
                                    }
                                    else
                                    {
                                        dialog.Text("Please take 100k cps.");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(116);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 15:
                                {
                                    if (client.Entity.ConquerPoints >= 100000)
                                    {
                                        client.Entity.ConquerPoints -= 100000;
                                        PacketHandler.CheckCommand2(new
                                        Message("@tegotegatege GraceBow 3 0 0 0 0",
                                        System.Drawing.Color.Red, 2001), client);
                                    }
                                    else
                                    {
                                        dialog.Text("Please take 100k cps.");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(116);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            #endregion

                        }
                        break;
                    }
                #endregion
                #region Germant's Seller
                case 125852:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Hey i Sell Germants Do u Need ?");
                                    dialog.Option("PartyDress(Lady", 1);
                                    dialog.Option("SandRaider", 2);
                                    dialog.Option("SamuraiLegacy", 3);
                                    dialog.Option("DuskRomance", 4);
                                    dialog.Option("TaekwondoUniform", 5);
                                    dialog.Option("MonkeyKingGown", 6);
                                    dialog.Option("CharmingSuit", 7);
                                    dialog.Option("Next Page", 8);
                                    dialog.Avatar(116);
                                    dialog.Send();
                                    break;

                                }
                            case 8:
                                {
                                    dialog.Text("Weclome To Next Page Of Germant");
                                    dialog.Option("EveningWear", 9);
                                    dialog.Option("FeatherDress", 10);
                                    dialog.Option("Pankrocker", 11);
                                    dialog.Option("PekingGenral", 12);
                                    dialog.Option("MonkeyKing", 13);
                                    dialog.Option("BeggarRags", 14);
                                    dialog.Option("UglyDuck", 15);
                                    dialog.Option("Thank You", 0);
                                    dialog.Avatar(116);
                                    dialog.Send();
                                    break;

                                }
                            #region Germants
                            case 1:
                                {
                                    if (client.Entity.ConquerPoints >= 50000)
                                    {
                                        client.Entity.ConquerPoints -= 50000;
                                        client.Inventory.Add(183365, 0, 1);
                                    }
                                    else
                                    {
                                        dialog.Text("Please take 50k cps.");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(116);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 2:
                                {
                                    if (client.Entity.ConquerPoints >= 50000)
                                    {
                                        client.Entity.ConquerPoints -= 50000;
                                        client.Inventory.Add(183305, 0, 1);
                                    }
                                    else
                                    {
                                        dialog.Text("Please take 50k cps.");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(116);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 3:
                                {
                                    if (client.Entity.ConquerPoints >= 50000)
                                    {
                                        client.Entity.ConquerPoints -= 50000;
                                        client.Inventory.Add(183315, 0, 1);
                                    }
                                    else
                                    {
                                        dialog.Text("Please take 50k cps.");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(116);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 4:
                                {
                                    if (client.Entity.ConquerPoints >= 50000)
                                    {
                                        client.Entity.ConquerPoints -= 50000;
                                        client.Inventory.Add(183325, 0, 1);
                                    }
                                    else
                                    {
                                        dialog.Text("Please take 50k cps.");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(116);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 5:
                                {
                                    if (client.Entity.ConquerPoints >= 50000)
                                    {
                                        client.Entity.ConquerPoints -= 50000;
                                        client.Inventory.Add(183345, 0, 1);
                                    }
                                    else
                                    {
                                        dialog.Text("Please take 50k cps.");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(116);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 6:
                                {
                                    if (client.Entity.ConquerPoints >= 50000)
                                    {
                                        client.Entity.ConquerPoints -= 50000;
                                        client.Inventory.Add(187315, 0, 1);

                                    }
                                    else
                                    {
                                        dialog.Text("Please take 50k cps.");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(116);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 7:
                                {
                                    if (client.Entity.ConquerPoints >= 50000)
                                    {
                                        client.Entity.ConquerPoints -= 50000;
                                        client.Inventory.Add(183485, 0, 1);
                                    }
                                    else
                                    {
                                        dialog.Text("Please take 50k cps.");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(116);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            #endregion
                            #region Germant's
                            case 9:
                                {
                                    if (client.Entity.ConquerPoints >= 50000)
                                    {
                                        client.Entity.ConquerPoints -= 50000;
                                        client.Inventory.Add(184355, 0, 1);
                                    }
                                    else
                                    {
                                        dialog.Text("Please take 50k cps.");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(116);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 10:
                                {
                                    if (client.Entity.ConquerPoints >= 50000)
                                    {
                                        client.Entity.ConquerPoints -= 50000;
                                        client.Inventory.Add(186355, 0, 1);
                                    }
                                    else
                                    {
                                        dialog.Text("Please take 50k cps.");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(116);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 11:
                                {
                                    if (client.Entity.ConquerPoints >= 50000)
                                    {
                                        client.Entity.ConquerPoints -= 50000;
                                        client.Inventory.Add(184335, 0, 1);
                                    }
                                    else
                                    {
                                        dialog.Text("Please take 50k cps.");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(116);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 12:
                                {
                                    if (client.Entity.ConquerPoints >= 50000)
                                    {
                                        client.Entity.ConquerPoints -= 50000;
                                        client.Inventory.Add(187305, 0, 1);
                                    }
                                    else
                                    {
                                        dialog.Text("Please take 50k cps.");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(116);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 13:
                                {
                                    if (client.Entity.ConquerPoints >= 50000)
                                    {
                                        client.Entity.ConquerPoints -= 50000;
                                        client.Inventory.Add(187315, 0, 1);
                                    }
                                    else
                                    {
                                        dialog.Text("Please take 50k cps.");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(116);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 14:
                                {
                                    if (client.Entity.ConquerPoints >= 50000)
                                    {
                                        client.Entity.ConquerPoints -= 50000;
                                        client.Inventory.Add(193300, 0, 1);
                                    }
                                    else
                                    {
                                        dialog.Text("Please take 50k cps.");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(116);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 15:
                                {
                                    if (client.Entity.ConquerPoints >= 50000)
                                    {
                                        client.Entity.ConquerPoints -= 50000;
                                        client.Inventory.Add(181395, 0, 1);
                                    }
                                    else
                                    {
                                        dialog.Text("Please take 50k cps.");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(116);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            #endregion

                        }
                        break;
                    }
                #endregion
                #region NewMonsters
                case 56725:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Would you like to go to New Monsters ");
                                    dialog.Option("TreatoDragon.", 1);
                                    dialog.Option("LavaBeast.", 2);
                                    dialog.Option("SnowBanshee.", 3);
                                    dialog.Option("ThrillingSpook.", 5);
                                    dialog.Option("No.", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    client.Entity.Teleport(2056, 347, 341);
                                    break;
                                }
                            case 2:
                                {
                                    client.Entity.Teleport(2056, 184, 333);
                                    break;
                                }
                            case 3:
                                {
                                    client.Entity.Teleport(1015, 797, 577);
                                    break;
                                }
                            case 4:
                                {
                                    client.Entity.Teleport(1090, 076, 051);
                                    break;
                                }
                            case 5:
                                {
                                    client.Entity.Teleport(4025, 145, 134);
                                    break;
                                }
                        }
                        break;
                    }
                #endregion
                /////////new////////
                #region New Quests By Mr Coder 
                #region Twin City 

                case 4470:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("hello " + client.Entity.Name + " in Server Error , I need  (( WishJade )) Go to kill monster out twin city to get it ! ");
                                    dialog.Option("Yes , I have it .", 1);
                                    dialog.Option("Go To kill monster .", 2);
                                    dialog.Option("Not now.", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 2:
                                {
                                    client.Entity.Teleport(1002, 455, 484);
                                    break;
                                }
                            case 1:
                                {
                                    if (client.Inventory.Contains(722117, 1))//C
                                    {
                                        client.Inventory.Remove(722117, 1);

                                        client.Inventory.Add(711521, 0, 1);

                                        PhoenixProject.Network.PacketHandler.WorldMessage("Congratulations! " + client.Entity.Name + "! Has Got Note`Do` nice man and good luck .");
                                    }
                                    else
                                    {
                                        dialog.Text("You don't have (( WishJade )) .");
                                        dialog.Option("Ahh sorry.", 255);
                                    }
                                    break;
                                }
                        }
                        break;
                    }

                #endregion Arena 300 cps
                #region Phoenix City

                case 30081:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("hello " + client.Entity.Name + " in Server Error , I need  (( WishDiamond )) Go to kill monster out Phoenix city to get it ! ");
                                    dialog.Option("Yes , I have it .", 1);
                                    dialog.Option("Go To kill monster .", 2);
                                    dialog.Option("Not now.", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 2:
                                {
                                    client.Entity.Teleport(1011, 229, 363);
                                    break;
                                }
                            case 1:
                                {
                                    if (client.Inventory.Contains(722118, 1))//C
                                    {
                                        client.Inventory.Remove(722118, 1);

                                        client.Inventory.Add(711522, 0, 1);

                                        PhoenixProject.Network.PacketHandler.WorldMessage("Congratulations! " + client.Entity.Name + "! Has Got Note`Re` nice man and good luck .");
                                    }
                                    else
                                    {
                                        dialog.Text("You don't have (( WishDiamond )) .");
                                        dialog.Option("Ahh sorry.", 255);
                                    }
                                    break;
                                }
                        }
                        break;
                    }

                #endregion Arena 300 cps
                #region Ape City

                case 4489:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("hello " + client.Entity.Name + " in Server Error , I need  (( BanditPlate )) Go to kill monster out Ape city to get it ! ");
                                    dialog.Option("Yes , I have it .", 1);
                                    dialog.Option("Go To kill monster .", 2);
                                    dialog.Option("Not now.", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 2:
                                {
                                    client.Entity.Teleport(1020, 662, 614);
                                    break;
                                }
                            case 1:
                                {
                                    if (client.Inventory.Contains(722112, 1))//C
                                    {
                                        client.Inventory.Remove(722112, 1);

                                        client.Inventory.Add(711523, 0, 1);

                                        PhoenixProject.Network.PacketHandler.WorldMessage("Congratulations! " + client.Entity.Name + "! Has Got Note`Mi` nice man and good luck .");
                                    }
                                    else
                                    {
                                        dialog.Text("You don't have (( BanditPlate )) .");
                                        dialog.Option("Ahh sorry.", 255);
                                    }
                                    break;
                                }
                        }
                        break;
                    }

                #endregion Arena 300 cps
                #region Desert City

                case 30164:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("hello " + client.Entity.Name + " in Server Error , I need  (( RatlingPlate )) Go to kill monster out Desert city to get it ! ");
                                    dialog.Option("Yes , I have it .", 1);
                                    dialog.Option("Go To kill monster .", 2);
                                    dialog.Option("Not now.", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 2:
                                {
                                    client.Entity.Teleport(1000, 652, 671);
                                    break;
                                }
                            case 1:
                                {
                                    if (client.Inventory.Contains(722113, 1))//C
                                    {
                                        client.Inventory.Remove(722113, 1);

                                        client.Inventory.Add(711524, 0, 1);

                                        PhoenixProject.Network.PacketHandler.WorldMessage("Congratulations! " + client.Entity.Name + "! Has Got Note`Fa` nice man and good luck .");
                                    }
                                    else
                                    {
                                        dialog.Text("You don't have (( RatlingPlate )) .");
                                        dialog.Option("Ahh sorry.", 255);
                                    }
                                    break;
                                }
                        }
                        break;
                    }

                #endregion Arena 300 cps
                #region Bird Island City

                case 300010:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("hello " + client.Entity.Name + " in Server Error , I need  (( MasqueBox )) Go to kill monster out Bird city to get it ! ");
                                    dialog.Option("Yes , I have it .", 1);
                                    dialog.Option("Go To kill monster .", 2);
                                    dialog.Option("Not now.", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 2:
                                {
                                    client.Entity.Teleport(1015, 743, 665);
                                    break;
                                }
                            case 1:
                                {
                                    if (client.Inventory.Contains(722114, 1))//C
                                    {
                                        client.Inventory.Remove(722114, 1);

                                        client.Inventory.Add(711525, 0, 1);

                                        PhoenixProject.Network.PacketHandler.WorldMessage("Congratulations! " + client.Entity.Name + "! Has Got Note`So` nice man and good luck .");
                                    }
                                    else
                                    {
                                        dialog.Text("You don't have (( MasqueBox )) .");
                                        dialog.Option("Ahh sorry.", 255);
                                    }
                                    break;
                                }
                        }
                        break;
                    }

                #endregion Arena 300 cps

                #region Invite and clime prize Moon Star

                case 3006554:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("hello " + client.Entity.Name + " in Server Error , Quest Star Moon you give me 6 items to get prize bag ! ");
                                    dialog.Text("You can talk with  pharmacisDong in Twin City , Coachlin in Phoenix City , PainterFengKang in Ape city , Mike in Desert City , Exorcist in Bird City. ");
                                    //dialog.Text("terFengKang in Ape city , Mike in Desert City , Exorcist in Bird City. ");
                                    dialog.Option("Go To pharmacisDong ( Twin )", 1);
                                    dialog.Option("Go To Coachin ( Phoenix )", 2);
                                    dialog.Option("Go To PainterFengKang ( Ape )", 3);
                                    dialog.Option("Go To Mike ( Desert )", 4);
                                    dialog.Option("Go To Exorcist ( Bird )", 5);
                                    dialog.Option("I Have all Item , I need my prize", 6);
                                    dialog.Option("Not now.", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    client.Entity.Teleport(1002, 389, 380);
                                    break;
                                }
                            case 2:
                                {
                                    client.Entity.Teleport(1011, 183, 272);
                                    break;
                                }
                            case 3:
                                {
                                    client.Entity.Teleport(1020, 560, 571);
                                    break;
                                }
                            case 4:
                                {
                                    client.Entity.Teleport(1000, 489, 621);
                                    break;
                                }
                            case 5:
                                {
                                    client.Entity.Teleport(1015, 719, 584);
                                    break;
                                }
                            case 6:
                                {
                                    if (client.Inventory.Contains(711521, 1))//Note`Do`
                                        if (client.Inventory.Contains(711522, 1))//Note`Re`
                                            if (client.Inventory.Contains(711523, 1))//Note`Mi`
                                                if (client.Inventory.Contains(711524, 1))//Note`Fa`
                                                    if (client.Inventory.Contains(711525, 1))//Note`So`
                                                            {
                                                                client.Inventory.Remove(711521, 1);
                                                                client.Inventory.Remove(711522, 1);
                                                                client.Inventory.Remove(711523, 1);
                                                                client.Inventory.Remove(711524, 1);
                                                                client.Inventory.Remove(711525, 1);

                                                                Random R = new Random();
                                                                int Nr = R.Next(1, 100);
                                                                if (Nr == 1) client.Inventory.Add(729252, 0, 1);
                                                                if (Nr == 2) client.Inventory.Add(729252, 0, 1);
                                                                if (Nr == 3) client.Inventory.Add(729252, 0, 1);
                                                                if (Nr == 4) client.Inventory.Add(729252, 0, 1);
                                                                if (Nr == 5) client.Inventory.Add(729252, 0, 1);
                                                                if (Nr == 6) client.Inventory.Add(729252, 0, 1);
                                                                if (Nr == 7) client.Inventory.Add(729252, 0, 1);
                                                                if (Nr == 8) client.Inventory.Add(729242, 0, 1);
                                                                if (Nr == 9) client.Inventory.Add(729242, 0, 1);
                                                                if (Nr == 10) client.Inventory.Add(729242, 0, 1);
                                                                if (Nr == 11) client.Inventory.Add(721222, 0, 1);
                                                                if (Nr == 12) client.Inventory.Add(721222, 0, 1);
                                                                if (Nr == 13) client.Inventory.Add(721222, 0, 1);
                                                                if (Nr == 14) client.Inventory.Add(800000, 0, 1);
                                                                if (Nr == 15) client.Inventory.Add(800000, 0, 1);
                                                                if (Nr == 16) client.Inventory.Add(800000, 0, 1);
                                                                if (Nr == 17) client.Inventory.Add(800000, 0, 1);
                                                                if (Nr == 18) client.Inventory.Add(800000, 0, 1);
                                                                if (Nr == 19) client.Inventory.Add(800017, 0, 1);
                                                                if (Nr == 20) client.Inventory.Add(800017, 0, 1);
                                                                if (Nr == 21) client.Inventory.Add(800017, 0, 1);
                                                                if (Nr == 22) client.Inventory.Add(800804, 0, 1);
                                                                if (Nr == 23) client.Inventory.Add(800804, 0, 1);
                                                                if (Nr == 24) client.Inventory.Add(800809, 0, 1);
                                                                if (Nr == 25) client.Inventory.Add(800809, 0, 1);
                                                                if (Nr == 26) client.Inventory.Add(800809, 0, 1);
                                                                if (Nr == 27) client.Inventory.Add(723723, 0, 1);
                                                                if (Nr == 28) client.Inventory.Add(723723, 0, 1);
                                                                if (Nr == 29) client.Inventory.Add(723723, 0, 1);
                                                                if (Nr == 30) client.Inventory.Add(723723, 0, 1);
                                                                if (Nr == 31) client.Inventory.Add(723723, 0, 1);
                                                                if (Nr == 32) client.Inventory.Add(723723, 0, 1);
                                                                if (Nr == 33) client.Inventory.Add(723723, 0, 1);
                                                                if (Nr == 34) client.Inventory.Add(722057, 0, 1);
                                                                if (Nr == 35) client.Inventory.Add(722057, 0, 1);
                                                                if (Nr == 36) client.Inventory.Add(722057, 0, 1);
                                                                if (Nr == 37) client.Inventory.Add(722057, 0, 1);
                                                                if (Nr == 38) client.Inventory.Add(722057, 0, 1);
                                                                if (Nr == 39) client.Inventory.Add(722057, 0, 1);
                                                                if (Nr == 40) client.Inventory.Add(722057, 0, 1);
                                                                if (Nr == 41) client.Inventory.Add(722057, 0, 1);
                                                                if (Nr == 42) client.Inventory.Add(722057, 0, 1);
                                                                if (Nr == 43) client.Inventory.Add(722057, 0, 1);
                                                                if (Nr == 44) client.Inventory.Add(728201, 0, 1);
                                                                if (Nr == 45) client.Inventory.Add(728201, 0, 1);
                                                                if (Nr == 46) client.Inventory.Add(728201, 0, 1);
                                                                if (Nr == 47) client.Inventory.Add(728201, 0, 1);
                                                                if (Nr == 48) client.Inventory.Add(728201, 0, 1);
                                                                if (Nr == 49) client.Inventory.Add(728201, 0, 1);
                                                                if (Nr == 50) client.Inventory.Add(728201, 0, 1);
                                                                if (Nr == 51) client.Inventory.Add(728201, 0, 1);
                                                                if (Nr == 52) client.Inventory.Add(723342, 0, 1);
                                                                if (Nr == 53) client.Inventory.Add(723342, 0, 2);
                                                                if (Nr == 54) client.Inventory.Add(723342, 0, 4);
                                                                if (Nr == 55) client.Inventory.Add(723342, 0, 3);
                                                                if (Nr == 56) client.Inventory.Add(723342, 0, 5);
                                                                if (Nr == 57) client.Inventory.Add(723342, 0, 6);
                                                                if (Nr == 58) client.Inventory.Add(723342, 0, 7);
                                                                if (Nr == 59) client.Inventory.Add(723342, 0, 8);
                                                                if (Nr == 60) client.Inventory.Add(723342, 0, 9);
                                                                if (Nr == 61) client.Inventory.Add(720836, 0, 1);
                                                                if (Nr == 62) client.Inventory.Add(720836, 0, 1);
                                                                if (Nr == 63) client.Inventory.Add(720836, 0, 1);
                                                                if (Nr == 64) client.Inventory.Add(720836, 0, 1);
                                                                if (Nr == 65) client.Inventory.Add(720836, 0, 1);
                                                                if (Nr == 66) client.Inventory.Add(720836, 0, 1);
                                                                if (Nr == 67) client.Inventory.Add(720836, 0, 1);
                                                                if (Nr == 68) client.Inventory.Add(720836, 0, 1);
                                                                if (Nr == 69) client.Inventory.Add(720836, 0, 1);
                                                                if (Nr == 70) client.Inventory.Add(720836, 0, 1);
                                                                if (Nr == 71) client.Inventory.Add(723725, 0, 1);
                                                                if (Nr == 72) client.Inventory.Add(723725, 0, 2);
                                                                if (Nr == 73) client.Inventory.Add(723725, 0, 1);
                                                                if (Nr == 74) client.Inventory.Add(723725, 0, 3);
                                                                if (Nr == 75) client.Inventory.Add(723725, 0, 1);
                                                                if (Nr == 76) client.Inventory.Add(723725, 0, 2);
                                                                if (Nr == 77) client.Inventory.Add(723725, 0, 1);
                                                                if (Nr == 78) client.Inventory.Add(723725, 0, 2);
                                                                if (Nr == 79) client.Inventory.Add(723725, 0, 1);
                                                                if (Nr == 80) client.Inventory.Add(723725, 0, 5);
                                                                if (Nr == 81) client.Inventory.Add(723725, 0, 4);
                                                                if (Nr == 82) client.Inventory.Add(723725, 0, 6);
                                                                if (Nr == 83) client.Inventory.Add(723722, 0, 1);
                                                                if (Nr == 84) client.Inventory.Add(723722, 0, 1);
                                                                if (Nr == 85) client.Inventory.Add(723722, 0, 1);
                                                                if (Nr == 86) client.Inventory.Add(723722, 0, 1);
                                                                if (Nr == 87) client.Inventory.Add(723722, 0, 1);
                                                                if (Nr == 88) client.Inventory.Add(723722, 0, 1);
                                                                if (Nr == 89) client.Inventory.Add(723722, 0, 1);
                                                                if (Nr == 90) client.Inventory.Add(723722, 0, 1);
                                                                if (Nr == 91) client.Inventory.Add(723722, 0, 1);
                                                                if (Nr == 92) client.Inventory.Add(723722, 0, 1);
                                                                if (Nr == 93) client.Inventory.Add(720128, 0, 1);
                                                                if (Nr == 94) client.Inventory.Add(720128, 0, 1);
                                                                if (Nr == 95) client.Inventory.Add(720128, 0, 1);
                                                                if (Nr == 96) client.Inventory.Add(720128, 0, 1);
                                                                if (Nr == 97) client.Inventory.Add(720128, 0, 1);
                                                                if (Nr == 98) client.Inventory.Add(720128, 0, 1);
                                                                if (Nr == 99) client.Inventory.Add(720128, 0, 1);
                                                                if (Nr == 100) client.Inventory.Add(720128, 0, 1);
                                                                
                                                                PhoenixProject.Network.PacketHandler.WorldMessage("Congratulations! " + client.Entity.Name + "! Finished Star Moon Quest And Clime Prize !");
                                                            }
                                                            else
                                                            {
                                                                dialog.Text("Sorry . I need  ( Note`Do` , Note`Re` , Note`Mi` , Note`Fa` , Note`So` ) .   ");
                                                                dialog.Option("Ahh sorry.", 255);
                                                            }
                                    break;
                                }
                        }
                        break;
                    }

                #endregion Arena 300 cps


                #endregion

                #region Tinter
                case 10064: //Tinter
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Select the item.");
                                    dialog.Option("Headgear.", 1);
                                    dialog.Option("Armor.", 3);
                                    dialog.Option("Shield.", 5);
                                    dialog.Option("I'm standing by.", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                            case 3:
                            case 5:
                                {
                                    client.TinterItemSelect = npcRequest.OptionID;
                                    dialog.Text("Select the new color.");
                                    dialog.Option("Orange.", 13);
                                    dialog.Option("Light Blue.", 14);
                                    dialog.Option("Red.", 15);
                                    dialog.Option("Blue.", 16);
                                    dialog.Option("Yellow.", 17);
                                    dialog.Option("Purple.", 18);
                                    dialog.Option("White.", 19);
                                    dialog.Option("I'm standing by.", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 13:
                            case 14:
                            case 15:
                            case 16:
                            case 17:
                            case 18:
                            case 19:
                                {
                                    if (client.TinterItemSelect == 0)
                                        return;
                                    IConquerItem item = client.Equipment.TryGetItem(client.TinterItemSelect);
                                    if (item == null || item.ID == 0)
                                    {
                                        dialog.Text("You don't have a item like this one equiped.");
                                        dialog.Send();
                                        break;
                                    }
                                    item.Color = (PhoenixProject.Game.Enums.Color)(npcRequest.OptionID % 10);
                                    PhoenixProject.Database.ConquerItemTable.UpdateColor(item);
                                    client.TinterItemSelect = 0;
                                    item.Mode = PhoenixProject.Game.Enums.ItemMode.Update;
                                    item.Send(client);
                                    item.Mode = PhoenixProject.Game.Enums.ItemMode.Default;
                                    break;
                                }
                        }
                        break;
                    }
                #endregion

                #region Lottery

                #region JewlarLau
                case 3953:
                case 2065:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Hello i can help you to compose your gems choose what you want.");
                                    dialog.Option("Compose Gems", 1);
                                    dialog.Option("Compose RTG with 7 Ref Gems.", 2);
                                    dialog.Option("Just PassingBy!", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 2:
                                {
                                    client.Send(new Data(true) { UID = client.Entity.UID, ID = Data.OpenWindow, dwParam = Data.WindowCommands.TortoiseGemComposing, wParam1 = client.Entity.X, wParam2 = client.Entity.Y });
                                    break;
                                }
                            case 1:
                                client.Send(new Data(true) { UID = client.Entity.UID, ID = Data.OpenWindow, dwParam = Data.WindowCommands.GemComposing, wParam1 = client.Entity.X, wParam2 = client.Entity.Y });
                                break;

                        }
                        break;
                    }
                #endregion

                #region LadyLuck
                case 924:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {

                                    dialog.Text("You may come back later, if you still want to try your luck. It will be free next time you want. but remember you need A 3 Small LotteryTickets!");
                                    dialog.Option("Yes please, let me out.", 1);
                                    dialog.Option("No thank you.", 255);
                                    dialog.Send();
                                    break;

                                }
                            case 1:
                                {
                                    client.Entity.Teleport(1036, 219, 189);
                                    break;
                                }
                        }
                        break;
                    }
                #endregion

                #endregion

                #region Labirinth
                case 1153:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Hello there. Just let me know if you want to move to the second floor of the labirinth with a SkyToken or go to TwinCity for free.");
                                    dialog.Option("Second floor.", 1);
                                    dialog.Option("TwinCity.", 2);
                                    dialog.Option("Nothing.", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    if (client.Inventory.Contains(721537, 1))
                                    {
                                        client.Inventory.Remove(721537, 1);
                                        client.Entity.Teleport(1352, 027, 227);
                                    }
                                    else
                                    {
                                        dialog.Text("You don't meet the requierments.");
                                        dialog.Option("Ahh sorry.", 255);
                                    }
                                    break;
                                }
                            case 2:
                                {
                                    client.Entity.Teleport(1002, 428, 379);
                                    break;
                                }
                        }
                        break;
                    }
                case 1154:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Hello there. Just let me know if you want to move to the third floor of the labirinth with a EarthToken or go to TwinCity for free.");
                                    dialog.Option("Third floor.", 1);
                                    dialog.Option("TwinCity.", 2);
                                    dialog.Option("Nothing.", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    if (client.Inventory.Contains(721538, 1))
                                    {
                                        client.Inventory.Remove(721538, 1);
                                        client.Entity.Teleport(1353, 025, 268);
                                    }
                                    else
                                    {
                                        dialog.Text("You don't meet the requierments.");
                                        dialog.Option("Ahh sorry.", 255);
                                    }
                                    break;
                                }
                            case 2:
                                {
                                    client.Entity.Teleport(1002, 428, 379);
                                    break;
                                }
                        }
                        break;
                    }
                case 1155:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Hello there. Just let me know if you want to move to the fourth floor of the labirinth with a SoulToken or go to TwinCity for free.");
                                    dialog.Option("Fourth floor.", 1);
                                    dialog.Option("TwinCity.", 2);
                                    dialog.Option("Nothing.", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    if (client.Inventory.Contains(721539, 1))
                                    {
                                        client.Inventory.Remove(721539, 1);
                                        client.Entity.Teleport(1354, 005, 290);
                                    }
                                    else
                                    {
                                        dialog.Text("You don't meet the requierments.");
                                        dialog.Option("Ahh sorry.", 255);
                                    }
                                    break;
                                }
                            case 2:
                                {
                                    client.Entity.Teleport(1002, 428, 379);
                                    break;
                                }
                        }
                        break;
                    }
                case 1156:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Hello there. Just let me know if you want to go to TwinCity.");
                                    dialog.Option("TwinCity.", 1);
                                    dialog.Option("Nothing.", 255);
                                    break;
                                }
                            case 1:
                                {
                                    client.Entity.Teleport(1002, 428, 379);
                                    break;
                                }
                        }
                        break;
                    }
                #endregion

                #region Birth Villiage

                #region RecruitMaster
                case 1060:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("You are about to enter the wonderful world of Phoenix Conquer!");
                                    dialog.Text("\n\nYou will have much to learn, to survive here. As the saying goes, if you know yourself and your enemy, you will never lose a battle!");
                                    dialog.Option("Got it!", 1);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    switch (client.Entity.Class)
                                    {
                                        case 50:
                                            {
                                                dialog.Text("What the..! Oh.. It's just you, Ninja!");
                                                dialog.Text("\n\nSuch a mysterious figures, cloaked in shadow.. Ninjas have the most devastating attacks");
                                                dialog.Text(", but the lowest defence and health of all classes. Their speed and surprising skills are what make");
                                                dialog.Text("are what make them such a dangerous force here!\n\nAlways be aware of your surroundings!\n");
                                                dialog.Option("I am like a shadow!", 2);
                                                dialog.Send();
                                                break;
                                            }
                                        case 100:
                                            {
                                                dialog.Text("Well hello there, young Taoist! Right now, you don't have any specialty in your magic skills.");
                                                dialog.Text("Once you train enough, you can be promoted to a Fire or Water Taoist, and then continure on your path to glory!");
                                                dialog.Option("Fire and Water Taoist?", 11);
                                                dialog.Send();
                                                break;
                                            }


                                    }
                                    break;
                                }
                            case 11:
                                {
                                    dialog.Text("Fire Taoists are able to smite their enemies at long range, as their spells cause much more damage than other Taoists.");
                                    dialog.Text("While the Water Taoists are adept at healing and reviving fallen comrades. Both paths offer their own choices.");
                                    dialog.Text("It's up to you to decide where your heart lies.");
                                    dialog.Option("I see.", 2);
                                    dialog.Send();
                                    break;
                                }
                            case 2:
                                {
                                    dialog.Text("In Conquer Online, Path Finding is efficient in helping you locate shops and places of intrest. ");
                                    dialog.Text("You can check the current map's list by clicking the \"Path Finding\" button to the right. ");
                                    dialog.Text("Just highlight where you would like to go and click, and you're on your way!");
                                    dialog.Option("Anything else?", 3);
                                    dialog.Send();
                                    break;
                                }
                            case 3:
                                {
                                    dialog.Text("If you click \"Status\" in the lower right corner of the screen you will be able to check your character level, status, and attributes.");
                                    dialog.Option("I see.", 4);
                                    dialog.Send();
                                    break;
                                }
                            case 4:
                                {
                                    dialog.Text("You can also check your equipment, weapon proficiency, skills, and skill levels by click the tabs on the left side of the Status window.");
                                    if (client.Entity.Class == 100)
                                    { dialog.Option("Got it!", 55); }
                                    else { dialog.Option("Got it!", 5); }
                                    dialog.Send();
                                    break;
                                }
                            case 5:
                                {
                                    dialog.Text("Now you should go speak with Old General Yang.\n I'm sure he will be able to teach you some more useful tips!");
                                    dialog.Option("Okay, thanks!", 6);
                                    dialog.Send();
                                    break;
                                }
                            case 55:
                                {
                                    dialog.Text("Now you should go speak with Taoist Star.\n I'm sure he will be able to teach you some more useful tips!");
                                    dialog.Option("Okay, thanks!", 66);
                                    dialog.Send();
                                    break;
                                }
                            case 6:
                                {
                                    new Message("You should follow the Recruit Master's advice!\nGo find Old General Yang.", System.Drawing.Color.Green, Message.PopUP);
                                    break;
                                }
                            case 66:
                                {
                                    new Message("You should follow the Recruit Master's advice!\nGo find Taoist Star.", System.Drawing.Color.Green, Message.PopUP);
                                    break;
                                }
                        }
                        break;
                    }
                #endregion

                #region Pharmacist
                case 10008:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Hi! I sell all sorts of potions and town scrolls in all the citys.\nI also sell fireworks and skill books in the market.");
                                    dialog.Option("What potions?", 1);
                                    dialog.Option("Consult others.", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    dialog.Text("Healing and mana potions.\nHealing potions make you healthy.\nMana potions will enable you to cast spells, If you have any.\n");
                                    dialog.Text("\nThat is all. If you have not talked to others NPCs...\nYou had better have a chat with them so that you can learn more.\n");
                                    dialog.Option("I see. Thanks.", 255);
                                    dialog.Send();
                                    break;
                                }
                        }
                        break;
                    }
                #endregion

                #region WiseGuy
                case 10004:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Well, if you want to talk to any NPCs, just click them. Easy, huh?");
                                    dialog.Option("About my class...", 1);
                                    dialog.Option("Ah, Forget about it.", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    switch (client.Entity.Class)
                                    {
                                        case 50:
                                            {
                                                dialog.Text("The Ninja is an expert in various oriental weapons, boasting swift and powerful melee attack skills. I know somebody. In Twin City there are merchants I know. you go talk to them, they'll sort you out. Got it?");
                                                break;
                                            }
                                        case 10:
                                            {
                                                dialog.Text("The Trojan is an expert in various oriental weapons, dual wield and a powerful melee attack skills. I know somebody. In Twin City there are merchants I know. you go talk to them, they'll sort you out. Got it?");
                                                break;
                                            }
                                        case 40:
                                            {
                                                dialog.Text("The Archer is an expert in Ranged oriental weapons, Ppowerful Ranged attack skills. I know somebody. In Twin City there are merchants I know. you go talk to them, they'll sort you out. Got it?");
                                                break;
                                            }
                                        case 20:
                                            {
                                                dialog.Text("The Warrior is an expert in various oriental weapons, two handed weapons, Sheald and a powerful melee attack skills. I know somebody. In Twin City there are merchants I know. you go talk to them, they'll sort you out. Got it?");
                                                break;
                                            }
                                        case 100:
                                            {
                                                dialog.Text("The Taoist is an expert in various Magic Spells, powerful melee Spells and skills. I know somebody. In Twin City there are merchants I know. you go talk to them, they'll sort you out. Got it?");
                                                break;
                                            }
                                    }
                                    dialog.Option("I see, thanks.", 0);
                                    dialog.Send();
                                    break;
                                }
                        }
                        break;
                    }
                #endregion

                #region VilliageIdiot
                case 10009:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Hello, new blood! Welcome! It is good that you selected This class!");
                                    dialog.Option("Thank you.", 1);
                                    dialog.Option("Not a chance. Leave me be!", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    switch (client.Entity.Class)
                                    {
                                        case 10:
                                            {
                                                dialog.Text("Some handy weapons are essential for Trojans. But you'd never do that, Cause your're my friend now, right?");
                                                break;
                                            }
                                        case 40:
                                            {
                                                dialog.Text("Some handy weapons are essential for Archers. But you'd never do that, Cause your're my friend now, right?");
                                                break;
                                            }
                                        case 20:
                                            {
                                                dialog.Text("Some handy weapons are essential for Warriors. But you'd never do that, Cause your're my friend now, right?");
                                                break;
                                            }
                                        case 100:
                                            {
                                                dialog.Text("Some handy weapons are essential for Taoists. But you'd never do that, Cause your're my friend now, right?");
                                                break;
                                            }
                                        case 50:
                                            {
                                                dialog.Text("Some handy weapons are essential for Ninjas. But you'd never do that, Cause your're my friend now, right?");
                                                break;
                                            }
                                    }
                                    dialog.Option("Sure.. I'll be back in my next life.", 255);
                                    dialog.Send();
                                    break;
                                }
                        }
                        break;
                    }
                #endregion

                #region Armorer
                case 10007:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Armorers swear only to provide the very best in defense.\nWhether it's robes or helmets, we have it all.");
                                    dialog.Option("I see. Where can I find an armorer?", 1);
                                    dialog.Option("Consult others.", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {

                                    dialog.Text("Every city or major settlement has one.\nBut our armors very best from place to place.\nSome armorers have better helms, while others specialize in mail or helms.\n");
                                    dialog.Text("Just to be sure to buy armor without red text in the description.\nYou won't be able to wear those!\n");
                                    dialog.Option("I see. Thanks.", 255);
                                    dialog.Send();
                                    break;

                                }
                        }
                        break;
                    }
                #endregion

                #region Warehouseman
                case 10006:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Welcome! I run a warehouse in every city.\nYou can store your money and items in my warehouses, and retrieve them for free.");
                                    dialog.Option("Cool. How do I use them?", 1);
                                    dialog.Option("Consult others.", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {

                                    dialog.Text("First, you find my warehouse men in your city..\nClick on him to see your storage box open up.\nTo deposit money, enter the amount in the bank field before clicking Deposit.\n");
                                    dialog.Text("Withdrawing money is the same.\n \nIf you want to put items in your storage space, just drag and drop.\nTaking them out only requires one click.\nAlso, your money is totalled from all warehouses.\n");
                                    dialog.Option("I see. Thanks.", 255);
                                    dialog.Send();
                                    break;
                                }
                        }
                        break;
                    }
                #endregion

                #region Blacksmith
                case 10005:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("We blacksmiths can be found from North to South, East to West.\nWe promise a fine selection of weapons for you to purchase!");
                                    dialog.Option("Tell me more.", 1);
                                    dialog.Option("Consult others.", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {

                                    dialog.Text("Let me tell you how to choose a good weapon.\nHover your mouse pointer over the weapon, check its stats and find a weapon with all white writing.\nIf there's red text, you won't be able to use it.");
                                    dialog.Text("After you buy it, you open your backpack, find the right item and right-click it to equip.\nIt's as easy as that!\n \nOh, and to sell an item, you just drag and drop to my shop!\n");
                                    dialog.Option("What about repairs?", 2);
                                    dialog.Option("Consult others.", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 2:
                                {

                                    dialog.Text("First, unequip the item by double-clicking it in your status window.\nThen find me, click my repair button and click the item.");
                                    dialog.Option("Any other tips?", 3);
                                    dialog.Option("Consult others.", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 3:
                                {

                                    dialog.Text("Yeah, some items are high quality: Normal, Refined, Unique, Elite, Super.\nThat's specialist stuff, only found in the market.\nThat is all. If you have not talked to other NPCs...\nYou had better have a chat with them so that you can learn more.");
                                    dialog.Option("Thanks.", 255);
                                    dialog.Send();
                                    break;
                                }
                        }
                        break;
                    }
                #endregion

                #region GateMan
                case 10010:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Good day to you" + client.Entity.Name + "! I'm the gateman of the Birth Village.\nIs there any way I can help you?");
                                    dialog.Option("I'm ready to start the adventure.", 1);
                                    dialog.Option("I'm beyond help...", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    dialog.Text("Welcome to the world of Conquer Online!\nThe road to becoming a legend is both long and bumpy. You should work very hard to become great! Here is a quest for you. Please take this message to Kungfu Boy in Twin City. You will get a reward for your help.");
                                    dialog.Option("As you wish,,", 2);
                                    dialog.Option("I need more advice.", 3);
                                    dialog.Option("I'll stay here for a while.", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 2:
                                {
                                    client.Entity.Teleport(1004, 52, 55);
                                    client.Inventory.Add(723753, 0, 1);//BegginerPackL1
                                    client.Inventory.Add(720356, 0, 1);//MerryPack 225584
                                    Data data = new Data(true);
                                    data.ID = Data.OpenCustom;
                                    data.UID = client.Entity.UID;
                                    data.TimeStamp = Time32.Now;
                                    data.dwParam = 3382;
                                    data.wParam1 = client.Entity.X;
                                    data.wParam2 = client.Entity.Y;
                                    client.Send(data);
                                    client.Send(new Message("You've recived a BegginerPack and Letter from the GateMan Goodluck in Our Server.", System.Drawing.Color.White, Message.Center));
                                    PhoenixProject.ServerBase.Kernel.SendWorldMessage(new Message("Lets Welcome The New Player: [ " + client.Entity.Name + " ] , Has Joined Our Empire.", System.Drawing.Color.White, Message.WhiteVibrate), PhoenixProject.ServerBase.Kernel.GamePool.Values);
                                    Network.GamePackets.NpcReply npc = new Network.GamePackets.NpcReply(6, "you have got MerryPack Give it to BattleGhost to claim Bound Gears to Start " + PhoenixProject.Database.rates.servername + "?");
                                    npc.OptionID = 255;
                                    client.Send(npc.ToArray());
                                    break;


                                }
                            case 3:
                                {
                                    dialog.Text("You will soon be in Twin City. I advise you not to stray too far from the city gates. Don't leave the Wind Plains until you are truly ready. You wouldn't even cross the river until you've visited");
                                    dialog.Text("the job center for your first promotion. Open your backpack and drag some potion down into the quick slot bar. You will be able to use F1-F10 keys to use things you place in the quick slots. They should help you stay alive.");
                                    dialog.Option("Thanks.", 255);
                                    dialog.Send();
                                    break;
                                }
                        }
                        break;
                    }

                #endregion

                #region OldGeneralYang
                case 425:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Oh, I so long for the glory of the field, but I'm too old to go back out and deal with these youngsters...\n");
                                    dialog.Text("I see a spark in your eye that reminds me of my younger days... What can I do for you young one?");
                                    dialog.Option("I'm ready for Initiation.", 1);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    dialog.Text("It would be wise for you to learn alittle more about Conquer before you decide to head out on your own.");
                                    dialog.Option("Fill me in.", 2);
                                    dialog.Send();
                                    break;
                                }
                            case 2:
                                {
                                    dialog.Text("There are two kinds of skills in Conquer.\nOne is the active skills, which are activated through the use of your magic or stamina.");
                                    dialog.Option("And the other?", 3);
                                    dialog.Send();
                                    break;
                                }
                            case 3:
                                {
                                    dialog.Text("The other is known as a passive skill.\nPassive skills will automaticly activate if the situation warrants the passive skills use.");
                                    dialog.Option("Got it!", 4);
                                    dialog.Send();
                                    break;
                                }
                            case 4:
                                {
                                    dialog.Text("Well that is all I can tell you for today. It's time to eat!\nYou can talk to the Village Gateman when you are ready to get started.");
                                    dialog.Option("Okay", 255);
                                    dialog.Send();
                                    break;
                                }
                        }
                        break;
                    }
                #endregion

                #endregion

                #region OUT
                case 9988:
                case 9989:
                case 9990:
                case 9991:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("In exchange of a fee of 500gold, I will teleport you back to the guild war map. Don't bother me if you are poor.");
                                    dialog.Option("Teleport me.", 1);
                                    dialog.Option("I'm too poor.", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    if (client.Entity.Money >= 500)
                                    {
                                        client.Entity.Money -= 500;
                                        client.Entity.Teleport(1038, 348, 339);
                                    }
                                    break;
                                }
                        }
                        break;
                    }
                #endregion

                #region Warehousemen
                case 8:
                case 10012:
                case 10028:
                case 10011:
                case 10027:
                case 4101:
                case 44:
                case 30657:
                case 30658:
                case 30659:
                case 1765:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    INpc npc = null;
                                    if (client.Map.Npcs.TryGetValue(client.ActiveNpc, out npc))
                                    {
                                        if (client.WarehousePW == "" || client.WarehousePW == null)
                                            client.Send(new Message("To protect your items that are stored in warehouse, you should set an password at WHSGuardian.", System.Drawing.Color.Maroon, Message.TopLeft));
                                        else
                                        {
                                            if (!client.WarehouseOpen)
                                            {
                                                dialog.Text("Please tell me the password of your warehouse so I can open it. It's like a key, if you don't have it I can't do anything.");
                                                dialog.Input("Here:", 1, 8);
                                                dialog.Option("Nevermind.", 255);
                                                dialog.Send();
                                                return;
                                            }
                                        }
                                        Data data = new Data(true);
                                        data.ID = Data.OpenWindow;
                                        data.UID = client.Entity.UID;
                                        data.TimeStamp = Time32.Now;
                                        data.dwParam = Data.WindowCommands.Warehouse;
                                        data.wParam1 = npc.X;
                                        data.wParam2 = npc.Y;
                                        client.Send(data);
                                    }
                                    break;
                                }
                            case 1:
                                {
                                    if (client.WarehouseOpenTries < 3)
                                    {
                                        client.WarehouseOpenTries++;
                                        if (npcRequest.Input == client.WarehousePW)
                                        {
                                            INpc npc = null;
                                            if (client.Map.Npcs.TryGetValue(client.ActiveNpc, out npc))
                                            {
                                                client.WarehouseOpen = true;
                                                Data data = new Data(true);
                                                data.ID = Data.OpenWindow;
                                                data.UID = client.Entity.UID;
                                                data.TimeStamp = Time32.Now;
                                                data.dwParam = 4;
                                                data.wParam1 = npc.X;
                                                data.wParam2 = npc.Y;
                                                client.Send(data);
                                            }
                                        }
                                        else
                                        {
                                            dialog.Text("Wrong password. Tries left: " + client.WarehouseOpenTries + ". Try again?");
                                            dialog.Input("Here:", 1, 8);
                                            dialog.Option("Alright.", 255);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("You can try no more to open your warehouse. Come back later.");
                                        dialog.Option("Nevermind.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                        }
                        break;
                    }
                #endregion

                #region Boxers
                case 180:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("If you want to leave just tell me when you are ready. It's free.\nYou will be teleported to the city you were in before coming here.");
                                    dialog.Option("I'm ready.", 1);
                                    dialog.Option("Wait a minute.", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    ulong PrevMap = client.Entity.PreviousMapID;
                                    switch (PrevMap)
                                    {
                                        default:
                                            {
                                                client.Entity.Teleport(1002, 429, 378);
                                                break;
                                            }
                                        case 1000:
                                            {
                                                client.Entity.Teleport(1000, 500, 650);
                                                break;
                                            }
                                        case 1020:
                                            {
                                                client.Entity.Teleport(1020, 565, 562);
                                                break;
                                            }
                                        case 1011:
                                            {
                                                client.Entity.Teleport(1011, 188, 264);
                                                break;
                                            }
                                        case 1015:
                                            {
                                                client.Entity.Teleport(1015, 717, 571);
                                                break;
                                            }
                                    }
                                    break;
                                }
                        }
                        break;
                    }
                case 181:
                case 182:
                case 183:
                case 184:
                case 185:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Hello " + client.Entity.Name + ", if your level is higher than 19, I can send you to a training ground in exchange of 1000 silvers. Be aware of the fact that you can't attack dumes with level higher than yours.");
                                    dialog.Option("Alright, let me in.", 1);
                                    dialog.Option("Nevermind", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    if (client.Entity.Level >= 20)
                                    {
                                        if (client.Entity.Money >= 1000)
                                        {
                                            client.Entity.Money -= 1000;
                                            client.Entity.Teleport(1039, 216, 214);
                                        }
                                        else
                                        {
                                            dialog.Text("You do not have 1000 silvers.");
                                            dialog.Option("Aww!", 255);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("Your level is not high enough.");
                                        dialog.Option("Aww!", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                        }
                        break;
                    }
                #endregion

                #region Guild War

                #region Jail warden
                case 140:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    if (PhoenixProject.Game.ConquerStructures.Society.GuildWar.IsWar)
                                    {
                                        if (DateTime.Now.Minute >= 00 && DateTime.Now.Minute <= 05 || DateTime.Now.Minute >= 30 && DateTime.Now.Minute <= 35)
                                        {
                                            dialog.Text("My friend, you may leave if you want.");
                                            dialog.Option("Yes please.", 1);
                                            dialog.Option("No need...", 255);
                                            dialog.Send();

                                        }
                                        else
                                        {
                                            dialog.Text("You lost your chance. Now wait for the next pardon btw xx:00 to xx:05 and xx:30 to xx:35!");
                                            dialog.Option("No!!!", 255);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("My friend, you may leave if you want.");
                                        dialog.Option("Yes please.", 1);
                                        dialog.Option("No need...", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 1:
                                {
                                    if (PhoenixProject.Game.ConquerStructures.Society.GuildWar.IsWar)
                                    {
                                        if (DateTime.Now.Minute >= 00 && DateTime.Now.Minute <= 05 || DateTime.Now.Minute >= 30 && DateTime.Now.Minute <= 35)
                                        {
                                            client.Entity.Teleport(1002, 430, 380);
                                        }
                                        else
                                        {
                                            dialog.Text("You lost your chance. Now wait for the next pardon!");
                                            dialog.Option("No!!!", 255);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        client.Entity.Teleport(1002, 430, 380);
                                    }
                                    break;
                                }
                        }
                        break;
                    }
                #endregion

                #region Light up runes
                case 4452:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Hello friend, as you might know, while guild war, you can light up some runes and after guild war is over, you can come to me and I will give you experience in exchange of your rune.");
                                    dialog.Text("Once guild war starts, come to me and ask for a rune, and you will receive it. If you lose it, you can come back and reclaim it, but you will start from level 1 once again.");
                                    dialog.Option("Give me a rune.", 1);
                                    dialog.Option("Claim experience.", 2);
                                    dialog.Option("Nothing.", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    if (GuildWar.IsWar)
                                    {
                                        for (int c = 0; c <= 10; c++)
                                        {
                                            if (client.Inventory.Contains((uint)(729960 + c), 1))
                                            {
                                                dialog.Text("You already have a rune.");
                                                dialog.Option("Thank you.", 255);
                                                dialog.Send();
                                                return;
                                            }
                                        }
                                        if (client.Inventory.Add(729960, 0, 1))
                                        {
                                            dialog.Text("Go, and light up this rune.");
                                            dialog.Option("Thank you.", 255);
                                            dialog.Send();
                                        }
                                        else
                                        {
                                            dialog.Text("There is not enough room in your inventory.");
                                            dialog.Option("Ah, hold on.", 255);
                                            dialog.Send();
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("I cannot give you a rune now.");
                                        dialog.Option("Ahh.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 2:
                                {
                                    if (!GuildWar.IsWar)
                                    {
                                        for (int c = 0; c <= 10; c++)
                                        {
                                            if (client.Inventory.Contains((uint)(729960 + c), 1))
                                            {
                                                int expballs = c;
                                                if (729960 + c == 729970)
                                                    expballs += 2;

                                                for (int ex = 0; ex < expballs; ex++)
                                                    client.IncreaseExperience(client.ExpBall, false);
                                                client.Inventory.Remove((uint)(729960 + c), 1);
                                                return;
                                            }
                                        }
                                        dialog.Text("You cannot claim experience if you don't have a rune.");
                                        dialog.Option("Ahh.", 255);
                                        dialog.Send();
                                    }
                                    else
                                    {

                                    }
                                    {
                                        dialog.Text("You cannot claim experience while guild war.");
                                        dialog.Option("Ahh.", 255);
                                        dialog.Send();
                                    }
                                    break;
                                }
                        }
                        break;
                    }
                case 4453:
                case 4454:
                case 4455:
                case 4456:
                case 4457:
                case 4458:
                case 4459:
                case 4460:
                case 4461:
                    {
                        dialog.Avatar(0);
                        uint takeFlame = 725507 + client.ActiveNpc;
                        uint addFlame = 725507 + client.ActiveNpc + 1;
                        if (GuildWar.IsWar)
                        {
                            if (client.Inventory.Contains(takeFlame, 1))
                            {
                                client.Inventory.Remove(takeFlame, 1);
                                client.Inventory.Add(addFlame, 0, 1);
                                dialog.Text("Well done! Next rune is number " + (client.ActiveNpc - 4451) + ".");
                                dialog.Send();
                            }
                            else
                            {
                                dialog.Text("You cannot flame up this stone without the proper rune.");
                                dialog.Send();
                            }
                        }
                        else
                        {
                            dialog.Text("You cannot flame up a rune if guild war is not on.");
                            dialog.Send();
                        }
                        break;
                    }
                case 4462:
                    {
                        dialog.Avatar(0);
                        uint takeFlame = 725507 + client.ActiveNpc;
                        uint addFlame = 725507 + client.ActiveNpc + 1;
                        if (GuildWar.IsWar)
                        {
                            if (GuildWar.Flame10th)
                            {
                                if (client.Inventory.Contains(takeFlame, 1))
                                {
                                    client.Inventory.Remove(takeFlame, 1);
                                    client.Inventory.Add(addFlame, 0, 1);
                                    dialog.Text("Well done! Nothing left to light up. Congratulations!");
                                    dialog.Send();
                                }
                                else
                                {
                                    dialog.Text("You cannot flame up this stone without the proper rune.");
                                    dialog.Send();
                                }
                            }
                            else
                            {
                                dialog.Text("It's not the right time to flame up this rune.");
                                dialog.Send();
                            }
                        }
                    }
                    break;
                #endregion

                #endregion

                #region OfflineTG
                case 3836:
                    {
                        OfflineTGStats sts = new OfflineTGStats(true);
                        var T1 = new TimeSpan(DateTime.Now.Ticks);
                        var T2 = new TimeSpan(client.OfflineTGEnterTime.Ticks);
                        ushort minutes = (ushort)(T1.TotalMinutes - T2.TotalMinutes);
                        minutes = (ushort)Math.Min((ushort)900, minutes);
                        sts.TotalTrainingMinutesLeft = (ushort)(900 - minutes);
                        sts.TrainedMinutes = minutes;
                        ulong exp = client.Entity.Experience;
                        byte level = client.Entity.Level;
                        double expballGain = (double)300 * (double)minutes / (double)900;
                        while (expballGain >= 100)
                        {
                            expballGain -= 100;
                            exp += client.ExpBall;
                        }
                        if (expballGain != 0)
                            exp += (uint)(client.ExpBall * (expballGain / 100));

                        while (exp >= PhoenixProject.Database.DataHolder.LevelExperience(level))
                        {
                            exp -= PhoenixProject.Database.DataHolder.LevelExperience(level);
                            level++;
                        }
                        double percent = (double)exp * (double)100 / (double)PhoenixProject.Database.DataHolder.LevelExperience(level);

                        sts.Character_NewExp = (ulong)(percent * 100000);
                        sts.Character_AcquiredLevel = level;
                        sts.Send(client);
                        break;
                    }
                #endregion

                #region 77771

                case 66681:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Hello! I'm a FireworksMaster, I need you to some things so that I can help you ");
                                    dialog.Text("You can get some of the fire work captured monsters and replaced some items, so that I can to replace hers Cps or Pts!");
                                    dialog.Option("Change SacredFirework ( 50k cps ).", 1);
                                    dialog.Option("Change RoyalFirework ( 60k cps ).", 2);
                                    dialog.Option("Change MonarchFirework (70k cps).", 3);
                                    dialog.Option("Change DragonFirework (80k cps )", 4);
                                    dialog.Option("Change King`sFireworks (10 Pts).", 5);
                                    dialog.Option("Just passing by.", 255);
                                    dialog.Avatar(85);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    if (client.Inventory.Contains(722158, 1))
                                    {
                                        client.Inventory.Remove(722158, 1);
                                        client.Entity.ConquerPoints += 50000;
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry ,You don't have enough SacredFirework !");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(85);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 2:
                                {
                                    if (client.Inventory.Contains(722134, 1))
                                    {
                                        client.Inventory.Remove(722134, 1);
                                        client.Entity.ConquerPoints += 60000;
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry ,You don't have enough RoyalFirework !");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(85);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 3:
                                {
                                    if (client.Inventory.Contains(722132, 1))
                                    {
                                        client.Inventory.Remove(722132, 1);
                                        client.Entity.ConquerPoints += 70000;
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry ,You don't have enough MonarchFirework !");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(85);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 4:
                                {
                                    if (client.Inventory.Contains(722133, 1))
                                    {
                                        client.Inventory.Remove(722133, 1);
                                        client.Entity.ConquerPoints += 80000;
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry ,You don't have enough DragonFirework !");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(85);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 5:
                                {
                                    if (client.Inventory.Contains(721962, 1))
                                    {
                                        client.Inventory.Remove(721962, 1);
                                        client.Entity.RacePoints += 10;
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry ,You don't have enough King`sFireworks !");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(85);
                                        dialog.Send();
                                    }
                                    break;
                                }
                        }
                        break;
                    }

                #endregion Prize Seller

                #region 77772

                case 66668:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Hello! I'm a FireworksNo.1 ");
                                    dialog.Text("I can Change LoveFireworks To 50 k cps or teleport to monster to get LoveFireworks (1.2.3.4.5) !");
                                    dialog.Option("Change LoveFireworks1 ( 50k cps ).", 1);
                                    dialog.Option("Change LoveFireworks2 ( 60k cps ).", 2);
                                    dialog.Option("Change LoveFireworks3 (70k cps).", 3);
                                    dialog.Option("Change LoveFireworks4 (80k cps )", 4);
                                    dialog.Option("Change LoveFireworks5 (1 Pts).", 5);
                                    dialog.Option("Teleport To Monster .", 6);
                                    dialog.Option("Just passing by.", 255);
                                    dialog.Avatar(85);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    if (client.Inventory.Contains(722316, 1))
                                    {
                                        client.Inventory.Remove(722316, 1);
                                        Random R = new Random();
                                        int Nr = R.Next(1, 100);
                                        if (Nr == 1) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 2) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 3) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 4) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 5) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 6) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 7) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 8) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 9) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 10) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 11) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 12) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 13) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 14) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 15) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 16) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 17) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 18) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 19) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 20) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 21) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 22) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 23) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 24) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 25) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 26) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 27) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 28) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 29) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 30) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 31) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 32) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 33) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 34) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 35) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 36) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 37) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 38) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 39) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 40) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 41) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 42) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 43) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 44) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 45) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 46) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 47) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 48) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 49) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 50) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 51) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 52) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 53) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 54) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 55) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 56) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 57) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 58) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 59) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 60) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 61) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 62) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 63) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 64) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 65) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 66) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 67) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 68) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 69) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 70) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 71) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 72) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 73) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 74) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 75) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 76) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 77) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 78) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 79) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 80) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 81) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 82) client.Inventory.Add(730003, 0, 1);
                                        if (Nr == 83) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 84) client.Inventory.Add(730003, 0, 1);
                                        if (Nr == 85) client.Inventory.Add(730003, 0, 1);
                                        if (Nr == 86) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 87) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 88) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 89) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 90) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 91) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 92) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 93) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 94) client.Inventory.Add(722134, 0, 1);
                                        if (Nr == 95) client.Inventory.Add(722134, 0, 1);
                                        if (Nr == 96) client.Inventory.Add(722133, 0, 1);
                                        if (Nr == 97) client.Inventory.Add(722132, 0, 1);
                                        if (Nr == 98) client.Inventory.Add(722131, 0, 1);
                                        if (Nr == 99) client.Inventory.Add(722131, 0, 1);
                                        if (Nr == 100) client.Inventory.Add(721962, 0, 1);
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry ,You don't have enough LoveFireworks1 !");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(85);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 2:
                                {
                                    if (client.Inventory.Contains(722317, 1))
                                    {
                                        client.Inventory.Remove(722317, 1);
                                        Random R = new Random();
                                        int Nr = R.Next(1, 100);
                                        if (Nr == 1) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 2) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 3) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 4) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 5) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 6) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 7) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 8) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 9) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 10) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 11) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 12) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 13) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 14) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 15) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 16) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 17) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 18) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 19) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 20) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 21) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 22) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 23) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 24) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 25) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 26) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 27) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 28) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 29) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 30) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 31) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 32) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 33) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 34) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 35) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 36) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 37) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 38) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 39) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 40) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 41) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 42) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 43) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 44) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 45) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 46) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 47) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 48) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 49) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 50) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 51) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 52) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 53) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 54) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 55) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 56) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 57) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 58) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 59) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 60) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 61) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 62) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 63) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 64) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 65) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 66) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 67) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 68) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 69) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 70) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 71) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 72) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 73) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 74) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 75) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 76) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 77) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 78) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 79) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 80) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 81) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 82) client.Inventory.Add(730003, 0, 1);
                                        if (Nr == 83) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 84) client.Inventory.Add(730003, 0, 1);
                                        if (Nr == 85) client.Inventory.Add(730003, 0, 1);
                                        if (Nr == 86) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 87) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 88) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 89) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 90) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 91) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 92) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 93) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 94) client.Inventory.Add(722134, 0, 1);
                                        if (Nr == 95) client.Inventory.Add(722134, 0, 1);
                                        if (Nr == 96) client.Inventory.Add(722133, 0, 1);
                                        if (Nr == 97) client.Inventory.Add(722132, 0, 1);
                                        if (Nr == 98) client.Inventory.Add(722131, 0, 1);
                                        if (Nr == 99) client.Inventory.Add(722131, 0, 1);
                                        if (Nr == 100) client.Inventory.Add(721962, 0, 1);
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry ,You don't have enough LoveFireworks2 !");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(85);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 3:
                                {
                                    if (client.Inventory.Contains(722318, 1))
                                    {
                                        client.Inventory.Remove(722318, 1);
                                        Random R = new Random();
                                        int Nr = R.Next(1, 100);
                                        if (Nr == 1) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 2) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 3) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 4) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 5) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 6) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 7) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 8) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 9) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 10) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 11) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 12) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 13) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 14) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 15) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 16) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 17) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 18) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 19) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 20) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 21) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 22) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 23) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 24) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 25) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 26) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 27) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 28) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 29) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 30) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 31) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 32) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 33) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 34) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 35) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 36) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 37) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 38) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 39) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 40) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 41) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 42) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 43) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 44) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 45) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 46) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 47) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 48) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 49) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 50) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 51) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 52) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 53) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 54) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 55) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 56) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 57) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 58) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 59) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 60) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 61) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 62) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 63) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 64) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 65) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 66) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 67) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 68) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 69) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 70) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 71) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 72) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 73) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 74) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 75) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 76) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 77) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 78) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 79) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 80) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 81) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 82) client.Inventory.Add(730003, 0, 1);
                                        if (Nr == 83) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 84) client.Inventory.Add(730003, 0, 1);
                                        if (Nr == 85) client.Inventory.Add(730003, 0, 1);
                                        if (Nr == 86) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 87) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 88) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 89) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 90) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 91) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 92) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 93) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 94) client.Inventory.Add(722134, 0, 1);
                                        if (Nr == 95) client.Inventory.Add(722134, 0, 1);
                                        if (Nr == 96) client.Inventory.Add(722133, 0, 1);
                                        if (Nr == 97) client.Inventory.Add(722132, 0, 1);
                                        if (Nr == 98) client.Inventory.Add(722131, 0, 1);
                                        if (Nr == 99) client.Inventory.Add(722131, 0, 1);
                                        if (Nr == 100) client.Inventory.Add(721962, 0, 1);
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry ,You don't have enough LoveFireworks3 !");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(85);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 4:
                                {
                                    if (client.Inventory.Contains(722319, 1))
                                    {
                                        client.Inventory.Remove(722319, 1);
                                        Random R = new Random();
                                        int Nr = R.Next(1, 100);
                                        if (Nr == 1) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 2) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 3) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 4) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 5) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 6) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 7) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 8) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 9) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 10) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 11) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 12) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 13) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 14) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 15) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 16) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 17) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 18) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 19) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 20) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 21) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 22) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 23) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 24) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 25) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 26) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 27) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 28) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 29) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 30) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 31) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 32) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 33) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 34) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 35) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 36) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 37) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 38) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 39) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 40) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 41) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 42) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 43) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 44) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 45) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 46) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 47) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 48) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 49) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 50) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 51) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 52) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 53) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 54) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 55) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 56) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 57) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 58) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 59) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 60) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 61) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 62) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 63) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 64) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 65) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 66) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 67) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 68) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 69) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 70) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 71) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 72) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 73) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 74) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 75) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 76) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 77) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 78) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 79) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 80) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 81) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 82) client.Inventory.Add(730003, 0, 1);
                                        if (Nr == 83) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 84) client.Inventory.Add(730003, 0, 1);
                                        if (Nr == 85) client.Inventory.Add(730003, 0, 1);
                                        if (Nr == 86) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 87) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 88) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 89) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 90) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 91) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 92) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 93) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 94) client.Inventory.Add(722134, 0, 1);
                                        if (Nr == 95) client.Inventory.Add(722134, 0, 1);
                                        if (Nr == 96) client.Inventory.Add(722133, 0, 1);
                                        if (Nr == 97) client.Inventory.Add(722132, 0, 1);
                                        if (Nr == 98) client.Inventory.Add(722131, 0, 1);
                                        if (Nr == 99) client.Inventory.Add(722131, 0, 1);
                                        if (Nr == 100) client.Inventory.Add(721962, 0, 1);
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry ,You don't have enough LoveFireworks4 !");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(85);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 6:
                                {
                                    client.Entity.Teleport(5591, 207, 210);
                                    break;
                                }
                            case 5:
                                {
                                    if (client.Inventory.Contains(722320, 1))
                                    {
                                        client.Inventory.Remove(722320, 1);
                                        client.Entity.RacePoints += 1;
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry ,You don't have enough LoveFireworks5 !");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(85);
                                        dialog.Send();
                                    }
                                    break;
                                }
                        }
                        break;
                    }

                #endregion Prize Seller

                #region 77772

                case 66669:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Hello! I'm a FireworksNo.2 ");
                                    dialog.Text("I can Change LoveFireworks To 50 k cps or teleport to monster to get LoveFireworks (1.2.3.4.5) !");
                                    dialog.Option("Change LoveFireworks1 ( 50k cps ).", 1);
                                    dialog.Option("Change LoveFireworks2 ( 60k cps ).", 2);
                                    dialog.Option("Change LoveFireworks3 (70k cps).", 3);
                                    dialog.Option("Change LoveFireworks4 (80k cps )", 4);
                                    dialog.Option("Change LoveFireworks5 (1 Pts).", 5);
                                    dialog.Option("Teleport To Monster .", 6);
                                    dialog.Option("Just passing by.", 255);
                                    dialog.Avatar(85);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    if (client.Inventory.Contains(722316, 1))
                                    {
                                        client.Inventory.Remove(722316, 1);
                                        Random R = new Random();
                                        int Nr = R.Next(1, 100);
                                        if (Nr == 1) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 2) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 3) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 4) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 5) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 6) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 7) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 8) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 9) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 10) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 11) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 12) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 13) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 14) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 15) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 16) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 17) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 18) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 19) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 20) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 21) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 22) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 23) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 24) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 25) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 26) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 27) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 28) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 29) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 30) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 31) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 32) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 33) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 34) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 35) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 36) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 37) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 38) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 39) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 40) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 41) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 42) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 43) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 44) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 45) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 46) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 47) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 48) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 49) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 50) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 51) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 52) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 53) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 54) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 55) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 56) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 57) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 58) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 59) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 60) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 61) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 62) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 63) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 64) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 65) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 66) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 67) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 68) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 69) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 70) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 71) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 72) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 73) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 74) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 75) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 76) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 77) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 78) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 79) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 80) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 81) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 82) client.Inventory.Add(730003, 0, 1);
                                        if (Nr == 83) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 84) client.Inventory.Add(730003, 0, 1);
                                        if (Nr == 85) client.Inventory.Add(730003, 0, 1);
                                        if (Nr == 86) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 87) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 88) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 89) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 90) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 91) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 92) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 93) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 94) client.Inventory.Add(722134, 0, 1);
                                        if (Nr == 95) client.Inventory.Add(722134, 0, 1);
                                        if (Nr == 96) client.Inventory.Add(722133, 0, 1);
                                        if (Nr == 97) client.Inventory.Add(722132, 0, 1);
                                        if (Nr == 98) client.Inventory.Add(722131, 0, 1);
                                        if (Nr == 99) client.Inventory.Add(722131, 0, 1);
                                        if (Nr == 100) client.Inventory.Add(721962, 0, 1);
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry ,You don't have enough LoveFireworks1 !");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(85);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 2:
                                {
                                    if (client.Inventory.Contains(722317, 1))
                                    {
                                        client.Inventory.Remove(722317, 1);
                                        client.Entity.ConquerPoints += 60000;
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry ,You don't have enough LoveFireworks2 !");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(85);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 3:
                                {
                                    if (client.Inventory.Contains(722318, 1))
                                    {
                                        client.Inventory.Remove(722318, 1);
                                        client.Entity.ConquerPoints += 70000;
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry ,You don't have enough LoveFireworks3 !");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(85);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 4:
                                {
                                    if (client.Inventory.Contains(722319, 1))
                                    {
                                        client.Inventory.Remove(722319, 1);
                                        client.Entity.ConquerPoints += 80000;
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry ,You don't have enough LoveFireworks4 !");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(85);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 6:
                                {
                                    client.Entity.Teleport(5591, 207, 210);
                                    break;
                                }
                            case 5:
                                {
                                    if (client.Inventory.Contains(722320, 1))
                                    {
                                        client.Inventory.Remove(722320, 1);
                                        client.Entity.RacePoints += 1;
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry ,You don't have enough LoveFireworks5 !");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(85);
                                        dialog.Send();
                                    }
                                    break;
                                }
                        }
                        break;
                    }

                #endregion Prize Seller

                #region 77772

                case 66670:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Hello! I'm a FireworksNo.3 ");
                                    dialog.Text("I can Change LoveFireworks To 50 k cps or teleport to monster to get LoveFireworks (1.2.3.4.5) !");
                                    dialog.Option("Change LoveFireworks1 ( 50k cps ).", 1);
                                    dialog.Option("Change LoveFireworks2 ( 60k cps ).", 2);
                                    dialog.Option("Change LoveFireworks3 (70k cps).", 3);
                                    dialog.Option("Change LoveFireworks4 (80k cps )", 4);
                                    dialog.Option("Change LoveFireworks5 (1 Pts).", 5);
                                    dialog.Option("Teleport To Monster .", 6);
                                    dialog.Option("Just passing by.", 255);
                                    dialog.Avatar(85);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    if (client.Inventory.Contains(722316, 1))
                                    {
                                        client.Inventory.Remove(722316, 1);
                                        Random R = new Random();
                                        int Nr = R.Next(1, 100);
                                        if (Nr == 1) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 2) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 3) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 4) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 5) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 6) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 7) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 8) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 9) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 10) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 11) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 12) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 13) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 14) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 15) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 16) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 17) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 18) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 19) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 20) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 21) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 22) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 23) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 24) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 25) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 26) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 27) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 28) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 29) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 30) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 31) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 32) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 33) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 34) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 35) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 36) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 37) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 38) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 39) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 40) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 41) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 42) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 43) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 44) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 45) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 46) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 47) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 48) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 49) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 50) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 51) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 52) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 53) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 54) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 55) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 56) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 57) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 58) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 59) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 60) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 61) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 62) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 63) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 64) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 65) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 66) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 67) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 68) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 69) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 70) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 71) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 72) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 73) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 74) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 75) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 76) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 77) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 78) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 79) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 80) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 81) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 82) client.Inventory.Add(730003, 0, 1);
                                        if (Nr == 83) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 84) client.Inventory.Add(730003, 0, 1);
                                        if (Nr == 85) client.Inventory.Add(730003, 0, 1);
                                        if (Nr == 86) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 87) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 88) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 89) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 90) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 91) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 92) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 93) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 94) client.Inventory.Add(722134, 0, 1);
                                        if (Nr == 95) client.Inventory.Add(722134, 0, 1);
                                        if (Nr == 96) client.Inventory.Add(722133, 0, 1);
                                        if (Nr == 97) client.Inventory.Add(722132, 0, 1);
                                        if (Nr == 98) client.Inventory.Add(722131, 0, 1);
                                        if (Nr == 99) client.Inventory.Add(722131, 0, 1);
                                        if (Nr == 100) client.Inventory.Add(721962, 0, 1);
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry ,You don't have enough LoveFireworks1 !");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(85);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 2:
                                {
                                    if (client.Inventory.Contains(722317, 1))
                                    {
                                        client.Inventory.Remove(722317, 1);
                                        Random R = new Random();
                                        int Nr = R.Next(1, 100);
                                        if (Nr == 1) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 2) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 3) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 4) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 5) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 6) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 7) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 8) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 9) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 10) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 11) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 12) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 13) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 14) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 15) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 16) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 17) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 18) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 19) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 20) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 21) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 22) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 23) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 24) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 25) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 26) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 27) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 28) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 29) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 30) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 31) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 32) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 33) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 34) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 35) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 36) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 37) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 38) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 39) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 40) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 41) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 42) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 43) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 44) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 45) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 46) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 47) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 48) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 49) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 50) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 51) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 52) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 53) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 54) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 55) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 56) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 57) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 58) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 59) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 60) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 61) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 62) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 63) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 64) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 65) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 66) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 67) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 68) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 69) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 70) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 71) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 72) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 73) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 74) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 75) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 76) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 77) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 78) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 79) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 80) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 81) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 82) client.Inventory.Add(730003, 0, 1);
                                        if (Nr == 83) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 84) client.Inventory.Add(730003, 0, 1);
                                        if (Nr == 85) client.Inventory.Add(730003, 0, 1);
                                        if (Nr == 86) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 87) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 88) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 89) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 90) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 91) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 92) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 93) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 94) client.Inventory.Add(722134, 0, 1);
                                        if (Nr == 95) client.Inventory.Add(722134, 0, 1);
                                        if (Nr == 96) client.Inventory.Add(722133, 0, 1);
                                        if (Nr == 97) client.Inventory.Add(722132, 0, 1);
                                        if (Nr == 98) client.Inventory.Add(722131, 0, 1);
                                        if (Nr == 99) client.Inventory.Add(722131, 0, 1);
                                        if (Nr == 100) client.Inventory.Add(721962, 0, 1);
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry ,You don't have enough LoveFireworks2 !");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(85);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 3:
                                {
                                    if (client.Inventory.Contains(722318, 1))
                                    {
                                        client.Inventory.Remove(722318, 1);
                                        Random R = new Random();
                                        int Nr = R.Next(1, 100);
                                        if (Nr == 1) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 2) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 3) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 4) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 5) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 6) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 7) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 8) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 9) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 10) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 11) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 12) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 13) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 14) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 15) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 16) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 17) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 18) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 19) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 20) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 21) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 22) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 23) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 24) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 25) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 26) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 27) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 28) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 29) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 30) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 31) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 32) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 33) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 34) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 35) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 36) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 37) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 38) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 39) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 40) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 41) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 42) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 43) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 44) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 45) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 46) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 47) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 48) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 49) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 50) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 51) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 52) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 53) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 54) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 55) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 56) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 57) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 58) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 59) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 60) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 61) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 62) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 63) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 64) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 65) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 66) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 67) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 68) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 69) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 70) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 71) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 72) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 73) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 74) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 75) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 76) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 77) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 78) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 79) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 80) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 81) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 82) client.Inventory.Add(730003, 0, 1);
                                        if (Nr == 83) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 84) client.Inventory.Add(730003, 0, 1);
                                        if (Nr == 85) client.Inventory.Add(730003, 0, 1);
                                        if (Nr == 86) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 87) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 88) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 89) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 90) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 91) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 92) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 93) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 94) client.Inventory.Add(722134, 0, 1);
                                        if (Nr == 95) client.Inventory.Add(722134, 0, 1);
                                        if (Nr == 96) client.Inventory.Add(722133, 0, 1);
                                        if (Nr == 97) client.Inventory.Add(722132, 0, 1);
                                        if (Nr == 98) client.Inventory.Add(722131, 0, 1);
                                        if (Nr == 99) client.Inventory.Add(722131, 0, 1);
                                        if (Nr == 100) client.Inventory.Add(721962, 0, 1);
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry ,You don't have enough LoveFireworks3 !");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(85);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 4:
                                {
                                    if (client.Inventory.Contains(722319, 1))
                                    {
                                        client.Inventory.Remove(722319, 1);
                                        Random R = new Random();
                                        int Nr = R.Next(1, 100);
                                        if (Nr == 1) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 2) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 3) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 4) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 5) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 6) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 7) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 8) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 9) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 10) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 11) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 12) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 13) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 14) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 15) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 16) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 17) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 18) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 19) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 20) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 21) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 22) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 23) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 24) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 25) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 26) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 27) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 28) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 29) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 30) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 31) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 32) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 33) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 34) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 35) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 36) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 37) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 38) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 39) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 40) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 41) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 42) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 43) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 44) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 45) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 46) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 47) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 48) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 49) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 50) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 51) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 52) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 53) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 54) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 55) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 56) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 57) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 58) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 59) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 60) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 61) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 62) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 63) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 64) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 65) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 66) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 67) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 68) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 69) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 70) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 71) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 72) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 73) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 74) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 75) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 76) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 77) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 78) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 79) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 80) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 81) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 82) client.Inventory.Add(730003, 0, 1);
                                        if (Nr == 83) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 84) client.Inventory.Add(730003, 0, 1);
                                        if (Nr == 85) client.Inventory.Add(730003, 0, 1);
                                        if (Nr == 86) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 87) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 88) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 89) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 90) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 91) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 92) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 93) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 94) client.Inventory.Add(722134, 0, 1);
                                        if (Nr == 95) client.Inventory.Add(722134, 0, 1);
                                        if (Nr == 96) client.Inventory.Add(722133, 0, 1);
                                        if (Nr == 97) client.Inventory.Add(722132, 0, 1);
                                        if (Nr == 98) client.Inventory.Add(722131, 0, 1);
                                        if (Nr == 99) client.Inventory.Add(722131, 0, 1);
                                        if (Nr == 100) client.Inventory.Add(721962, 0, 1);
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry ,You don't have enough LoveFireworks4 !");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(85);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 6:
                                {
                                    client.Entity.Teleport(5591, 207, 210);
                                    break;
                                }
                            case 5:
                                {
                                    if (client.Inventory.Contains(722320, 1))
                                    {
                                        client.Inventory.Remove(722320, 1);
                                        client.Entity.RacePoints += 1;
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry ,You don't have enough LoveFireworks5 !");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(85);
                                        dialog.Send();
                                    }
                                    break;
                                }
                        }
                        break;
                    }

                #endregion Prize Seller

                #region 77772

                case 66671:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Hello! I'm a FireworksNo.4 ");
                                    dialog.Text("I can Change LoveFireworks To 50 k cps or teleport to monster to get LoveFireworks (1.2.3.4.5) !");
                                    dialog.Option("Change LoveFireworks1 ( 50k cps ).", 1);
                                    dialog.Option("Change LoveFireworks2 ( 60k cps ).", 2);
                                    dialog.Option("Change LoveFireworks3 (70k cps).", 3);
                                    dialog.Option("Change LoveFireworks4 (80k cps )", 4);
                                    dialog.Option("Change LoveFireworks5 (1 Pts).", 5);
                                    dialog.Option("Teleport To Monster .", 6);
                                    dialog.Option("Just passing by.", 255);
                                    dialog.Avatar(85);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    if (client.Inventory.Contains(722316, 1))
                                    {
                                        client.Inventory.Remove(722316, 1);
                                        Random R = new Random();
                                        int Nr = R.Next(1, 100);
                                        if (Nr == 1) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 2) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 3) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 4) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 5) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 6) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 7) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 8) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 9) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 10) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 11) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 12) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 13) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 14) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 15) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 16) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 17) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 18) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 19) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 20) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 21) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 22) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 23) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 24) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 25) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 26) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 27) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 28) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 29) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 30) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 31) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 32) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 33) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 34) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 35) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 36) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 37) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 38) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 39) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 40) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 41) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 42) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 43) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 44) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 45) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 46) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 47) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 48) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 49) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 50) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 51) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 52) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 53) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 54) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 55) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 56) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 57) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 58) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 59) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 60) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 61) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 62) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 63) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 64) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 65) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 66) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 67) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 68) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 69) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 70) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 71) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 72) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 73) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 74) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 75) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 76) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 77) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 78) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 79) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 80) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 81) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 82) client.Inventory.Add(730003, 0, 1);
                                        if (Nr == 83) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 84) client.Inventory.Add(730003, 0, 1);
                                        if (Nr == 85) client.Inventory.Add(730003, 0, 1);
                                        if (Nr == 86) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 87) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 88) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 89) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 90) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 91) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 92) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 93) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 94) client.Inventory.Add(722134, 0, 1);
                                        if (Nr == 95) client.Inventory.Add(722134, 0, 1);
                                        if (Nr == 96) client.Inventory.Add(722133, 0, 1);
                                        if (Nr == 97) client.Inventory.Add(722132, 0, 1);
                                        if (Nr == 98) client.Inventory.Add(722131, 0, 1);
                                        if (Nr == 99) client.Inventory.Add(722131, 0, 1);
                                        if (Nr == 100) client.Inventory.Add(721962, 0, 1);
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry ,You don't have enough LoveFireworks1 !");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(85);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 2:
                                {
                                    if (client.Inventory.Contains(722317, 1))
                                    {
                                        client.Inventory.Remove(722317, 1);
                                        Random R = new Random();
                                        int Nr = R.Next(1, 100);
                                        if (Nr == 1) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 2) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 3) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 4) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 5) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 6) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 7) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 8) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 9) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 10) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 11) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 12) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 13) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 14) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 15) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 16) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 17) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 18) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 19) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 20) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 21) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 22) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 23) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 24) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 25) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 26) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 27) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 28) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 29) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 30) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 31) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 32) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 33) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 34) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 35) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 36) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 37) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 38) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 39) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 40) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 41) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 42) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 43) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 44) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 45) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 46) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 47) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 48) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 49) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 50) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 51) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 52) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 53) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 54) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 55) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 56) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 57) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 58) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 59) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 60) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 61) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 62) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 63) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 64) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 65) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 66) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 67) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 68) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 69) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 70) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 71) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 72) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 73) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 74) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 75) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 76) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 77) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 78) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 79) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 80) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 81) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 82) client.Inventory.Add(730003, 0, 1);
                                        if (Nr == 83) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 84) client.Inventory.Add(730003, 0, 1);
                                        if (Nr == 85) client.Inventory.Add(730003, 0, 1);
                                        if (Nr == 86) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 87) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 88) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 89) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 90) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 91) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 92) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 93) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 94) client.Inventory.Add(722134, 0, 1);
                                        if (Nr == 95) client.Inventory.Add(722134, 0, 1);
                                        if (Nr == 96) client.Inventory.Add(722133, 0, 1);
                                        if (Nr == 97) client.Inventory.Add(722132, 0, 1);
                                        if (Nr == 98) client.Inventory.Add(722131, 0, 1);
                                        if (Nr == 99) client.Inventory.Add(722131, 0, 1);
                                        if (Nr == 100) client.Inventory.Add(721962, 0, 1);
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry ,You don't have enough LoveFireworks2 !");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(85);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 3:
                                {
                                    if (client.Inventory.Contains(722318, 1))
                                    {
                                        client.Inventory.Remove(722318, 1);
                                        Random R = new Random();
                                        int Nr = R.Next(1, 100);
                                        if (Nr == 1) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 2) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 3) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 4) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 5) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 6) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 7) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 8) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 9) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 10) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 11) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 12) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 13) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 14) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 15) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 16) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 17) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 18) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 19) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 20) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 21) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 22) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 23) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 24) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 25) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 26) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 27) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 28) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 29) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 30) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 31) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 32) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 33) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 34) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 35) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 36) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 37) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 38) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 39) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 40) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 41) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 42) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 43) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 44) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 45) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 46) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 47) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 48) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 49) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 50) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 51) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 52) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 53) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 54) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 55) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 56) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 57) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 58) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 59) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 60) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 61) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 62) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 63) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 64) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 65) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 66) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 67) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 68) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 69) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 70) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 71) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 72) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 73) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 74) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 75) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 76) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 77) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 78) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 79) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 80) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 81) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 82) client.Inventory.Add(730003, 0, 1);
                                        if (Nr == 83) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 84) client.Inventory.Add(730003, 0, 1);
                                        if (Nr == 85) client.Inventory.Add(730003, 0, 1);
                                        if (Nr == 86) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 87) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 88) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 89) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 90) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 91) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 92) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 93) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 94) client.Inventory.Add(722134, 0, 1);
                                        if (Nr == 95) client.Inventory.Add(722134, 0, 1);
                                        if (Nr == 96) client.Inventory.Add(722133, 0, 1);
                                        if (Nr == 97) client.Inventory.Add(722132, 0, 1);
                                        if (Nr == 98) client.Inventory.Add(722131, 0, 1);
                                        if (Nr == 99) client.Inventory.Add(722131, 0, 1);
                                        if (Nr == 100) client.Inventory.Add(721962, 0, 1);
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry ,You don't have enough LoveFireworks3 !");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(85);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 4:
                                {
                                    if (client.Inventory.Contains(722319, 1))
                                    {
                                        client.Inventory.Remove(722319, 1);
                                        Random R = new Random();
                                        int Nr = R.Next(1, 100);
                                        if (Nr == 1) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 2) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 3) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 4) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 5) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 6) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 7) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 8) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 9) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 10) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 11) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 12) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 13) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 14) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 15) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 16) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 17) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 18) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 19) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 20) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 21) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 22) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 23) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 24) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 25) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 26) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 27) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 28) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 29) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 30) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 31) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 32) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 33) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 34) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 35) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 36) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 37) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 38) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 39) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 40) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 41) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 42) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 43) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 44) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 45) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 46) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 47) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 48) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 49) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 50) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 51) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 52) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 53) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 54) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 55) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 56) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 57) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 58) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 59) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 60) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 61) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 62) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 63) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 64) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 65) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 66) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 67) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 68) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 69) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 70) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 71) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 72) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 73) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 74) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 75) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 76) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 77) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 78) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 79) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 80) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 81) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 82) client.Inventory.Add(730003, 0, 1);
                                        if (Nr == 83) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 84) client.Inventory.Add(730003, 0, 1);
                                        if (Nr == 85) client.Inventory.Add(730003, 0, 1);
                                        if (Nr == 86) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 87) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 88) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 89) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 90) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 91) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 92) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 93) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 94) client.Inventory.Add(722134, 0, 1);
                                        if (Nr == 95) client.Inventory.Add(722134, 0, 1);
                                        if (Nr == 96) client.Inventory.Add(722133, 0, 1);
                                        if (Nr == 97) client.Inventory.Add(722132, 0, 1);
                                        if (Nr == 98) client.Inventory.Add(722131, 0, 1);
                                        if (Nr == 99) client.Inventory.Add(722131, 0, 1);
                                        if (Nr == 100) client.Inventory.Add(721962, 0, 1);
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry ,You don't have enough LoveFireworks4 !");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(85);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 6:
                                {
                                    client.Entity.Teleport(5591, 207, 210);
                                    break;
                                }
                            case 5:
                                {
                                    if (client.Inventory.Contains(722320, 1))
                                    {
                                        client.Inventory.Remove(722320, 1);
                                        client.Entity.RacePoints += 1;
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry ,You don't have enough LoveFireworks5 !");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(85);
                                        dialog.Send();
                                    }
                                    break;
                                }
                        }
                        break;
                    }

                #endregion Prize Seller

                #region 77772

                case 66672:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Hello! I'm a FireworksNo.5 ");
                                    dialog.Text("I can Change LoveFireworks To 50 k cps or teleport to monster to get LoveFireworks (1.2.3.4.5) !");
                                    dialog.Option("Change LoveFireworks1 ( 50k cps ).", 1);
                                    dialog.Option("Change LoveFireworks2 ( 60k cps ).", 2);
                                    dialog.Option("Change LoveFireworks3 (70k cps).", 3);
                                    dialog.Option("Change LoveFireworks4 (80k cps )", 4);
                                    dialog.Option("Change LoveFireworks5 (1 Pts).", 5);
                                    dialog.Option("Teleport To Monster .", 6);
                                    dialog.Option("Just passing by.", 255);
                                    dialog.Avatar(85);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    if (client.Inventory.Contains(722316, 1))
                                    {
                                        client.Inventory.Remove(722316, 1);
                                        Random R = new Random();
                                        int Nr = R.Next(1, 100);
                                        if (Nr == 1) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 2) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 3) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 4) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 5) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 6) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 7) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 8) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 9) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 10) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 11) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 12) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 13) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 14) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 15) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 16) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 17) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 18) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 19) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 20) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 21) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 22) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 23) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 24) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 25) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 26) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 27) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 28) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 29) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 30) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 31) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 32) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 33) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 34) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 35) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 36) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 37) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 38) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 39) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 40) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 41) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 42) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 43) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 44) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 45) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 46) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 47) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 48) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 49) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 50) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 51) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 52) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 53) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 54) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 55) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 56) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 57) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 58) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 59) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 60) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 61) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 62) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 63) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 64) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 65) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 66) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 67) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 68) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 69) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 70) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 71) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 72) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 73) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 74) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 75) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 76) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 77) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 78) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 79) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 80) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 81) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 82) client.Inventory.Add(730003, 0, 1);
                                        if (Nr == 83) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 84) client.Inventory.Add(730003, 0, 1);
                                        if (Nr == 85) client.Inventory.Add(730003, 0, 1);
                                        if (Nr == 86) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 87) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 88) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 89) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 90) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 91) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 92) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 93) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 94) client.Inventory.Add(722134, 0, 1);
                                        if (Nr == 95) client.Inventory.Add(722134, 0, 1);
                                        if (Nr == 96) client.Inventory.Add(722133, 0, 1);
                                        if (Nr == 97) client.Inventory.Add(722132, 0, 1);
                                        if (Nr == 98) client.Inventory.Add(722131, 0, 1);
                                        if (Nr == 99) client.Inventory.Add(722131, 0, 1);
                                        if (Nr == 100) client.Inventory.Add(721962, 0, 1);
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry ,You don't have enough LoveFireworks1 !");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(85);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 2:
                                {
                                    if (client.Inventory.Contains(722317, 1))
                                    {
                                        client.Inventory.Remove(722317, 1);
                                        Random R = new Random();
                                        int Nr = R.Next(1, 100);
                                        if (Nr == 1) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 2) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 3) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 4) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 5) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 6) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 7) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 8) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 9) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 10) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 11) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 12) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 13) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 14) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 15) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 16) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 17) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 18) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 19) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 20) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 21) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 22) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 23) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 24) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 25) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 26) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 27) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 28) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 29) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 30) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 31) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 32) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 33) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 34) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 35) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 36) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 37) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 38) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 39) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 40) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 41) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 42) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 43) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 44) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 45) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 46) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 47) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 48) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 49) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 50) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 51) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 52) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 53) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 54) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 55) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 56) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 57) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 58) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 59) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 60) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 61) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 62) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 63) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 64) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 65) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 66) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 67) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 68) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 69) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 70) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 71) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 72) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 73) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 74) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 75) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 76) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 77) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 78) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 79) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 80) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 81) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 82) client.Inventory.Add(730003, 0, 1);
                                        if (Nr == 83) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 84) client.Inventory.Add(730003, 0, 1);
                                        if (Nr == 85) client.Inventory.Add(730003, 0, 1);
                                        if (Nr == 86) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 87) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 88) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 89) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 90) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 91) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 92) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 93) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 94) client.Inventory.Add(722134, 0, 1);
                                        if (Nr == 95) client.Inventory.Add(722134, 0, 1);
                                        if (Nr == 96) client.Inventory.Add(722133, 0, 1);
                                        if (Nr == 97) client.Inventory.Add(722132, 0, 1);
                                        if (Nr == 98) client.Inventory.Add(722131, 0, 1);
                                        if (Nr == 99) client.Inventory.Add(722131, 0, 1);
                                        if (Nr == 100) client.Inventory.Add(721962, 0, 1);
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry ,You don't have enough LoveFireworks2 !");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(85);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 3:
                                {
                                    if (client.Inventory.Contains(722318, 1))
                                    {
                                        client.Inventory.Remove(722318, 1);
                                        Random R = new Random();
                                        int Nr = R.Next(1, 100);
                                        if (Nr == 1) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 2) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 3) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 4) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 5) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 6) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 7) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 8) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 9) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 10) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 11) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 12) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 13) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 14) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 15) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 16) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 17) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 18) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 19) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 20) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 21) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 22) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 23) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 24) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 25) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 26) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 27) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 28) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 29) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 30) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 31) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 32) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 33) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 34) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 35) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 36) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 37) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 38) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 39) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 40) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 41) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 42) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 43) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 44) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 45) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 46) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 47) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 48) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 49) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 50) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 51) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 52) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 53) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 54) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 55) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 56) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 57) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 58) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 59) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 60) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 61) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 62) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 63) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 64) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 65) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 66) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 67) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 68) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 69) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 70) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 71) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 72) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 73) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 74) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 75) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 76) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 77) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 78) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 79) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 80) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 81) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 82) client.Inventory.Add(730003, 0, 1);
                                        if (Nr == 83) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 84) client.Inventory.Add(730003, 0, 1);
                                        if (Nr == 85) client.Inventory.Add(730003, 0, 1);
                                        if (Nr == 86) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 87) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 88) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 89) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 90) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 91) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 92) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 93) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 94) client.Inventory.Add(722134, 0, 1);
                                        if (Nr == 95) client.Inventory.Add(722134, 0, 1);
                                        if (Nr == 96) client.Inventory.Add(722133, 0, 1);
                                        if (Nr == 97) client.Inventory.Add(722132, 0, 1);
                                        if (Nr == 98) client.Inventory.Add(722131, 0, 1);
                                        if (Nr == 99) client.Inventory.Add(722131, 0, 1);
                                        if (Nr == 100) client.Inventory.Add(721962, 0, 1);
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry ,You don't have enough LoveFireworks3 !");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(85);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 4:
                                {
                                    if (client.Inventory.Contains(722319, 1))
                                    {
                                        client.Inventory.Remove(722319, 1);
                                        Random R = new Random();
                                        int Nr = R.Next(1, 100);
                                        if (Nr == 1) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 2) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 3) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 4) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 5) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 6) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 7) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 8) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 9) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 10) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 11) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 12) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 13) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 14) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 15) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 16) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 17) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 18) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 19) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 20) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 21) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 22) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 23) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 24) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 25) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 26) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 27) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 28) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 29) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 30) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 31) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 32) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 33) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 34) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 35) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 36) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 37) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 38) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 39) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 40) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 41) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 42) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 43) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 44) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 45) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 46) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 47) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 48) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 49) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 50) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 51) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 52) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 53) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 54) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 55) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 56) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 57) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 58) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 59) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 60) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 61) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 62) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 63) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 64) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 65) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 66) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 67) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 68) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 69) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 70) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 71) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 72) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 73) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 74) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 75) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 76) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 77) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 78) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 79) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 80) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 81) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 82) client.Inventory.Add(730003, 0, 1);
                                        if (Nr == 83) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 84) client.Inventory.Add(730003, 0, 1);
                                        if (Nr == 85) client.Inventory.Add(730003, 0, 1);
                                        if (Nr == 86) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 87) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 88) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 89) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 90) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 91) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 92) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 93) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 94) client.Inventory.Add(722134, 0, 1);
                                        if (Nr == 95) client.Inventory.Add(722134, 0, 1);
                                        if (Nr == 96) client.Inventory.Add(722133, 0, 1);
                                        if (Nr == 97) client.Inventory.Add(722132, 0, 1);
                                        if (Nr == 98) client.Inventory.Add(722131, 0, 1);
                                        if (Nr == 99) client.Inventory.Add(722131, 0, 1);
                                        if (Nr == 100) client.Inventory.Add(721962, 0, 1);
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry ,You don't have enough LoveFireworks4 !");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(85);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 6:
                                {
                                    client.Entity.Teleport(5591, 207, 210);
                                    break;
                                }
                            case 5:
                                {
                                    if (client.Inventory.Contains(722320, 1))
                                    {
                                        client.Inventory.Remove(722320, 1);
                                        client.Entity.RacePoints += 1;
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry ,You don't have enough LoveFireworks5 !");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(85);
                                        dialog.Send();
                                    }
                                    break;
                                }
                        }
                        break;
                    }

                #endregion Prize Seller

                #region 77772

                case 66690:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Hello!  " + client.Entity.Name + "It's time to celebrate the New Year and is the work of the biggest surprise very, very valuable prizes ");
                                    //  dialog.Text("I can Change LoveFireworks To 50 k cps or teleport to monster to get LoveFireworks (1.2.3.4.5) !");
                                    // dialog.Option("Change LoveFireworks1 ( 50k cps ).", 1);
                                    // dialog.Option("Change LoveFireworks2 ( 60k cps ).", 2);
                                    // dialog.Option("Change LoveFireworks3 (70k cps).", 3);
                                    // dialog.Option("Change LoveFireworks4 (80k cps )", 4);
                                    //  dialog.Option("Change LoveFireworks5 (1 Pts).", 5);
                                    dialog.Option("Teleport To Celebration Area .", 6);
                                    dialog.Option("No , Thanks.", 255);
                                    dialog.Avatar(85);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    if (client.Inventory.Contains(722316, 1))
                                    {
                                        client.Inventory.Remove(722316, 1);
                                        client.Entity.ConquerPoints += 50000;
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry ,You don't have enough LoveFireworks1 !");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(85);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 2:
                                {
                                    if (client.Inventory.Contains(722317, 1))
                                    {
                                        client.Inventory.Remove(722317, 1);
                                        client.Entity.ConquerPoints += 60000;
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry ,You don't have enough LoveFireworks2 !");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(85);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 3:
                                {
                                    if (client.Inventory.Contains(722318, 1))
                                    {
                                        client.Inventory.Remove(722318, 1);
                                        client.Entity.ConquerPoints += 70000;
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry ,You don't have enough LoveFireworks3 !");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(85);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 4:
                                {
                                    if (client.Inventory.Contains(722319, 1))
                                    {
                                        client.Inventory.Remove(722319, 1);
                                        client.Entity.ConquerPoints += 80000;
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry ,You don't have enough LoveFireworks4 !");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(85);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 6:
                                {
                                    client.Entity.Teleport(1002, 495, 447);
                                    break;
                                }
                            case 5:
                                {
                                    if (client.Inventory.Contains(722320, 1))
                                    {
                                        client.Inventory.Remove(722320, 1);
                                        client.Entity.ConquerPoints += 80000;
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry ,You don't have enough LoveFireworks5 !");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(85);
                                        dialog.Send();
                                    }
                                    break;
                                }
                        }
                        break;
                    }

                #endregion Prize Seller

                #region 77772

                case 66667:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Hello!  " + client.Entity.Name + " I'm luckly tree i can change DB Scroll For any fire Work ");
                                    dialog.Text("SacredFirework , RoyalFirework , DragonFirework , MonarchFirework , InfantaFirework , King`sFireworks !");
                                    dialog.Text("Meteor , DragonBall , +1 Stone , +2 Stone , +3 Stone , +4 Stone !");
                                    dialog.Option("Change DB Scroll Now.", 1);
                                    // dialog.Option("Change LoveFireworks2 ( 60k cps ).", 2);
                                    // dialog.Option("Change LoveFireworks3 (70k cps).", 3);
                                    // dialog.Option("Change LoveFireworks4 (80k cps )", 4);
                                    //  dialog.Option("Change LoveFireworks5 (1 Pts).", 5);
                                    // dialog.Option("Change Dragon Ball for Firework item .", 6);
                                    dialog.Option("No , Thanks.", 255);
                                    dialog.Avatar(85);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    if (client.Inventory.Contains(720028, 1))
                                    {
                                        client.Inventory.Remove(720028, 1);
                                        Random R = new Random();
                                        int Nr = R.Next(1, 100);
                                        if (Nr == 1) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 2) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 3) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 4) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 5) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 6) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 7) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 8) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 9) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 10) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 11) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 12) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 13) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 14) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 15) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 16) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 17) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 18) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 19) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 20) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 21) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 22) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 23) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 24) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 25) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 26) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 27) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 28) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 29) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 30) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 31) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 32) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 33) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 34) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 35) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 36) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 37) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 38) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 39) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 40) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 41) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 42) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 43) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 44) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 45) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 46) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 47) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 48) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 49) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 50) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 51) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 52) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 53) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 54) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 55) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 56) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 57) client.Inventory.Add(1088000, 0, 1);
                                        if (Nr == 58) client.Inventory.Add(1088001, 0, 1);
                                        if (Nr == 59) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 60) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 61) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 62) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 63) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 64) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 65) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 66) client.Inventory.Add(721962, 0, 1);
                                        if (Nr == 67) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 68) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 69) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 70) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 71) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 72) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 73) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 74) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 75) client.Inventory.Add(730001, 0, 1);
                                        if (Nr == 76) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 77) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 78) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 79) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 80) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 81) client.Inventory.Add(730002, 0, 1);
                                        if (Nr == 82) client.Inventory.Add(730003, 0, 1);
                                        if (Nr == 83) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 84) client.Inventory.Add(730003, 0, 1);
                                        if (Nr == 85) client.Inventory.Add(730003, 0, 1);
                                        if (Nr == 86) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 87) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 88) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 89) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 90) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 91) client.Inventory.Add(730004, 0, 1);
                                        if (Nr == 92) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 93) client.Inventory.Add(722158, 0, 1);
                                        if (Nr == 94) client.Inventory.Add(722134, 0, 1);
                                        if (Nr == 95) client.Inventory.Add(722134, 0, 1);
                                        if (Nr == 96) client.Inventory.Add(722133, 0, 1);
                                        if (Nr == 97) client.Inventory.Add(722132, 0, 1);
                                        if (Nr == 98) client.Inventory.Add(722131, 0, 1);
                                        if (Nr == 99) client.Inventory.Add(722131, 0, 1);
                                        if (Nr == 100) client.Inventory.Add(721962, 0, 1);
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry ,You don't have enough DB Scroll !");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(85);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 2:
                                {
                                    if (client.Inventory.Contains(722317, 1))
                                    {
                                        client.Inventory.Remove(722317, 1);
                                        client.Entity.ConquerPoints += 60000;
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry ,You don't have enough LoveFireworks2 !");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(85);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 3:
                                {
                                    if (client.Inventory.Contains(722318, 1))
                                    {
                                        client.Inventory.Remove(722318, 1);
                                        client.Entity.ConquerPoints += 70000;
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry ,You don't have enough LoveFireworks3 !");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(85);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 4:
                                {
                                    if (client.Inventory.Contains(722319, 1))
                                    {
                                        client.Inventory.Remove(722319, 1);
                                        client.Entity.ConquerPoints += 80000;
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry ,You don't have enough LoveFireworks4 !");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(85);
                                        dialog.Send();
                                    }
                                    break;
                                }
                            case 6:
                                {
                                    client.Entity.Teleport(1002, 495, 447);
                                    break;
                                }
                            case 5:
                                {
                                    if (client.Inventory.Contains(722320, 1))
                                    {
                                        client.Inventory.Remove(722320, 1);
                                        client.Entity.ConquerPoints += 80000;
                                    }
                                    else
                                    {
                                        dialog.Text("Sorry ,You don't have enough LoveFireworks5 !");
                                        dialog.Option("I see.", 255);
                                        dialog.Avatar(85);
                                        dialog.Send();
                                    }
                                    break;
                                }
                        }
                        break;
                    }

                #endregion Prize Seller

                #region ChangePassword

                case 1061441: //WarehouseGuardian
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Hello. I'm the one that was choosen to set/change your account  password .you can change you password for 14 letters nubmer or characters.");

                                    dialog.Option("I want to change the password.", 2);
                                    // dialog.Option("I want to remove the password.", 3);

                                    dialog.Option("Forget it.", 255);
                                    dialog.Send();
                                    break;
                                }

                            #region Change password

                            case 2:
                                {
                                    if (client.Account.Password != "")
                                    {
                                        dialog.Text("Please insert the old password you have now.");
                                        dialog.Input("Here:", 6, 14);
                                        dialog.Option("Forget it.", 255);
                                    }
                                    else
                                    {
                                        dialog.Text("You don't have a password set.");
                                        dialog.Option("Alright.", 255);
                                    }
                                    dialog.Send();
                                    break;
                                }
                            case 6:
                                {
                                    if (client.Account.Password != "")
                                    {
                                        if (npcRequest.Input.Length <= 14)
                                        {
                                            if (client.Account.Password == npcRequest.Input)
                                            {
                                                dialog.Text("Please insert the password again.");
                                                dialog.Input("Here:", 7, 14);
                                                dialog.Option("Forget it.", 255);
                                            }
                                            else
                                            {
                                                dialog.Text("Wrong password. Try again?");
                                                dialog.Input("Here:", 6, 14);
                                                dialog.Option("Alright.", 255);
                                            }
                                        }
                                        else
                                        {
                                            dialog.Text("Invalid password, please try again.");
                                            dialog.Input("Here:", 6, 14);
                                            dialog.Option("Alright.", 255);
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("You don't have a password set.");
                                        dialog.Option("Alright.", 255);
                                    }
                                    dialog.Send();
                                    break;
                                }
                            case 7:
                                {
                                    if (client.Account.Password != "")
                                    {
                                        if (npcRequest.Input.Length <= 14)
                                        {
                                            client.TempPassword = npcRequest.Input;
                                            dialog.Text("Please insert the password again.");
                                            dialog.Input("Here:", 8, 14);
                                            dialog.Option("Forget it.", 255);
                                        }
                                        else
                                        {
                                            dialog.Text("Invalid password, please try again.");
                                            dialog.Input("Here:", 7, 14);
                                            dialog.Option("Alright.", 255);
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("You don't have a password set.");
                                        dialog.Option("Alright.", 255);
                                    }
                                    dialog.Send();
                                    break;
                                }
                            case 8:
                                {
                                    if (client.Account.Password != "")
                                    {
                                        if (npcRequest.Input.Length <= 14)
                                        {
                                            if (client.TempPassword == npcRequest.Input)
                                            {
                                                client.TempPassword = "";
                                                client.Account.Password = npcRequest.Input;
                                                client.Account.Save();
                                                dialog.Text("Password changed!");
                                                dialog.Option("Thank you.", 255);
                                            }
                                            else
                                            {
                                                dialog.Text("Wrong password.");
                                                dialog.Input("Here:", 8, 14);
                                                dialog.Option("Alright.", 255);
                                            }
                                        }
                                        else
                                        {
                                            dialog.Text("Invalid password, please try again.");
                                            dialog.Input("Here:", 8, 14);
                                            dialog.Option("Alright.", 255);
                                        }
                                    }
                                    else
                                    {
                                        dialog.Text("You don't have a password set.");
                                        dialog.Option("Alright.", 255);
                                    }
                                    dialog.Send();
                                    break;
                                }

                            #endregion Change password
                        }
                        break;
                    }

                #endregion ChangePassword

                #region Adventure Zone
                #region ConductressBack1
                case 9994:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Do you want to back to the guild arena?");
                                    dialog.Option("Yes.", 1);
                                    dialog.Option("No.", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    client.Entity.Teleport(1038, 348, 339);
                                    break;
                                }
                        }
                        break;
                    }
                #endregion
                #region ConductressBack1
                case 9995:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Do you want to back to the guild arena?");
                                    dialog.Option("Yes.", 1);
                                    dialog.Option("No.", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    client.Entity.Teleport(1038, 348, 339);
                                    break;
                                }
                        }
                        break;
                    }
                #endregion
                #region ConductressBack1
                case 9996:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Do you want to back to the guild arena?");
                                    dialog.Option("Yes.", 1);
                                    dialog.Option("No.", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    client.Entity.Teleport(1038, 348, 339);
                                    break;
                                }
                        }
                        break;
                    }
                #endregion
                #region ConductressBack1
                case 9997:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Do you want to back to the guild arena?");
                                    dialog.Option("Yes.", 1);
                                    dialog.Option("No.", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    client.Entity.Teleport(1038, 348, 339);
                                    break;
                                }
                        }
                        break;
                    }
                #endregion
                #region Adv zone teleporter
                case 300655:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("I have just discovered a new place, where the turtle doves are so big, that they drop awesome items when they die. It's free, do you want to see it?");
                                    dialog.Option("Yes please.", 1);
                                    dialog.Option("No thank you.", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    client.Entity.Teleport(1210, 1029, 714);
                                    break;
                                }
                        }
                        break;
                    }
                #endregion
                #region Adv zone mine supervisor
                case 300652:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("In this mine, the minerals are very good. They are really expensive, would you like to enter?");
                                    dialog.Option("Yes please.", 1);
                                    dialog.Option("No thank you.", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    client.Entity.Teleport(1218, 30, 69);
                                    break;
                                }
                        }
                        break;
                    }
                #endregion
                #region Grandpa
                case 300653:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Would you like to advance?");
                                    dialog.Option("Yes.", 1);
                                    dialog.Option("No.", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    client.Entity.Teleport(1219, 448, 272);
                                    break;
                                }
                        }
                        break;
                    }
                #endregion
                #region Boatman
                case 300654:
                    {
                        switch (npcRequest.OptionID)
                        {
                            case 0:
                                {
                                    dialog.Text("Would you like to go in TwinCity?");
                                    dialog.Option("Yes.", 1);
                                    dialog.Option("No.", 255);
                                    dialog.Send();
                                    break;
                                }
                            case 1:
                                {
                                    client.Entity.Teleport(1002, 430, 380);
                                    break;
                                }
                        }
                        break;
                    }
                #endregion
                #endregion

                default:
                    {
                        if (client.Account.State == PhoenixProject.Database.AccountTable.AccountState.GameMaster || client.Account.State == PhoenixProject.Database.AccountTable.AccountState.ProjectManager)
                            client.Send(new Message("NpcID[" + client.ActiveNpc + "]", System.Drawing.Color.Red, Message.TopLeft));
                        break;
                    }
            }

            if (!dialog.Sent)
                if (dialog.Replies.Count > 1)
                    dialog.Send();
        }
    }
}
